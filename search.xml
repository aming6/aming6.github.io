<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>将前后端分离的SpringBoot+Vue项目合并</title>
      <link href="/2023/05/10/%E5%B0%86%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE%E5%90%88%E5%B9%B6/"/>
      <url>/2023/05/10/%E5%B0%86%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE%E5%90%88%E5%B9%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="将前后端分离的SpringBoot-Vue项目合并"><a href="#将前后端分离的SpringBoot-Vue项目合并" class="headerlink" title="将前后端分离的SpringBoot+Vue项目合并"></a>将前后端分离的SpringBoot+Vue项目合并</h1><p>1、首先是有这么两个应用，前端是vue项目，后端是springboot 构建的服务端</p><p>图</p><p>现在是需求是，这个项目很轻量级，完全没必要部署为两个应用，因此需要重新合并，具体步骤如下：</p><p>第一步：vue项目先打包，执行命令：npm run build，执行成功后，会在项目路径下多出一个dist文件夹，里面包含css+js+images+html等各种前端资源</p><p>图</p><p>2、把dist文件夹下面的文件，全部复制到后端项目的static目录下。</p><p>图</p><p>3、也是比较重要的异步，配置错误异常页面处理。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"> <span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>server<span class="token punctuation">.</span></span><span class="token class-name">ErrorPage</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>server<span class="token punctuation">.</span></span><span class="token class-name">ErrorPageRegistrar</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>server<span class="token punctuation">.</span></span><span class="token class-name">ErrorPageRegistry</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpStatus</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span><span class="token punctuation">;</span> <span class="token comment">/** * 错误页面处理类 */</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ErrorConfig</span> <span class="token keyword">implements</span> <span class="token class-name">ErrorPageRegistrar</span> <span class="token punctuation">&#123;</span>     <span class="token comment">/**     * 404页面错误处理方法，重定向至index.html页面     * @param registry     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">registerErrorPages</span><span class="token punctuation">(</span><span class="token class-name">ErrorPageRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ErrorPage</span> error404Page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ErrorPage</span><span class="token punctuation">(</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span>NOT_FOUND<span class="token punctuation">,</span> <span class="token string">"/index.html"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        registry<span class="token punctuation">.</span><span class="token function">addErrorPages</span><span class="token punctuation">(</span>error404Page<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过上面的整合后会出现一问题：无法正常访问静态资源 。</p><p>解决第一个问题，我们必须重新指定springboot的静态资源处理前缀，代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpringWebMvcConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebMvcConfigurerAdapter</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addResourceHandlers</span><span class="token punctuation">(</span><span class="token class-name">ResourceHandlerRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        registry<span class="token punctuation">.</span><span class="token function">addResourceHandler</span><span class="token punctuation">(</span><span class="token string">"/static/**"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addResourceLocations</span><span class="token punctuation">(</span><span class="token string">"classpath:/static/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">addResourceHandlers</span><span class="token punctuation">(</span>registry<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>到此，合并已经完成，启动后端项目，访问之前的前端地址，效果达成！</p>]]></content>
      
      
      <categories>
          
          <category> -教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>连接MySql报错No appropriate protocol (protocol is disabled or cipher suites are inappropriate)</title>
      <link href="/2023/05/10/%E8%BF%9E%E6%8E%A5mysql%E6%8A%A5%E9%94%99No%20appropriate%20protocol%20(protocol%20is%20disabled%20or%20cipher%20suites%20are%20inappropriate)/"/>
      <url>/2023/05/10/%E8%BF%9E%E6%8E%A5mysql%E6%8A%A5%E9%94%99No%20appropriate%20protocol%20(protocol%20is%20disabled%20or%20cipher%20suites%20are%20inappropriate)/</url>
      
        <content type="html"><![CDATA[<h1 id="连接MySql报错No-appropriate-protocol-protocol-is-disabled-or-cipher-suites-are-inappropriate"><a href="#连接MySql报错No-appropriate-protocol-protocol-is-disabled-or-cipher-suites-are-inappropriate" class="headerlink" title="连接MySql报错No appropriate protocol (protocol is disabled or cipher suites are inappropriate)"></a>连接MySql报错No appropriate protocol (protocol is disabled or cipher suites are inappropriate)</h1><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a><a href="https://blog.csdn.net/OWMBL/article/details/129375971">相关链接</a></h2>]]></content>
      
      
      <categories>
          
          <category> -教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -MySql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git冲突</title>
      <link href="/2023/04/01/Git%E5%86%B2%E7%AA%81/"/>
      <url>/2023/04/01/Git%E5%86%B2%E7%AA%81/</url>
      
        <content type="html"><![CDATA[<h1 id="Git冲突"><a href="#Git冲突" class="headerlink" title="Git冲突"></a>Git冲突</h1><p>用git pull来更新代码的时候，遇到了下面的问题：</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol"><span class="token keyword">error</span><span class="token punctuation">:</span> Your <span class="token keyword">local</span> changes <span class="token keyword">to</span> the following files would be overwritten <span class="token keyword">by</span> <span class="token keyword">merge</span><span class="token punctuation">:</span>    xxx<span class="token operator">/</span>xxx<span class="token operator">/</span>xxx<span class="token punctuation">.</span>phpPlease<span class="token punctuation">,</span> commit your changes <span class="token operator">or</span> stash them <span class="token keyword">before</span> you can <span class="token keyword">merge</span><span class="token punctuation">.</span>Aborting<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>出现这个问题的原因是其他人修改了xxx.php并提交到版本库中去了，而你本地也修改了xxx.php，这时候你进行git pull操作就好出现冲突了，解决方法，在上面的提示中也说的很明确了。</p><p>1、保留本地的修改 的改法</p><p>​1）直接<code>commit</code>本地的修改 —-也一般不用这种方法</p><p>​2）通过<code>git stash</code>通常用这种方法</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">git stashgit pullgit stash pop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>通过<code>git stash</code>将工作区恢复到上次提交的内容，同时备份本地所做的修改，之后就可以正常<code>git pull</code>了，<code>git pull</code>完成后，执行<code>git stash pop</code>将之前本地做的修改应用到当前工作区。</p><p>git stash: 备份当前的工作区的内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致。同时，将当前的工作区内容保存到Git栈中。</p><p>git stash pop: 从Git栈中读取最近一次保存的内容，恢复工作区的相关内容。由于可能存在多个Stash的内容，所以用栈来管理，pop会从最近的一个stash中读取内容并恢复。</p><p>git stash list: 显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复。</p><p>git stash clear: 清空Git栈。此时使用gitg等图形化工具会发现，原来stash的哪些节点都消失了。</p><p>2、放弃本地修改 的改法 —-这种方法会丢弃本地修改的代码，而且不可找回</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">git <span class="token keyword">reset</span> --hardgit pull<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> -教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaMS</title>
      <link href="/2022/10/18/JavaMS/"/>
      <url>/2022/10/18/JavaMS/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="cfa8e850f874904fc6d0a252a66d9f333640d5019b9307694eaaddc27edd735c">5bb23188b95a689699c5ff06e114eb8ab0070474a1149de906c746f964ac04e0e47b9121083a43a4133174b7f26ce95adac78789af23a1ea4fde84b95fddc130aad90e7143729e42979663bf630c8f21392a9a01fd601100c74bc3218c243d5ab04fbbb8cb176c84fbf3d7251ab58080f57dc3cb70ca2b8b27b4278129dba532034f031ea6c8dfe5e0f303525d60550c672275f32fc1a938c639fda3edfcc3ca5104b784fc224cc520217778128b81408bddceaace551e2953cbdf203666d8bafd2cd5e624452a867cf7415c9f69994a499cb0d190accebfde96224385161c7f9794111bbaed60cc6472b7377c38bac15f6f660499e8b7660a176bac696d39347fe7771a37bcca8efec64230225df8ecb8fb35c738989eee9dd333cca48dc35fa69508ecda1ab62f13e6c1006eb576b655bec30625bd840da4d7edd7cfe6056b76753bea6cbd27a00b088328e7e49e6239b1832d81dc63c6e914a6ad2b054f6c76276501d6e31d9ea0758c6fa3cbcf93d8f6f96a72907af201bf8fccba08f4a077da889afdd6262600f3e35cd2018b77e69e13747942904c1ece6856e4b89296275de280dfb9dfbaee8e01d2a9146250779115c806fabb47813595b0f1d39d1cc90e4faa64111a21e9a9122c75076a1101c3ec7529f48d197b1fca8271505381fe0bdbdf0e2c147c568052200598b408fe2841e71fa2347f49dd684e327f8b24ed7778ba7d06578f82d3729b1ac391e6198db42cd0da0f7c6d418e8c14c7fedaf12c58d2565e528a9db16c4ed4ce03a84b0c2854e7cd8d0e7278e47cd2cf1f4af248aa8903151d118cde6b3c686809e10bf979bd231a43576b67fcc715c4d71beb0b28f805cb4e1a7b4211656b9242902bced4dd37169270251ff0bedc7f5b0a3e5c0983f50ed6863b56d6e29da6b39520aa45820bd579bf136d8503d6dff683c0f9ad8230bcc0db6fa378af7712e5659613cdb33bff8a9b992a09a98406ff09a2a0c5ffe1ff6caed74764df95175ab34eae6e1a47c799f1ca32b68d35cc542658ed75626189b1607c22f91974620eef01d6a635f0d32fb86b65d1583a0c5efb7df247fd64f8f399763c5c77cc3947ed882e10d27204fa592e712a83b0125b95204b5ee45d1dc797b23a7fb00fa5daadf883e2373a4a41497f2d807b0baf462b60123acd625c42cd38cfb7d19d06dba4844e4033a1428cb50ddee2a33bc16ca6ee9187d3f73c6f131b7d0840eaf883b769e814f2e150cefa4cb4750a84b0aa09803f4b5a2511e6ed16a557db7ad00cb3d16047e05db54b9202d30b50aafebce21efce7eee4559e1b1c1abf914a275e1d0f8cd2b0e173e956ac927730d390f4317254ea3ba3c3fe679917d43ac168dc0cd1ed9d56980d56343c68cc8a1bfeffbc2f595bbe2ed642f90d32cfd1feaee043354f86188312ead6558bf929d7db347d228b40ad740a7fa8b0e1db993c6193eb78a57cd509945d8d577f3d967757d26a53aa50765e0d80da00651a2d1bb87a063c1a627b5514b36b74a7fc938053f5967e6e073c03dae0e60efbb542c96b5576aef4e01d2c543eac443d74740ee85fdc02c6f6364676407ffb5585eb51aecad81501e1440d5325b3e325ad1dbd1b742aa10e69bb6cb4722b41c8ddf4288e74fa987cc8fac34276293f5953325eb79c75d5e8bfca2b010b4693ec4f7cdf381b0b93083f8bb728227c57314b54a62275d268fcaf096ae55423f0ed608d3662618eec1420fddff421e47464128555500cbc9771804e1b3819d58253e44f526be654caabc0a8579cb1dcc1f432d449a7ebe15cbee74a19c4ebf6eb12c5c8b4441536c08e20d96d6f660acfaa16089c182cb129cad6efe936ab2d6e8f9175a7a945e1840400f97139f9eb03cb9df21bcb92fbbdf1052c567adfce1f704e75804278a85a30301b07795d5abb400921f124cfc1d3ea7220fe25d14c4fdd428926deaf42fc045e736173ff5755edd4d05ea8db001ac8b33410997df9d2be1c3dfd96808cc4caa6f59256478379803b77de9eae72083471df0e632d20f513c0c2e5081dc19be1d42f5fbd2c47bc9cdd7cf7d9a4ca1959718c20d05335696eefa8ea462ba82ed7a5af7bb4a18a513a3143db2ad6e5bbf6a21aaa52fbbf9409eaaa01c910e88d34aa25e2a6fd0b9a83c2ae7ea2b0a8e3a112e895e60e7e61e618cd8b8ea6d08d9c6c87328153e237b10266c44479bdf39b5167bcac5a9ed7f83c31254dbeb8697bf70e7b62963b5af357e3d41b3d1a8a544e1ee41d19b6bb0361ae0107ff3d563402d299da0061712f959221a107a47c97638a26de05f1d644e07190a78515ee5ae89e187a36bf10b89e64ee89ea96612e188ee821cfddf13178f270ec59ac4634516ea01e89b86e915301be4f25a39878ca6df92d689042182edf38f88776a14fdcf6b6bd6f9886ec5ed9687ae67ff90a011c974d7d99571a7343a59da411c336d946e7a4bcccb01e62d380c6274f594c084dbfd30d9442dcfae44bcbeffe66cda35fccdceef1fe453ebf671d6b995afeb77d43528707f0edee7df8441ad3b1a74a4ee15f4d8c025d857c05e8b983e77eedef63f98572a3777b1b15a22360bc110b1b4189eae3ea908d538d5cf09a2e6638548956fc89959980d5d97e715befb44c28552e076248d088ca8be7fdd59f03d5d3417a78b44375e6705753f0d50c475d6ff7edf3f5db16587248df16730acc3ee4843eb71b7cc8b2189fce7eba8071d7759b73555c3f5ddc72deec39c28692cda3df23b481f5b274edb6f862ed213ef26ca2b19b80708d7915916dbd3b996050519c156d0d4a092418a556a00e53e71fd32c585ef94da1bc6a4e1ee0af556d27a648c2e174f101f2b29be1e474789a30967009ff4dba00cecefb419ec96e1f7bceedbc28d4b12ba226f8bfc72761c8584bba5a9f5a212305cdd61d7db1749fad948ac815808ba1513308c1e535fbd83e7b3bb5b782a9bb864214834e388c1fb7d9f1c5156cebd21abd5d9d2ffa9c5aad5675a0ea939c623715f1dfec9ad0d382e505dfc1fc44c0772f9e5ba83cebd0e20ef39f11cb4400bf1c3157f5095ae04718a173ee54446e95afe435fe2dd99763d66d115cf36e929b1672faa23519453291dedddf0334066ad1b6dcaf5b147522cd06471f0c11e8de06491380239db24ffc9071f0822bbd5c8caac9095260bd2a58d04b5641a3251568e09e018e741b2af6cce1e7336c7da5ed066d020d1e0f9dac222402120901405aaa588257300785b2abdf5f80dd10e40d30c14621428a5556a1a456a364bd0fd3e86b3f5a8f44dcf1276734b2be20115dc6621057060eee17d6854161bcfaa116f48d3485709077a3330751f341b4762589f7ee36a2deba47607268007b1cba26fc7f1585126211107d602a8fd5710887489a5270aa5c7f710adbf7ba793c2fb2ff2471cd72712c393ab99a81daa8d95d469d2f7d78bd6321bf4ae3213ca5584ad97865d233705fc6c3b2055becb0ed76aa8bc71c85f2e3dc8c3b174761c1264ad6dbbce6a97d148562f1b420d4331114053ff77cab9cec22f011cbe00f306701541e0e65482f76777eada426f9068bc527a4fa02351a02f0a0c5585425319a70158c0db766ad4792060691db8ad998286239cf05abafe0f6c536c78ccfbbf6de0e20cf9cf9f1ec1bb9b29e0d722605b1bb5d7bfc42ecd1ac38161cfa4d88481e0fbe2754561371aa8fef255bfc10a8fbf3470fe6d9f4f970582021412656d41a479e516a89256aa33cab8ce9888109507d21785e935bb93fa3905d5d07d26e89f3f5d5baa1cd181c02fabc7ae6937641dba854962ca8e130ad4f7c194c04b4c19cfd5c4d1f24cc6ece330f76ba47450bf0e366ea1e1fa3625b5ed16efb7beefe1d53e12fa752a398590b654a17e80756ac168cc446632525d108d165ff30a1116254f3f86326c3f93c721954fddce9afb5dc2c644d3a86ce1b216fc39e6eec8dc6d20565abffac24c9b69fbb4bdac8d95ab3b2ce09b74cb44d6ce38702820d2a3ee8dc88d06860e35b29159bc0fbc98c60063c74bb0964f90778aa39ddd963c0bceda1199bd3084a962a718157add98aff03edb37d964fc02afa5134e74fe1217a8935c99e69da8fb674479eaea3206ae2ff3b5e05e853fc475676065b306fb306ee7ad3946c28f4afa4157d105699392aeab6cdb4a51f36f79b50ba8a29d59618f8a3f1b9dff79a71312eea66498858d7778209d6dafb7ec09e85588fcb526750331f536b07af8151b3a1e6031dc49bdac5cb62e71a6cc1a0bba8581e14c914c7c5a11d5c4b8592cad1edc7750f0a05a4967111a2a85091dd6d2f84242875d4a940a225cb2063674bb048e36ff3ff0a873c4102dec731b4352971bb163b029dff029609bb91e910c7c63b21daefe44816c3bd6c5d0a7c34551b2dc8108f6c3d1ec16a7f1018c66639c0dcdd6918263b9e6da99cd5f250e83bbef965873547d2aaab3fc4547553575bf3c1e32b689fa026c1b1a61565358c931a0233fdf4789ee575325632f3eb2c41030ff0917722acd1da8761ebb6fe87a3c7610487c238955dda5ec63b58ac3ed4a5f9bf9f81b673fed620fa2fefbf12a09720899e89564abea2bb7d22c0642f6d0dcd869a8c34e9cce6db3e708c48c3ccb76142bae7372703f4304938ce64351fda2d0789a4b912c9a4c7b24b24156ad3b8e15d4971dafce135a05e1044726bbdbeef3ac424e3833a6a38de54387b9656352368b4644bcc647a59eeec6ed6001448f7b57c21e92fb1a673661aad9325141ab7c69342575a7a53f2037e9604857dbeb3b843bf1a16f2325014e8980e9a05db6fe777f41896674d1e06f3528ad89982f141d8e23121307a865f9cc13e06f1a8791b428188291771c383a9587a2a7c21362e8633eb56d4c8c0f85b17e73e40c965023e4eea8b1494755b8b7d14536e1a522be28bf018d7fe8295bd9edecddd2aec4fc1876f3cb65cf0c25769e9067525d6212152d421953cf194d9831d2c390d8738aaf741c09d9d426e5527178613de540e62e3a808f08fac96a58d533d1bd834593b7f33ecebf08d61ada54721f7f54118f56dd9be91f191d32d25f61a36e4fdda9a1e4c2dae0f876bf63141bd0d95bc0d72bf01627f02b6ac2bc0d21e49cd791e620b7c95ab029959e7619a62c95d5f753e07cd930ef73fe70736c8c98587dbe43f09e837b5f291410e5d2c9575e50a1b8762df70fe256597d8f493b2e6b61f32b884aeb6c172fd314d4e34ea7db60457ae1c12baede9d78938b5a776469bcb11943ba3cac587fcde8bea25b1de12c1b06d50a79ae162cab9b573639730f869d9c0f53297e8460202ca42c3fd2e427a03b73324f9469fdc1616a6adaf19255d695eb6a4ea9bda1b3dc7a753b78d13be2e23c6b1e4d902da8b9771b5e8e52e1566b62ed64331ff91245cda3192c0ccec747f90554069d69cac935fd050bf030e814ad12ff8fc03fe6acd1e8286bec7933a3ddc28aad6ff0871c32c5f60efd251bd98a4be527ed0b1befbcff44edfa720ef25e5ad68b2279cbc3eaa2a78296f7d99b5e3090a14e3131b9096c4f99d164bd3fef4c5afb2b7109164b199c80f8372395aa417d874e97a66b811b0c07f5e95088dae2ef999109d8547012ef45caa0a97c8fddaa91e52010a9885caf25c3431d58756e29ac6b5c89d8069467013dcbebcd4c34c3ffcaf9c8ace63350558042c5900532a081bc68a3134c514128e1fe5892db709b7676b2ff1af25d2c67c92870a97dcdcad66d865f9bf546267a0f073ae3e47a5ae88ee2ceedfb78a1249b69bbe606a80c158abf39fdbd03735a5d4b9a0828dbe635cf190963bea58cd45cbcfb1a4cb0634869633cb9800c9ba04a187491d42c531ae4c27a128cf81a13dd34e17bbca0c016f14d16053b72c9439ba9f693b55e6e12a9df64a4a0636f7f41f113bb7a8ee7eea4c4012a806bb800a727e91951bb3510808021679cc864ae53e319d1d93a84a87eac815e07b4234627029580065a31d22c1868f0ddc2509d64ff87014b04968e86e76763e2bf9eb973722c84279d83c8ecfffc632314741694dda960b0d2a4dd1dfb87dd073602fa0dbd6c215fdf38cba1cce779adc5cda8568df61bad971a5938dcc8896132dbe7b3d9a8fc6a0863147acc3060ac45525c8a80fea6a54f51fbd72110d70e67c2877905ecac85abf7dd020c7a6a8b5647cd2c1693aadc9f51b3ed2b9d3cef8168dfc763e9fbeeda2f69d8f21c408467619d63f20f45d46e25df078f0e8749a2c4168fb5bb65ac847ac931bab7735518b03436a7668de126a12a5477bf1e85ba08eea93a9ad5bb6bae88850ade34385cf6d3633d2f26cfa1c866d92033467cd969feca7bae44ea8e0a610374a8eb8af8edfe71d53c862a45446aa4b45ed8b694288b66470534e7964822778b4e005bdd1fe0855e71cc3ded25fadf2d73a9b3b19fb86124bf26170a80ef24c81da49e0330eb46208472bd841401bda76bbb600be3952ac1800791fdd1d68a0a4f61bfd28579f1fc50cbf7a1b27eade1d61fce42e100e00892677271806da8dace7acc6a2236e4311a9f8faa8b7d919ee5a2c05eaa5b5249de2662a6ea210627347ad1e0f434eda3b46728384dee5275a9ad5ff9b452d0699dca308a761aa18541dfd6184d4125fc9da5770726e9c48f1b2b74ead22155f7484160ce44b0101f6f8d17fd51889d7f717fb2edc28f031392b364fee26b7de131452037411d0421c07c0e2fc132f343bb6b3f9b07bb79915281cc52cb6cf898e632851f208b3616f039bce49bf6ad2fc1d31bab92557e07f910863c3700b4e3d35ec7ceada3c8a30f7dc70b8d4d03f4d9672cccdc311b2f221afba32dd551b258a6c8b9cea9b4b69f8a9055997c7ff035aacce017ddd49981ff90e97fef979985f4d7cf3ba17024defcb7b6a7073964e4805c83aab7515846f9932535cf494de5d07667edbf269c75c35b8dac577ec15c53abacac1b82f0527592c2e7241d5241fe1312c01a9cf59908e8ee17e6498c6cd38b701af9880858d61be1e118fc2ce14659a701bbca2308b494524fe8a2e80ae25894231b568cac95722726284b28c1096391d57a4850d6fa96be20c1b4f17fd2ab08579a952022cad98a0df8b8e5b31963f66bbfab290ff12c962b9befb06caa91960f13847841977cc9499a287b45291aa36cb33e2063f3050d92e7aac0ffaa86ffc8917a795a08ec386f157d394af9ea7fe39ec677bc0cf7d715a64a0127176b91c9ad9e3f9fa318e452305a0768ab5a453a77eb047f8fd2457cd95186e1b34dcf12cfadfbf5ae4a56be8b30c34de10ac97f53631a161b1fdd3d784a20f05b7d9ddbd634c6f24c459179efb92fc82df0494a3a5b69fd36fd640b0d2627d8fb7aa30e9a860ee1804252adcf286220945ced6c32041a74512ffaa80767baf333a3c1c38e31e0bc9dc200e19b2166a1f003f9a209f05307faa639d8b4231a8475c372469f3ec0ae4d62d5a43ab514f8abe18fff31055c7e36bd5b244583a78bca49974e06d787c855c897ef6ba3d665120f623ae52b5ce920fb98be67bd5a423d3a5e3d54457bdee0ddac3d7c2fa61903e7109eae4ba4657aa2dfe46dff7b33c002d5e5c42e76b5a8c6ef629ca760d34077a0135de3865154e53a015967ac6560d20c0708a0849d8eea3f83b997219731e377cda691f45b390ad2aa9311658c815cfbda72f753bad1ff6974abb82bda7f465fa2518a52aa4b4730a8822223b66b71c83ebdbc892ec5be8c1c9ae199a2fa4563057f519e82a12250ba04e477207fd34a3850ae9e88093993d58f49a89de085ae3e8e7e238b6bdb32860ce24ece09a6b7ed62f520c9ec3a21804dc14be5dc2a260295a301ceeba1725b5a7b6caef42c68b46584b08a9951dfb340b0ed6af894980c9f938be5b0fc85bd6e727da16f12ba2489602fcd284f6dbc0dcd9158dd03cd1650f02e0640d83aae02b07d710c3cc1992f30b63781bb3dfead93e238967007e72aff80cb3d9add8659f718aeaa2aeb4a6bd60debe208da922168d339cc2a1c819991cb09ad11d90a7480f5ddad82b7e96fb2d20952f2f5f4e869ff2f70ee4c0e765949d49bc288243ea081ccf5785a3b0437cdb72be9f137e223f7e22c19e5383e4045f8b3a41a2b1a07922398a266d1f11e7816b027a9d96f279ccff44fe4c79eba28e000e45f42217b284f94b8f4af074edd4377d01b4a90f67d6d8692903f03a2e9a264cc11fa09cb892cb08de9fc7ea4983514cd427cbdbb0d25ecc663623b0cd47be5feedcb0fa2c7ee088f6a05965f49baa08d3af619cf08cd32426efda2237bc0f88db525314ca2bbc26a9d0755be1a91c1c2f2fe2b57a66eb3884e733e78596ca706075da337f9685b3902f5edcd82133a0a278db63651841a1c4f79f2a025a50dc52546f8e46306b3c4b8bffbb336e9a29edb924f7d4a52b3255b2a71692d4a39e99670d9bf962752fd27315f6063c0729c6d8138bd22818c8ef8ff6c4b50e0f402380ebaf0685170608d4850a9b98c7bfcf0c423daac72d791a2534c348f3e2c9221da5b6e768c278051c496e38648c25672cf33b3471d4f199cda3f216dc87d72811a5b989f2fc3d23f4f6765f0ab16137e2da23831879c5192dad8767ec1d4eb702bef40df607390a872359c7c7e9f5bf95eb3ade25c2a370dca098be1eeedd960604ace4d0bda049e7252a3cd94c68ffc928ebaf4937ce5fd0179e4825fc179a55bb686e2a76e75776431a8001d606ac32875c33febb8dc4b1b1e2f38b53a55707bc3e9d365b06b719949ab501b4d013217c92b84840dc817d4d2959851efb692f930b2364c2cf64c22ccf06c8ddf31c94791837f3e1f9e33a782468b53ecf6b1479169a69eec3681a2a02d2386afe9e44b5911e918659908e3102e0e20d65353f52597744048773cd5e54b1821893a6d29239bca886483eec01039ea0c809ff42c799e850324f3e00e109d043bdcb1ffcc34b50c8aebecc85852985dc32cda2c8439bf866ea6a1b528b2129d95b79585f08ae973cda287878d0b637b93c6d417f7c2a1ddffbe693ae86b51de77affc3c0603829f97ff3f00a5e9d5cb733d77aed314415a60979c5545dbee660eca3e9d54cf3818d8dabca9671f84c25d2d527c77f07df0363572d75910b7d12426079f6e59a747a6be35d7df07e4e6925c489c7a0207a7143ee54074c4ea13b4b60ee93d2bf243e05093f1d96779f800ef1f24665fc30a00f93f893959dd1668afb9da9f907a251246585f7a388bafb28b86fb6dea97ecddae5036dcb2ff4a1c54ddf7685741206ef7a229bb34437a27c1f94e2be0fbaa14a40fcfef8b6ffbcb4661a17b6dd394123c1897b68a4343e9e40d65f002c141354e8f740914555bdd4730da339765ff83e969e5c588d29a12b9c2a40dc003cf83234b64954345e9c933abf9e593aaee32f85a9dc29929db9bdb5d98e9c08cf89083729b8f0ce8242b885f87474c6b61c75d3c4919e437b2d53bdb9e34ac70bab8f1ce135a57df16a7bbf678b52132002681adc8fdb60a56bde53585f21a07a7790fe67d72c5d68c33857111650d9a31a92d093430cf6a3c81e1baa0bc02d374af272019398d3a470d5de49567555e3225165f2f37f01c8480b906dd270db578ff47620e82f6902739fe08d9a3019a61e6a537dcd866937cb066f3d6cbc5c2bd5a52a65414f2ba62d640c8d0a0d773bf23b7c90a92549b4b5564c46dc3bf21fea761659a284ad9e97f71625b710b1cbd327954a294a610c0923dd5c5225da70761e8ab4bd08372ad188627255c53841c2ca751805810cd665ba9bdb65541bfb5b1d317f634d149f94a8895f33c2f9cb903fbad3163843c2b964cb017ecae6b7f8187a940f4fc752c4dffd9902c42435ba27ccd83749d3e848801291d8e468949f758b93aab3959b91c8733be34d89ec4a1ee23e9cc2df58cb0aec07590ef64e3400d3d56ce8df25343be6c584214907291e75592d6cb49d427fbc55be47d07f532f9637e0b499ca1ce897acfc34ff152f53621bbb624e10a4cef7aa2a24b20a079ccb29e0d49cf42aaaa5be317aba963b48fa0ee516903802119e7e0b6a914b05790f0f2d996bb346991f1513c293f20ac973a9eb46e1f4d818c8b36e08fb6fa5d3a6cf0b6604bdd96e904a2f53a30d0f6aac3a31c8e13ffaab9edb88b9faab64f47e2dde7bf218641839490dd0f9fe4b394c26fdd2cebee4241fffddcace5579d049c53ba779cc082d68f1b70b57b60daf70ae93a1c1b13ef69cc148d715b632979d7dd326381d6a16903d547c67e889f1603670b7ba93b685b98381c44df1619546040f4d369c7d33949eb8196c0f743d788f0d8592848002e5334aaa95f77b2cdff3640b4fa5efff1a1a5c4094fc923e24070445aa6628d867764e5d3fb5e6d8b9dfdd1583fc5ac25af54e1f968a206dbc8f462cc06ce2330553a7f2deee35139af3d5e6ead875c2980f8400975cdfaede4f4fbf84647c2a1a657bc131f7a08e601b27957b2ce01eacf3b6a1b84edd0f6b5ffe9d5af729b0af9df362ecc84b1dc0f14b5183dda925d784de7c2cd6b55f31438edd21f8c8394afb68e59a135242caa4f4049abbcd7cad73b8c174c65bffbbb147ec776d8a5ce91b319490f6187063036cbb6250e8d4aef582c05b12ca1ac2024db1e1f05c15501fc7249a8bfe70c89935dc7c98ab502500e93151696850f665cbcaebd9129949ab6c1d0e2ee536741121027c4b802ec56d067e4e81e9c28ca1113825fbe62df95f580fc58ce28cdaad4d9d18b02813a1bf2d9af7e787e1cd9b853ea98f6a55311248ae4552ec1bb0f4fdd884dc06701b3674bc3ceb84a13c28ae94c28ee2e676bbb0db5066bf227fa22b1476aa673dcb6fc4386680d074726d1a1a076dbaecb191dbd5e5d25076016b7db17a560598ed1dfc1bd5a89a779f13d1fbe4316c8b1a8d045ef37a2cc3863b59a2071e1c813c6c0ac578836a270284d6e0437d16193747e36d315a5be4bb964dfcbe195eefca0e9fff68bd2edc8104b512341037bd43b547de05385d0f7c6e41e05ba138f2403184dd9eb57daf89e7acdaea5030ed7e03bc43a705c8a20744adedb33d3e235aed045ac11dd28a5c79241b2c2ceef8f2dc37def01fb93a792c60602fc589b4f10dcae84e1bd857d738e1604a447355ccd75b39f7a83efe79daccabe6377a54b14a62196ac484484a934d53e6512dfcdf9aaf7861e85d8286f1f977c1463ea7c6cce229779b3cb633484d89957dc184f141691121755bd02e3a75d34979be1527dab27c5ba9691df43feda45cf5a0e0bafb875fa9fcd9a5372825b0aa197ea47f4a77e30a1eea3b1d38a3d009d7efe209a17baf6b2234ac2183df6fa96692f1644c87c4c31e5e55fcdf9ca1f2abef6416ec963500a07618b6f07041bb21d5ddefaa8da44e8ac8fc5172f91cf4438f3f83f6c315945d163d272bd24621597243853c78e866891deaa31ada2497a1a63a5304e727332fbfbc73bf1c53ee5fbc860caaad358e889c4ebb383ebe92ac9838d7f79ea13a3ebe4d4f3dd8de9eb18cc752ba7e86a8903bbd93e448f39db5690a6a3c58f2d0fe92abbe98e29164d16239bd480bce3babda2b0a588660ab74dc097cfa94e22a00353950793cfdbf68640bb987e46eb8ab765c204ba7408fefbff102662553e51ada045029321870e5e7686079446fa6e905f7ac078f5f52ee74cdd3ff16b256609a5f56f10c7db246ea2fd1b2d4eca221e90bc5e4b51aadb7a963f08fbba6a13525af1312e744a18fad5a922983db3df770d5db972c3c71ae3c3839203a1af96f3166d1aa5294685e0792f94063914f04cc3c9b928e31fe0ec552dc76320665139956a670fb74a5bd6c01b82fda8f12900c47cca8d06c5a10a964f04ddf53f9992f60b5d6f5932cc257edf27f32924ac684e9f46292de5d9f6288f2dbeb5dbf3f09ca9eff20ef6f5b35d51dd4b5a98a84cf717568201efcc4adc80812289ffde3db12b7b42cf0a8074296e49b7d0f8629ace0a597ee0de140feaf63dedd0ba2dc14e815781f2d84c9c7e1edf6c514090ff2f49017ef35a1e1e78737b2a63ad82e71bffc678a744ef6ee9cd29a5cf5a63c01a5bc4fc4c0b9feea8b63d00eb7ce4504d39fe3bbc402275fbb64fc722741626898e707f94dad5a7c21b2f0078c692e30d4fc357c6bd12902688292f39dd092cdec27a3e1f54b3d305bdd54d9ec96b83fdb5a34f98081bda2dc0679bc95a668be008a049297ab617ef30bc38e80edc46ac4d9eb805ed07b7bc74d6f03a904ac994b0694146f4e0472f2e8e657173997259496ee3cf3a39751b48b0a77e6de52f8d2d90db94a0a9c522d4997a52cf28c066ef7d4a9a607d57150cdcfa7b95c9f5ca3bda4e98ea8d7d00107fe179d05a809faf15f29d9a5c13992c29b4a77c4eb11d84c457d4e77b451f05b50199500def363e896f1bff04ec12706b69527c616c01de4a772c547f09ccf577493b67b227b2810921a50d54a6273ba8b49d2f8b00cd85cbf9c84e795244cd79d6acce682b1d6c52b07c5cdb73c38afddb146a30bf53f7ba9bdc4f87cd1fa545f67174479eb51d3a1b64b778721172a5b5e71d4d4c29de249b4320b62274f9fa0ebfcdb7404a57363c604d2e5c33d192e906f09262abc5610358900792e49ba010097ccc803b5e6747fc6e0631bd0fc0110d6472580f47510b51ab9c55417319a34836c2fc4b5045d9a7a43931b6fbd6323c4f378f93e2e19b30cf56bc2447da6fd05ef00944631ad63f4eec88665bc9d803da6a61eb4388f2ef09c4f54fb9bd1af9478c9eead923be6f062504067542fd90b7f43f1e3d1cc95df89cf7eb7f2dd6538888c55c8c73b79220e452f0942ad09ddd2ed6b83fae279aaccdb92445f8bf42548cb679d99416245b763bb5436f32b1880974f01b9a65cb93cb1aadb6fbfe8835cc7cbdee64455582cadaa2ebeb3404e0a1473270df8f293ce9464ffccca65cad1efef0ccf9a85781b1068b57c9acf3099c23725c492c90758c17b6c7c1b605965ea8d4007450e1d130eb36d331a0115c3668b8bef2a3d6c0f96430732eefc0a88b6228f905907584b08be0b94ee28c2d1fb328e86e7de308ff5e5eeaeebe6f12cc6a5aa7e6df18c5909bf90466c57ae462d186d66799a26c1be977ff0a5326ab436a81a416c81aa66fe6ddffca22a07c7eafb7e2987b16430cda2ed1b2a5fdaf8aeded00791efe966abca2f2c2c1999ed83ed5850ce06d726b6666eb1155daec2811bba3345d4c41608d4696ba366673efd145b772e7c57087277f2b2465463f0f2f7b30b4951be6df30e9a865fed99dcd0935f2ffe8bb6218ee116c57b735374b8002fdbfe97254230b5c7420ef7029cfe2d223394a23dfa62ca5447fe9d812ea40f85ba22f93bf39696c60aa5b329fd4d04055121445271816a470e9fb418e81ecabb19ee2c8fc36120b61063fb3fb834a4e74d0584672f4fda076c68d1440bc1070a3b9bc079f0986878678738387e18aeb094ab35572c7a377d8ae3c5d2fdc0808d1c7dc45ecd763a6a98dd1a9d22031486a15a232f6efda3885882dc91a83be707a1ef4234676e4dd115d6683142f136f7cb9f1c9348f517177c5cfdd05a96038f96607fb6681c4ee04cc1d2ad054f47e7ff57d8ffd2d7f57117c0d6fd49e79270ed78ca23ec74778feef3349c8945e6a27e74a7c0b563da9ce2941ecbe3ca7c830bdd91790d7e0cad23c6d6010ff6c069dddcd42128ae5fa8acd0e1517836d0edf63f90ac556238cbed7d20639e510c032ca4dac69bdecca69ea15dd336e320cb9b1f5af5644ba26fac5aa497a6973d8d492e39ffa7783ecc19506b8acc40208a609f5f1b60a7964b2807d6d8304f67d701c663e98d62737aa6defa9820bcd5a178a7cf05c8694dfc78f3a01a8fa9c87f992c3b9c9b0a9fa686b484e0bd44a8f2e0a5e03c2c2c32e399786018c56e51fcf29b83198b7dde48c45ae7ce81055f81efa6bc067fc9a5ee167377fb51527aeb03afe0ff040d2769791188cefa8c9094c1bd1e1cda9c1e312f6338b62492bd4a84e7a7e734b2e99cf55fa909f22ffd15d3f85300354bab47068a48a6963544d86e862ec9b70e53602444d46e899ff6d1bb4b8e7d109e38bcdb32e8a8ddaaf967aed9c9c637f2788f6928c6df9e045ea8565602087667fd1354f153c7316be0842889a92f7fc3cfa7593ed02b7427b91294b212f00f20af2093d7d16698ab76cc17d6fc8d51dc2d1e566339734387ddcc320b008180b236a4937ba0f45e6371c0b6bbe1809510d87c10380f596e30989a203cd662f6d5d81551bd6d2d0d939a27a279b46f5d787fc355764ac41e8dfb25acb70f6dd12fcf2a8dd7c55bd8504849f8fc690544170f62e4887910d71e9ddbcc377aacf01d7d4cc1a6f370df341fe3e07b84501fbb49c4b87e8f1e37e9cd5b811614c3e04a2f28fe990e47e2be17ce12ecbf3cbb09396db1e959af143253aec8e9647114c4549026909180b261e6a47ce05d36830f19a1e8dcb2db8c54e8b1261468707ab05a5b1c260a1a6dcbf5bc7bcc896d662f8b47ba4dd5bdeef9217fbb515230db6ff772296cc9a4770aa52625e36e8e1c7f03da06ca13d2e89f85ae70de047043a24759d8e747f721def768332e518b8b5b2a7179042446dec0058846ec9815b86ef3f68a04c9ebc0ef5fa9cbb0042c62a7f495084c1c2b03b86b0010557f99bf8379cb20b22748d12ede263bddda500d8f91895b0b4e9798e4597f7f17ecd07a3a4c7b29058a56c3bffecc47593b11e1ffa19576f0f92f46c38febe0f400f9da32aba27aebc1254e79e0f83818330c9a7b6e2314599381b6c5f2e90d5730f5b0793af8dba77e0a503d92b81b371312c57d4e90a5aee4c1ae314a5c0845795e876b95a1e9164aa9c2989f367a214b8e42faebd94f54815f7e489c6cc60434d5ccc9e041e00506ee02be851fd73f6879a61a68b232554259dd65fca7a74f49a72f952f2bd7b19d67878b4f906b3de9edf34391fb40b3a172790f13fdb03d3a66284b1657d47eaa7596a32f76b92a5006dd4252a6aa4def7950ea34f6117f53c585c62d1a9df826a4a4c536255b819eeb6fe59556ae2178f154a4eaaaf5c908abab1ca91c11aac7d8581fe2b2532e12f4c62a8294eb56c16c0e322df6c61722d1915ff9d781b2d7b2e0242857dfb4943799a83f30fc5681a758f08ff243067c7fd33591f42f87c304a054710682b67be2c6bb2ddb95fc136356ae6ef9a08166fdc67b288885b1eda751a2f394494436c0ba223b2dc06cbd96bbc35ac602dfc9f04d50220ce43eafdae16dd14733f34a5bbc3d6a25574b7fe9b5b5a26f1af9a7ee4d67b1d9653ed2467fc6ad56c27f935f33fff73876a8bdad3aa7e17551dea557b7d0dfe24a7d5667864ca32d8a45aa5bb9792614d4756215b74b7e8788859a7073f85ce97edd674cc7b3aa32797d79c1067e682d75caa0ca5b43a97df0ff5f36218d9272580b6c77805ab9057c4b72e55201debfd8573358b8f81d2f3aa5448de6b15ecc5f5be29d990671a16d6a0b37f2cac2f87d2fde8fb333ac1499ed0860c2dfd091f8ffbff2c0cf3370bce0652927c53538dcf0e2eaef3787846c3b28d3ac979695021fa4e00ade0d55a200d63215225a3cb773fcedf1fbc3c00a557f62bdbf54bc249efc6b2fea6ea73d4591c4e8966caac4809b130721559ea6d0a5a1d591e9b712da177887d551ae45336ce2a5c29d2544ee1ab3e1aa5a4fda26131c9a9b0ba11f317e1731fc9eedf095e8126341389d1431082cf2018b4da7ffa9f97792f0ff1a1bf044bb5c899ad420fd5c6c158d48405f7fc36238c35db646738a086627823a3bc4db198f8b770d47901d9114bfe75bdc4f69ce8019bbf66094161e16c0be1e4a44df4044d50463b3dc62856b45f43830561e5186cb80bd61918d22afd1d338e0a303269c4913f468d52f51981e92490bd9c4cd380987bf705ed277d1e7416b5bd6b2686a0ceb60c6587e4bb55d1993a99a26f1882e175af1c2b3d29bd516cb3c9cacd4c3fad16156a059126b7ac929f672daca2e6b93dee8e9c32397815580283f80f81e5e0bb79d73c064b704e48bd6c5c50975fa3c918a74a68689f78b22362276690ecfdfd6edbdd6c2cbf6115081166269938ca60be6870ab70861ce42c00d9a4064f0a64419763d3c304b413851379dccb320cdb12bda193caf39b836a074b4b892f843fcfa6fc4825cf620b9a39b497f395973e5248452d9e298a8749d0ceb2665a3d299f9911cc8578f57dc1b450cab177ee8f11707fe793cd84a7f97bc5f87bbf03d582b9d0886a783db2bd3eab4a4ad53b8fd71fcb9f452464fd5a978c8d15ce2528ed255da6a19e105de33d78f3ac9d88e97fdb815fe20bcaebb2e1442ad8278e3da15dea550d193efcc7f4976b66f0c9901b93cccbcfac4b39de26640db3d787aee5428963334f7514a7616f438090586516e6c1bb78c066077a40c025f900b3a685c10e5ac0ac40db8eadc85e2ee88a124f51d416e74747f8b61452657ae1986620ce45da2e14d2082cd5c9fe6ed6dd986339262c2a374513cb0ce13f577d502fe48afbc54e1790df0a80bfdcf9c383a8bf921c370b8fdd094601bc42a3188529e156260a7830127d3c681d47026607a6a886dbc9e1efb347a3b736e8d2b44ce7a818588b77866f2cf5583b3e745f7a2934df72ccb2e1a074c8b496b3f59e5747854b3ea404095420624736b93db92fb29860df0cd9d7599aa16b1f9957ee45cb1c73fe2e09e0fecac383cf8e8acdf59579b1df75704d15498b1c3ed61938757618ec52671ed0bcf32e97286ee430b0c22795fa94b85faa6e5d23541ff077f4ba7d9d85fdb219e3c9c0d8fab9006f2d872521b29c345726b16529046101146f4b9319431a7ef3bf3af2e58a73cf2e300542f81816f494d8bba57d936cc775992f2f266537bb6b469f4b75f237786531eaf40cf5cc796e774019dd4b8f54010ab646a3c7ef829d6d3a9ff1c9c911fb7e648661f38832640f563cf6cd3b531b681087144ae16683c01ca0fb5e2b9a451b6fed0f57e52e7fc7e6bcaddba9843864468fe7b3ee7183bbccf4af1839b75207f94b6e5b72ab0d6dea24cd48b5d0fa9b1eee396eb7621abe4969e8e53368742e9615514bf2f167923e6e8feebdd148e899664c946002dbd79a99850a89954c1e3a743b7eac1f9d432a5f5f2aaed94c85a86a28daa0fc081e567503122abfc285026f648659ffb6b0f41f345ecf0797f4b0795c681303f2b97f84401b3cb830e8aad924112d9f2256b9efb58ec195bd96e22a62569ee65af270487476c67a0e3ff626600ac5ef6b4ea53a67fadb1d916db79518e34357e4e0f679a0ec94cd598130866ea8093b3e8926e5baefdc655fc962c247fbef9973f2b935565efb62609d075b3cd8fdb52e338fbde2bffd4673d1dc74323f2a12e5a7fceb5a7f5593bb652c860b5472824eb4838b317230a6414fec92090b9f41c35c717254cd3c9f420d84a5c61388814cc9c077a0e10b310469e6ec3b7c8dc007d3cd9ad7bd597c4ec2c50e25c2d73e84329fc29b5095a4171edaba9cb32ce26e918a6d78390a58b64eba1a922ec738b5701bc6e2b2ab6a686625c715fa11edccb59b3ba96436ab380814f936ea4f693865e7e7c6a0fdd795e1b9570fb8e22aa45f1410066deabd256d47ec0cf664eb9a3d665094ff48fcfb830640f1bc4147b91ba4e5ebba334d40831d8f5be0d0c9efacd1b450f18f60167e9d03ecbbb8780b3642952320b8f053b86e1081cd6c4f32c14c78b2c9916d2392870bdeff8e923cb6ccb38bfb58610147444e51babc9bf4b1ad41e95fe46111c4f1e6cc5b0a2cc234a882a7798854bd626805f87059b278f6cca134d32a16e4b0ccb3ee8a33728fc8f6fe4db532a22d39840840bb7671bea91a23672a895df7db4221afc4c70e13246a2d152713cc98c3513d7c37ab7c6e73d4ce6bf3d3e60b31dac9ab75a76cf3a274a9db8b59beb3f78f39d57ebba4509eb6c2cf519ac0241b7b1208ece2829847224599694bdda461b4c1bdc7272c55278159d87542d406d7352c9ddfe92b2341eca244340acc4be0fc14d103ea025ec1d536b59dbb7598df17c6636f2abe88e087bdbc3463de12233101f56791dd0e3ea0c7210e446db88833359a5e60cb3e2458b5fecfd08025aa4da2346d1735a2180be6c2b9558cbba172ef413da26c8bc9fd8da5dfa5db3b1d7a1eff20ce59d2e18f13a26b1909857a98fee3e204a189353bd602327c0812912fb5630d10f4de099915f2dc23de1f7a3564997c150d282ea4e59ade91461b9b8b89fc0b9334a6473cc4be09e2e284affa3758fb7a1a06cf095a4213a12fe918c49646f2c2bd43cadbc7befe0a12f509717cf306d5decc5fbb638785510d1b904dadb72836bf0bf1201635d424b875c0b19a8eea4af5d0383a3f0c106b52d41585f9f125b60d389d113cec92a1c5d4034f38cca1ea7d4a80a30a069d6f7f137ce548f94441780136d13a72d953e58fa560e89485dbc443df98cd36124e30f39eeadac75d83301f99b00564373c1e764d00b462c6df2b933b903882bbab3bbaa509b3566880406106f2ab81c57ecbcebd2664562141f9879e8cf2ea1e85ed767c75a71e43219f9139a612bdd6dd43ed9fe6038eb9338c6be63f4e264078fe7983573ed19684130face4a24b571291530a71e3cdb313da26fbea07638e97be21af1e3e42bbfbd562377eaa115e98f9a09fb32d9d471a9ac3d012ebddc0d89025ecc0fa65845de74e2b787cdcbe27d4f158820d9fe87793c039e0a254e5579409b451ad1b9c7e987aefe049477fdd5c41a6fe63f4890ffdf4759acc68d5fa91d2c5c6871a3ca5c10931f894664267d0021540636556498f72f8e65447a8be428590c7096f4678b02c3c15c2562d0b963986109391218341c953e5e845e6efadf524ac6829d3342e7f7ebf94622f6b6067009d1ed6e0cef66e93ad715587da54fc147705a8d93b463def4816a9a2da580fb5b2c690e70f0433dbf58f96ecdc5cb748a744a1b1492895f74f00461d5e6bea28bf89088ae1cd67eb52a9ed6656fc1b313a6983c6dce6a12d7a4b42a8ba13ef0a9fd5390849a217ea4710e8c1bf1f6a5a20838bf5de1eff10c3c6f4079a9e05fc30506c6d4392910a417c17b725dda59c91214713fb3f77d94ff53bd5551910d6bc40d3d7f9a6fa8ed29561de748607e9a368a4fb0e849c55cfbec594e6e8dab7cd3ab3b3426d67f3a92a41adb8cf0089d0bc41ba2432f632ad026f8302317a4f58595b7d884cf981f0db25712cec37cee96907338913215feb4b842730ec802f1700c10531fcbd3c7e8f42d39afadf57c6d84400be9cbba1fbb7395a3ca8fb1c569578cc86b4894986ef23dd66fda6e4a5518185eac7d2722b43a07da5369e3c580a0ce91a0bc7cccb630260b7e78ef6b9d9c6f15ebfc43f15ebadc9b6fbf411edf79893d4f8461984b3906051dbb2fa82b7f047795c9fdccf47fe02e8ca217d0f0481e3ebbc54ea57a107f80aa16906c7f2ce3fdd4886040ae42eaa06f3a55bcb114e6a85f1f7188b5b8cdd5907b999621afbf7db8a092326eb0edf222aed34fa751ac51d820476b09fc9843118e62d1d3183ca2c2d70b1ba6297beab3279c05ac05d6c57f8b96d94eb600416a0e0dc2a18c15c137dda67db15edff3eddee12c4e35eaaf7aedd93f81e70fcfa37c49f63c121bdb657b971101197046665957c97d02475e0dd87493ccb52664cb918d7c90c4bb9207cc0a4829e81a1c698d8a6327b38a5454c7575a95a10dea37fec7a184dcc231fa03491cf0194379eb47580ca03d2a43e2e648e295cdf874fcf1195af8eb293de06dcb9bff6acc1b2c1bba0c7381a05b7ff55358c7db8e8f2c86573e8baabe1fe05e1386a45570fb2fff8b6620839a66502859dea6872899500a65d633ebad7fd6e858d95652cc35498e6aac7a6d6e79e361473b3b6102d7fee637d8b0a60a57a82d59366202dc50068be915c1727e38fa8e436ddb54a67132a69ceb272b0da51e57faf51f7355a8456130314e5bb0228e67eb086245fb918d8fbff0245fdbc59a576dc5c36a7a9805e7143372fb632e9d93a4dbe2f5b26abb21cf1e25888b096ba4f353df481841dfc4812c6180be88258615487038517af520d1dcafe4a50d851898b3c34cd13e5232f26be3b52395741f1989da3912568706d1ec3a548d17a6b6e4ea504d1793e232adbd74b2f967c1a96e0ac5e50bf880d732d4240fb2bd560839c8b1a7a0e7c0f355c364b7f475b665b7c1fbfcddefd46cac8e5b6e14e7ecf476828e9e55902526321f0692576c2cfa18f9947e9b3f50d31ca0b988d5538b50c9f41e624d1ce09ed9512a642929f44398e39681209e5b799d4f536896e3e40c99f82056569b5e2c07cba52f8898235dee9a9baa95d2cc5a97da8c1412e43b8aa5fbc0299ae2f8dc76db362909bd424309a4c025e72a727e2a814f6a3bb4bd4fd74bcbe26c26db14f6fb689e0555dfc9e2fc4474650aeed462885555f6333a962ac1b701584f0ddd13080fce0896097c95f17c2bf714b00f8889ba58ef886eb53bc4aed1f7eb8c68008adb3da6b368dff23d1fa5b3161a0dd49f088fa117acab937df96b069a02e7a10afba91913e794d63f05b0aae8109001706a888588644759510f66d05be19cc25f92338f01f683783bb9663bfee18884b120b20d87ecfd14508f6f1a83f7a1f10d25352f4891c3d46f570e28a7d77aab7c481a72fc55b9ce4d77f943f71144490bd97fc6a88ad15595a5faa07983f77b25dec026ab5be9f1d7ca066d8caa5109d42388840c4a67fed569bc77a56dd329ce7e4a1b9646f75a24538e4d730a1845e346c26683a7de237d62651640aacca8e49d1d6447088f4189184e60f0988732f8c33baf41bf35d2c974e8e4da9893ab8277a910cbacaf0b227aba35a4e7f80c99f39a2c94661a7761f9a8fce43a720a6feb8a28cdcbfee0608c02acc14ce675477d92ae0b6b551971a92b4e5c26f48742061781a26cfdf554f970987b1d8ab52f431b577434a0e2fc71b677db765d3bc26af10cec6f0caae6fbc28c37aa3c70a4d2b794c6d342b3396cb5d6fcceea8e433c590e391fc4c68bb136bf6bd3c9bb1d14bb44be55478bb36c6c81d55d3d41f980d62284dd57a5705f71f453ab512b1d4696ce27e023658692ed568467bf4cc439fc88f6c027e18de58a3d14792b774c2c350707c9676a04f20f01beee4acffa965ed9289e13c4151c8bc9aad88f342c17cdbc671d23a3fc578f980930a48336351ad149416db3c57ba9bf7ec5a3625e98b9bb2d29bd78869511c3b4d8f474172bd02f7f2633cea6ab7e5f17073831fb6b79c5eab0900d581a7f4aebf010667d246c7580388510e0dd0abc39939be019626a41fca38be5bcfc1b97abc2bc8ef22adbb4d18474c142e4fccf51a362e76303b92c162b53b8d828413d6c36725914051ed4fd522bec536a0e9214060ca4d0d2830610f11cee71086222854072582c269e4ff569d5cb848b413b92392d27000569b2e109f05d245c44fc0302a2aa03ebe383e58644e11a683e68f7aaddc7d145839f005765a2cc97322d6f7cd14e6b0c5b8255f7ba9ccd4a0f7f2cbd5056f9028c19ba5b45e7c5461820abbb5c1be1f0342be2a4f646dd07ce984db67bc2f81bd0e038c69466b9d1bdab65b1c8afbe23eeb84ce63ef1136434079358ed979fdaa1128ab85c250db2a2330ac48032562a220d2a08c8e6e859bb28278346c6c60e1096ea73f69099d0d3129e37005a4f0fc201b5659cb6cb50f78eb85296023a64d8e73734dd731fcd5401b8e5c422dc21fbb0460b26efda7b7d339314f8f13437a68daad51b8cb8ca222202298109d87bc2c4eba588b4746578318ac4c66bce4c8830fc128b38af999cc39f996d5636949459df2b6b2bc1a9fb9b70bb63701db5e24300c0af4867449927dc8cdbab698d33a2ce2dee9542adff9609becdfc2e175833c121f97d67da0af49b352fa599be0823a780757ec51c16ec377228876e9160c6ca5402f8adae19e42f600fe90094915f13b41d96d284c0984fe74494285fc8081d25cdc4be437996186491f21ed51c899213f91b02b7bf7987a9d3148a447f399a9daacdb3290cd1ac9de611c68fb0ea27ef0c1ec39a7dbf3cc4a8686a8c2d9d5733de9762830c40e15c1411f66d3c9831a6cee4329cb4eb98a5c0fe6cb888399aea945e3ff042905ba3c489e1263a0f76a5893f8e8aba04c6a03059a36236e76129cb02b7eab0e201f433f3efc512d41ef2003361cdcc5851364fdda5ae69e07a659e6fb65ad9916226c3a12267b8502a22a8c12f626e36426363e9a0d03a9bd2f4d8395b3dab907c93633f88177b8afd0cecded01e31d5218a83e43e4ef4fda59b362f4ca56ea282c7925daf3f7e1b9ea1670a14b2baf779a620ddd191c9d6980cc7322753ba93c2c0ce5da7c427872342c2a319b2cceee1130e60d10f022e267b720ad54ebd3e8c5e193a8490f586bb65606f9eefe26ff6a42d7fca6a943489b3fecd07e8311a194f2260c63e8217123c725bd4e3584cf4e164209b9daea3ac7cd635c268652396bce963ba0a993212e8a1eecbbcaea543a1a977639f0af55f8f96b97c6010ed32da4d7db8c7ba8f3c7159a4e2fa6d368b4e6cfb39b02fe2ec18dd931cfc9ac46d902d0f2826efcf856598cdf68a424b1c614f8f4961787e9488a935815366d52ccd960f860227c9d5306272294941508c3855b2a23460daa5eea87827b9fa3a66c5a4a0f7ccd4565679e38cb02b687d9aa712d09aa6299926b3af5539470beabf7083dbf1c412695f652412e541286438ec68b04f0b187f63dd52a755e2a2bb6814fad3f3ca5aeae9cae24be82f63b70e57adcf92d9b2509573ee3a13abcc1ab5fe172e17d5abf2140316727a38ecfe3fc35a729c6d9fd87073f305574f63756a626f1f65c53402032a56777f043a7b8e61e0211c125ed7a614045b705343246a08663d915614b222e12c1857934495ac20b5418bf5cd6526e9e04bf5979b98b79b31b2f36acb8b633a46825080715a99d2a6c97cf9aee76c6c2b629f8a92f2693253c5147ba627de4556c59682af723feff1bc49da3d3d22058b6b9460f7d023cf0d83017ba44ef9388ba4a9853dedf0b10ddc3c201628521e2d04a734f34e55a848831bc315c90c712b12c950fc7a4859d6901137ebb26ee2e76681ac236aa2489e3424bcc473a44653cdcef265d4f23c691b315560ebdf1fb1a499f660c5645d0f3f9cca5df0b774f09128712e10456d3fcacc4cc22866b00dcb88816815142a36e3eae4ee2b55d2ed190cd62af6f1eaef89f4d4808c908ae719965c5f1f118091fe77754b09258d491c9f57f158b65ed0bddbaf3856e23cb34958a15fd78ee2b85355712c753011151d4b592f1ed43cc79bd2694eb08228b4d8bd3feec8e3c72b6d6944921d4597aa0cd8f0ced913f14f6657b0b6095d37ad698c5b30d01020fb64cf72cc6efd20b5bf1f2d6817c85c0361eb795b7d15ccdab1d66c1529b57e7fa537a4f30195226fbfc3b1c3fb8c805937ea8ec6e64485120cc84f5ada1258df6b9fe3b2bff9b6b91e85b53f60f0ff4fb218f6b0762146d8c0c798fa8843febd88bb18e0cf0d05fe0fed81ac5a029ce6352fb643688bc8f8122bda4492ed189962b443a0e01a6b2565465286af2e6514658e52d705ff150c6926b95a1f03f6445e7ac01707c4403236871cf1db8030b8a9620006d1eb147a47b48d46a624d0c39cb868bb4e27f12578e084c0c1ca58b06501899de1234a545eba0756af11d86be027bf04b799b3e3e61cc99dc9c8e891864c3544dc7ebd537574f8097d9b2f2b39529d6789618bd5480a26ef2c8335c0ecf915d7b5906a9f43e69d4e030fd0b3d906890cad554ae8f5b9da25d60331f738e788c605ee5aa20615739e2f52f650034d043abedc1332df93fa9f1424ce04738129593e136ee9d2ad3f57ee755e5d9ee08fb9087d42d03f181d6e04b18f7f66f4e9e7ab0ed839bba408aaead8cb088399a5242f34fddef92990da2e0a3751b6583ca6f761a234ad7be68642be26eee4aa6f234aadf66f65c535363b02f504ade0f40a523a93da8184117e6807f3557476a1e09e2c3f7592ec27842ff2722c1965bdccf549f555161e7ef9498a84537d1294ee87233d37ba517bb83c014f02257b99b1cc84bedcdde3777f2652d164b9b95932b7357fe77f01d21066fad835cf2b012b64fe35dc11a7859ef1153800708f365853f4ac87b1ff1d58b2430becf751593e7c399bea541db442e97e005ee3095c87a7ceafcf8f1795e96605e3536803cfcb76426ce3d8bb2736907c9687cd65cc042b13ce9e4c1040499d9e5d6cd8e90ad2b7ab1dfe8350a7ea461494378c3450c5aa9810922715385d7d7b6537b4b8cccacd452dee2ab2b749a0fca7c8ab4f0a21bdd724c3f7fd8f8871eadf07e01641032664f7bb2bd3097847d38bf700510f02ed5f6bcb3ed179c869a2edde7b712162e3d89ae90beb4de68ce16aa42376effc5ae645474c9f445c32af37fd1592399334e34b3a48ff9c37cc3d859f4d1a0daac81c96ecd9c83da9e6895326e8a1e1ae0e0e19cae3b4504f142bca0e3ec8f7335be7008e83915602ee5773ad5238d1c45ca54825fa3f951630e9c3914a5e95cbd50c50e65207e5dd2b7dd43ba1e1d2cdb7d5caf4a02ec3799a24a5d2c39516581c3bf046e7009f9539832ea8d1122a7443bcfa40141d21e5feb8e500212660d8528ab13adecf1682f000f86aca536bdcf08d421efb017a50e869b22489faf1e8479402dc62f543cf0ed6cb01f9230a7214624a2054328d403d4e15643abed4498aa76713905987bebb4076767155016326da7733a56c919b684c9a48692670c556bb4b1c28fab0ac69b9e419558f28e51e04ac4c8dfc8ed3e70f3f53bf68e87c564bf57207c72a82b8bbac4fd80382b4dce46657345098846b62b61bf9b57fda0d431ceae5257c3d2aae0a3b369a0ade0d42e9b5817d93302d08a89f7ff32152da79069d539bb31e21b77cea8352ac93d6e136820cdfa17eb57bced21f8d21c59321bf6b126eda0ee8e53629c884e6c7dbe74eba0e6f43f180a6d4fc4508ce293b4102e83cfffa5509ae99821a084953a1a1e429e12e515fe45c1a641d15dc3d0d5b0ed39b3ee4dda9fab8b1fe4f7c52d7175cd7392da81919c83801fd4ae0e8bd73682be882fd390d1f8400f9ec0a2f00596d97c2c4651b0433d23994b64503e0068f08371d4f94fbaee96cd4f54ab5984781e4d9f0bbfd6184d01a10fc2dc3ca55e26487350aeb3666afc0ad30f99d171e4e35908c549876189710cc3e87fcdaac256c963148f0bab1e9a148f2dd823af8c9f1f9c2b42704fd07b652bae38c44e60fba45fe7ee8b8158e7f54223e8587dc731a3eda8f6ffaa7a42070aebb3ef5c66f8fc178375f1878f23c5f7468e29063d83131b329c595f94f1ad58bd569d4a13dac3b5f33472b14319475daff7d6f5f0a2d665ef0371b3d5bad410572fac573a5c17b2d37b2b7c5197f6c40baa7aaab8096e2417192830e74d682b47d3bd244734d2e4cbe4d7d6eaccce22e5c25ed8cc25ab1abe466821eaa495eb476ed1f5aac778c1b832f1fef50d5138e4dfdeb67ba30778229b5f1810c246ec924f496028a019a266437d597d1001c9b0c93722969534147f60baf5d6679147200c998968a30b70040a122f6136dd85dc6c1857276733fc9c34871a2d06215cf972ea45f0571a1a5b4cece31d0c44e1aef2c67037c4a8b4de050e3d2d27c1c6c7e330b650bd7e00519948528d11eea38de392db8d2ab93a13c51240d7e89a5206e8f45284c060e85e34ccf585057aa757dfc41d0f54422518146ac10b6925e371952a1cbff4a5729331170b04715b7f8c722258f81fc7fed0a514f112c14dabddd8adc9f944e54b7e96986a472b9b717a6f983417ba2a2d0817c1be7f3497c798d32ef837885d41b5c7d0d7ba3268ca9c6fd33dd1a13b669eb7c2428f4ebb40efd23392cab4112330a9633c2d65fdf0de0258c9e17023b265c424d454b09ccb9e47c6f90d51b58ed0ff32096453635162b95b2284a0aad945cbf4ec13dec4defb53fa1c0d85dc3d09cf382a8a9b988364f1d813e55c804879516f29c79edd39eee0894b3df34fa9fcbb6fa08a759bca476a404c35c67be0fe24c5bba39f320296173aa8f0d1708e05c7a0b52fbb882e4ef2045612249ac0a26f0e34fec03ccf0f865910937d1026c7ca62bf2a124b749bd016ab26407188c2165e680244f268f582cec453fd49a09358e8db4362f9ea99a1ab5e8fb31d9a3a4d1e54525f81cca0dc21b079e5a9ea18ae0a0f3b533fa5af4cbaa5305d8a61ef512c9cd917b371536c36870cd216e68b8107156f43d0e9e501b937289522746a7b900a6e31c003361ba7fb21b107fd481c50ed557ebcc7730e4f9d8a8c6c14538aafe46cf05b37413da3d62e3825d15932710418a832e414aba21cf3d3b8b7121856fc5fede67eba84f15109c0c2b41547c64aa08ad153fb8a00b10b207125497b73524e3bc4e8d15face7222635a54b2bc02b9d2f0f89d1856bd8d1f286e4a7bd3938ab8e42d9e90a3ac8c79461927119eb9c433abd02386725502ea1410a9631a5964d669900ebefc4e1ce1446d128a02f43367140eaecf0190701fc529b8640f04424c101803e644b8241a175313d2544fca98cc03cb641aa35650585e237ae8e923332ebbdd511f0cd12e286967f7a43306fcb828e2f53293686e38777ad74221fb20f4d0291ce136ef90029827ce2cea1f374074d28cb48c287e35ab29c8c604b9c15213de9212532b852f53c153c38efdaf860e5c549671239438793224ff96e803f116c2c0b41dfc80dd23149d29fdb6a07f280a5ceaf7382a3eea2da2d9c1164434b4cc9613bb94f70f443d633839cff8af804a4391e21014d0300d84af2f3e3fa8d2f827021bc159fa738ef9661b48e71f92f27d2a4877c85db4c74f61bf58c8b974116dc111bfc5fa88fcb60600cf0c0df712154182106e1cbd3b759a317002e79a50d94b3fbea6294ad93f60b1e5321ae7d8fd673aa1bdacd643fae4b46c6711d33e904b268fce729a1f841aa2149b6d4d69dc43c9d9dbcc09beab32ac64d9c99c7e6d090a80ead3ab03c8c69d5fe8a387bdc6b22749797bc645eb61d297067fec519c3425e4bb3ab0c38195a6748949e2df2f854592959ecf7a09de2d0be9efd244361279cbc7010cc1869260f67f978bf97df6f672bd85d12e7555f7d4ccb962a3bd62f6975c1e798361555164ecb3d7306945993672e8fcff244706560f0499784977d35c8e4886791afa8feb6d7118d920a5059a6886b66cda2fc51afb5d3fa769edc9b69ebd72782fe773b4286d59ec4c4060dd354b934986afe6781de5249e5633b830d572762d705f290f57648aaa12a8d172c82658a74825d9fe018c4cc2927271427980251e36b091ce031e027e6147355546ca52f34d7e15eef31a75d335f7ec55e0e57a73400dfb7713bff3ff11ad19239dcd3975ee75b3c9cecd88d562a0bcab56c9a9d4dfd24cb57989673ba3807d830e075d33fbcd2f0fa96d830fc1c6a2bd964bd48b035eb2f61b6679a8df89f669f2614695b0e1fb9d34f084b960392fbebdfc0d3b96bfb4f7ccd194e66571294f6c3901dce31ad502e725742d7070a8eb6eee134501b14d9957e9c0be9b692e885ddb6bdbc1402552c5307bf8d1019d65eb5bcefc4bcb56df4aebc4e6e382728778d710da22af8eb7dbf8b2eea42783ad36146717f341a205a288ce4c4a1dc59c895e6a14135a781b9f2278b9b3908c4f98f081b633b0475f96463bc9f8905435c43ccec4494a3e9a62479a5ab1c372da4f8767254710c033470697b714ca474c201b464cb2f11ec0269f75e1bc4f32933cff6591e6be0c1459275bb86ecd18bce5e4233a11a97dd9c17bc2c3612062dc0cfed28797f26a7ffe476cceb707f289789b5d24c50e9f5bdccf22839fa3903a655f6dcc713da9ec3412c4ab87fcdff0e3f77a86715a2f0af2ca7cf291f4dc38ceb0e98052dd1ad6f3d643975c1bc0482d56091140fe9332867e369484f60e0620594403bdbd90ca606851a0d5cceb93c3c182840931e5270995e47558b73a8953572933fb3568f5a07f36fd40cab57c208d8cc704282d5feed69989b1b3872862d75ef823b0ab590b1cf60d664c97247b287105c43410db6539664c04548ecab62ab4d9c91226487f7ed0566660f04cae3bf8d9f876645ba7de0f948a26d9c33edd39b1d34681be7587b118b506df59895f6ebc294cf0698f7878e0e44e30ea787c8bd9d14f656a0a0f9216a99a5b29fd5f0bbc4202c2984e3058d306f14709729ca94cc494a5a919a1a3030222fb12427d726ddb3ed36fd17e9d1c7f03b531088eec275735560153e86da0590d3e7020cdc5c69e0a64c41c145bd6f6df12c87593d6d5ac438822df55d58cff05e9e8e2253ff0a3649998cf5043caaf0bddf3090fcf608c6c6a9f3fdda8c3b2068f056e940f1ae59d8c7b7d7c014393cbb2edf5fa916c7fc7d1ea7d1fb6d2f452a6ed1201a398eb7de3f022a553dfb98eed9dd0948e5dadb5af65b36a9c4517c3968ea1280a8d2d47d443cf808e1ac74a501ef3f6f3aba223b98d7552be1973751e4d29ec1066047d83def1be4a2c53f26d6bb6b1619080ac87b45b91272c28b01615a84de94d84038bbe5f3dfe25abd8f1009e1a4c999950281a8ee48b43972c460fe8f648eec6956696e69646c34ed092b355c8b867d88b07238116ee2d9463f1e509dfb42242e954522914f902458f92a35c654df1bd167efb4534e1776670416d8627ee44ebd813b68515910627cca667e350f80d7e74d5adf04e125053015141a9c1695c5ae6fea004e045393529e892ae639dd677a42ed3d8c7e00c62fe0996feee98c799366430e0906937064788c528a0a6ea16e3c27fc2b334b6d0e53ba5fbc9dedf68eb3159a9e6a2085b8a1c378d27d805f227a31cae18352617128f1907ce5db3608f15ccc9d6f9ff6aab4bb094bfa4b416db864d99c70a6f9fa2c935a5d9eba1bf46c119b24afc912d961b38c0a3b61c2d11bdcc2560a604e024ef7d2b895108bc65375ff3898f6660abf2f33ee088ef9e8e0e7a722f2c7572dc056cedf5ff2450b04cccc8d329aa4c02c224846c6f14a888d3dcd563ab4b219172a870224de58f169bcb5956b1bbc2caee30b16eb6760b69ff73c3e14bbecf3459bbd597a29c9f50c3bd5d10e7c9b3cc46eecf7d72438927103d3cb03a136c1fef7cc51d77f9df85b513ae6822487906a247659e4962d8ddb511ebe2e87dc30f422fc303c560ad1c8af70ff39d8d753dc83ce918d334e4277e76136f3cb707e715a12696e61019a2370c00e08ee6b130b991a621781d9e6d8dccf2f58527305a551e0f947cfb321e9a89af1705a7b4f15e1ba259fd53702e86a9cbd9f838c9647cb0e3df252822be73b75e3a37dfa7b056f2315349b3a495167ae9943a833d605dced6888208264cbaa6f7c563c60050837c5e78e0164b00ec75e8440672b7954fc886e8beb4782b0f1097bc7b0987c15c19a5ae53e0834a595e83aee0092b0bf62e68cb9dd2295c2f9f5e20ac7cb92c7d898bf7a50c36bc68b581c04af857ca2cf1446cd0455c63271d95f019b0d76cf629a123b14577105777278a50ac53f1aa4edc2ceb6df957d39a886bd08e1e26cc57954ea3d3ddc52b726c056e483392b22bf67acb3021ad459ff9325d912fb6e90fda81149c235e6b0eb1e0ea8a7ba99858e3ea4b078057b023754e00f30ebbd870f6c68142d9cc69e879a85010ade0a63a2663a9eed5309ed6e2dd1c7004a617dc541cf243be624ea9cc56add186022328cdb76f7ca258e7460c16a0e20ee44ee3b64dc39f5795a0ce4e27b4e33583db71f687dd85dbf63308fd080235ff452016c218c6a7fc3fb0868f68b077c744744786b5c595bb6543a9d7107626ecd86ba4d70a3bb6b77c614925abae5fbb31deffe29d0af75e6e8fd5bd01b0afc3379dbcdc9216205e076233ec8e42b9882f78baa49b5f7d3463409aa5209635fa69ec6f67adfce16ca6df7a34ea0ce3cf1521c77d7ee1bfe973b0f88ff6f6e70d9b569a8c3d7565241cd29d5d43acdaf3dff5ec045ee0f565dd85ada816d857bca7933011badb0d79825e996ebeacd32cc739da5c807e052a093311e67492b3190ee6e1d09403ff519a0442ad671f3c45aa1d0b9e18824d49a8f0a703f4d816542d542ed121d1e7987ce7a6c3ebc9bdad28e6fc66c7d190ea7c51dbaab77057bd7240b87c2275ccd1e55316aba11964cf2ca33da92a4095a9cd1af26a74d0b68cb1a0f6dc519d6e41feff3ea569f214d235c246ae0739dce3f559584e3993bf8fbba282dfef673d2790dabf39265ded850a4e04cafa6dc91197b501470e81674cb2107c7137b616d0f305249bff7c35db4542b970e9233759ae64a92f27b67e79182c3068e8ea68f2e0e8b28be5a0f8731318dd22911cb82f623afcea333db6fe6370800b23b284a5921cfb1fc8436a9f575417973caca2b746ecc2b012cad4dddd997f097da2ca77ba7fb97f37224a3083b86c8a6e5e868054ad225babc5f4ac26a3329404a0888660fdfe31082b99262d7844f3eb8070ddc1a7769bb9e9521788900d69463a2ed6f29aac59e4d2cfd628378e7c4e898321b948e985b7b1e00dc2255942a1632b304c1de5303e5a52c3fc9151f19b5f17391c261be9caa3b7cb23656df0a7f91b98ef6257087f1f60b58423cf0664a47d4ef4c709655681c55c1e239a1f8924157122d69632c48b95bc12ba2e78a1bb7d70a91c336779c875047281b9223cc5eab73103192fd03727819c62221457c8aabfdb13fdf11cb90400afcfdc4361b4384e064ed7b76c5c1ab08123108970fe300424691d64c2db1e69a34920953986ecb55a99e5d1bcbc35322e47229ce5988ece50e56ec3389b8569053238e6a47c355972dbce7d007d923c75a0e9d45cfa89073b696c6bd3d67fd157a2a5dd416f6a9ca0505056ae532648c0e21c9c9b8ca1b6977c8d3b3958b35d849f779e5ef3c4a52cd3add1ee8345b3626c8438068e3edd699ff755f28ee872e3553b56bb0de8c628a3e9a0412b0f7379c2517a168226a52c5c4ff4db5acaab4a5510c1cef91ab4c5a809f4418ec6c448498002ddbabba046a4339f525f7319956146c236fde820e8a8bca2165c344fc1f5db223e4b994c3b8dba171f94e79585344a91a71a04a57aeafcdde92a747771c90e06bb66c22cc83e0e187d57698412a9a72c5948dcc19c1abd9235648e7591d7ca30b660f5e66103232ec13570a517d3f3459389817bd16ca2419c5f86068fe16fb3cf7f95fbf58235e80cd3b040c4f3cdf6d54354df6cadbaf2804ae56620b0adbe96b896c03df6b7e09e614a5817d4944b112a5576a491652d4d6bd1bf7f77d9b75edc5622a32dc50e899d00cdbc4e4fe9cf2f2e42beb0769ea64218f3cfbf477d335f4392aaa505528ff74230efccc73cc4aa535b8146aa0b70385f4588095465f1ed68d7ff1f2ef81423726ab0bfaa63fade93241c4a9617e90ded4c35b0ca5139c8bfe2fdd8a709e117e741422c4934cabcd5d5085452cd6db0ea0f80b84028cc38039d1428f53e5fad6d5a740bb0f1120d34c79e5d9f13ab4c03109fcf3f839bd3a8a148b822c76e53cb65f2920cf26274caec2a98ff2f4e6c1299a964d369397f3574d1f588c4b1ddf3306706f5e2e3853c569f830b9d91a5a0be553097850ad36961ab63d1bcb8859df7cbc64a53309b366a6c313f0cdbfe4589ff46c67f605ff5ae9d968a31cd8e0a70aa0f36654efa4afee214c1cfdc5c17a657b9a1391efb61b5aeb116b7365dc77b61416e08334d61b360320678912eeed33b847a4634ba2cb516c068e5c4f60348f38b73f87d75939f18490794a97fae2e13eac7c11680e2646a8739a9f9f5e608d93fb2431df9232321cd919bd58781ab8191602fb9f89e6334dcdc908b5f975c963dca65abda194b354911a48f34acdf035a83d6191493adc74e2c91164ac1006c4d92b4ea64df917f3c741f34604e893786f7309dfaff14bbb4c65605e28836166e076060472ea13fe2f5c7ae7be201a7df77ae253de67d9865af6a8f176c5096d3deabe269d2194467e2e34ab90161d15b4c97464a9d10642bc678cb5af12a0cfec6737cbbfe75fa7df4a7446d455110d7c88e5209f4590cf3af3ce7568c0ecccd8ab8a80b2790d6f05b14032f5a817bc8063f3789c03661439aca327749f5e10c0d4db99ddfd385999fd6e0ab3ea232882a820020e53cec3a65b9908f531b72009ce6d64424f188ea4d03d5cddd261721bd722faae5073f7f0488501f790a13ce7c3a3b51595139b12fef3482090afd43af4af86ca1617a4c4e338162b99fb0c1419d0a91d02fdcd81a5a99199e47edcba6f5cb286e750c6582bc65d182180388eb2e6b61ca2b0cf2f4e7c57cda65e36470fdc2164ae4a924b06518a6b61f971066b951675f4bf9f249e78beffb5b90287c167a06811ee4f0518b711174d093d2de4b4693460a65d96a0d5132b62e2924448ca700f6b6eaa35e399be183d8be429e055819a388eea6ab211703bcbf15e347e158c90ec284ddc53bbe1e41e40aacbac0669bfd86f4f8f11a169a81d746dc23735607cc84bbe152ec52428d0128252752521d0c2c145acf30c6d545023265c7195506650854eb1a3b27a71ea56bc3ef75f87b103397bf290deacb396da6fd57d830de5403566185553666482db8473b4eb3ad1160c1bd89a1b7591957df7d6edca527f91beb076e2df6861980d73b46230cc50756bdb443e8040278bf3cd5861a347b5b4440fdd4c2b638e664bcc033d92bf7a3945a3165b0c718d1b0b619543b115fb1555d4cc2910a1c068d3dbb44410477a211b6b8a4b16ed9d4cc7333dddd6510cd962bacfa98c1ec7c4f614c4492aa27e85801643af6bdb67f09cd0d6a1cd6eddb345a89613bbe05fc045875d2142cd4d2914ddb11391deb9f5643a9cf4eca0b8a06d04dd9d7a6ae4fdb31a3f03623a4523d25e7467e88d3387616a9c85e883a22265480b2a63d9810f327bc5a810b85debdd9a4eafaff2e25e9c9cf9377644bc5971ad55cd3fdbfe246df02f1121603ff3b6d1764d6483595a07032a13f608f99c345d358825cb35ba14575b6881f12ce5139eb56256ddb818d61f52734687d1f716ad69ee99a12fc5092ee89fa1cf0de00d5ba700a756175693ce68ad08dde1b29b84ee177ba607c4a293c3ea9097b7375f6d667fcf091337e3cf694327df5d8ad3ecee9deb18447d4cfe1aefcbedf13d817a1e5e7b3e791740f8ad48872e9d157ab199f3b6a1c01beb38a7e20cb8f5c4cfbd7de94e7334acb2d8770b6518ef8121ee1c84566025002001c6a721ec5dcc073ebab5ef01915d62784eaea0f5a826db7658445c0156a99732ad4604107ebe455f96cf10c84058930f17a34a55d66a66e2e046afa26f9f0783838516f1b1bfe3858449672da77b91499cc9134ac7f37e38426b645ea731e5b3847239295e6ed4eea49aac8aba8f8ffd358b4f81ae2129e6467d2166566bf48572eeb6b1abc6015c9ef165fc02a41b84a24e3b335737d7b7a90fb0ceb769cae89ab15b17e5844ef44ababf2eda2a19462ae3432116caf551980fc90b55a2d55439ea8c7d10b0737e455bd9f0236f78129b5b70aaf3b96ef6a2a84bca7b6e38c1d3275f86829ffa4029204b304130547a40777c101deab67b5f12d90f0d00d49072fa5c33c0f87b6ccd1477704c1b39a8326862e1b0ddc8b01d1e59cb29bc0ad544b899c222df13b13be6ee6f6f6f2af1640e482a3c61158a804057db966d4a02dcbabc8e1aed7615ae6fed7256727a39f4a72ab5b7f3bbcba514470711189c57336c858944314533d35fabddac2f670d1e4741dbf4c25abbdcd16924969db220f99ac8a9a48090e91eca9562d4d675198426bca5ddfa762601f9be95b1f4c06bcc2beafdf84ee6d8a97ec6fdcfe8b93e2ddb9e4004d3a61fa7ad7806d72727b8ec627d8c080c2901baaf7297feee047ac7a3b6d0d9556ea02f85dd4a278adea516eb9f2f69842c19dd8a85e72d96ff92dcce5bf688d247ca7377f7a149432e8c4f3e80015ab63791cc2449d004dfa140c67ab81e4864a7dafadd54dd15f84a618dc49d90b2bd6899874781314ca63365cf529cb5ac22a2479ac1c1502942e0c7697640884346d823aaa4ad922268025901c13bfd29e4a1cd7cee59df7d82a813ffafb5515f3c71e7a8c5719d64d1eee07b3d1e8061c6cba1856ccf278db52d248c8ca76fbb6356fefff7ed737e91fd8b388cc06f2a0de64a84357435f5c3f4573707aa1047e7eed057610ea29aad56762a2978fd810c869498b5a3e287895564d6403c1b3da2801a1f5091aafdf9778d308dc57a691e62b1fe3c88b43c1dce16238c5210648fd6d7c67449c1de56080b6534b557702059cf2c309fe30aebdd487969aa71604e86595237837647319c49156016764b532487fcc733959d7e257d4e6e1db20be76d4032223a82fc15ac0d9f11398c4ba69760b293e5313fb287f2d03d3975b999b5f68b0e2e43ed6c7dfd6c0f5b4781c505225be62db539ec5c394b203a21bc26f07f94ab95be70f542d1a8d895ac451510c4146401f834c5d9bf6303ba43418edf15247153b6c6e6f35695da46842ab013e8d9edafc1cee5453bdd0626ced068491789f1bf0da01147f35f893845641a19c3688f6abd83d3bb8f653c444ca5c846e6680a862371bf2f603fd2f2c6c31a8a4e4a3cefbb5bde6fde05e240b159ec75e32e489c91509baa13180036b03d493212affb5ce8cba1ef7e5375a4136d0e04ecdf7170b399b332bfe17980eec145bf9bd543676a8e8a82b778d82ffb55aa632f8e4abce9f15d2430c51ae42624cbd15ba8c071b6d69e069bae29d7ae25c6ab96cecd210d5a3b1c6408800eeb79b59670cdf691695fa9274e600726826a98e46c88a6da62161e05c00fc18198f64080431899abb4457f8b24c6a2736bc4d7a700e49dcb30e3390983e0369f443adff49a2a18e775eeb78d29580314e6f4daa434ba6a6cacc0ce427e64c9f68b934c0f19fe9f0b43b814c08fb98adeea0837f84753f78f0d6268244fc87d07668f6c48fd9be6601a5406e99f7be6814d17868bb1823056b8acdaa56d5267bd62ab6850dc5a1b990bcbb14a02801c61d229014f29f81b604c1419f7288ad6a0796f0bf92ffe5a38ae8326ee798f02c6bfc06b01883d7655b9b77ef5f82301b560b726251a5e6d560980c37019d4561445a60d394aaafac64dc7b2ceb58b18ee5e13195254b3883585cd9af500d2bec8361801c16486307f02fe25ff14231efc96ae1ebddab0381798d3351878722a39188dea70c1a27f845f3615ecba84d84f7113ef3f74a5cd1bc69422923e8b4431292f84a0d6226931c22377d49b685b573ac2189e5f6c5268680ed78ac9b6de4b68e59db2d9dffa0f01927958eb6a9a88815ac7510981f4c25c647cfac4dcaf542cfd42ca587050f0ed291d5a9effc987e27296418c27835674aaf600983ab94a3219d2c367b57ed13935fba17c93f36ed8105b383f0a813aaac3e66fdb3e4c0adc90133861c12c5ba1e977c700bce2e815f24a5781bb1ec18a96e20da127d3860261e491074e49e981046baea7d2c357f13b916350eb3c9933569c7d300ac603b8d902044963872d7d077716fb8536fa3a9e193f1056a0c81af6ac0b7a18f33f36b633109b9d2aa217e0ae8a922928116dbe44c40264dbf5afa2d066167b96478d685e7dce68f68611b1eee13c730dd4c41e2849acc8a3ea139f272a7612585a0279aa0f31d914f07e8cec0afd4636ec90d4905d9212408fb5bc7c70609c5ae9fcb64c28f6aa3a1ceb91f4cdde6eb8e2db8c930f06a379537e339eaf7703a0fc0960cb2bea0e41e72ad23b8f46a67c78e71df3ecce089c828480f2703e8539e9b15265abfdcb8722af93050531121a5172a44af0a4c53a80a0e3911aa7b9d2d764c0c65cf605c891d6ab91af37fe6cc0944355f2c2481ff537c538a2b01399fb2c810721b3879539245a639731af192fb8ea1aa35ef5ff904ee4fdc0fcaf11ecb8f9be2aaac4d7e709c61828407d57e95d8c35ee59412fc47dc552e080b2559b8cee8a9fbd28feda08981e5f6f927b7cba0f0855fa91f036a01e1fcd6946ca65119ad87c78f735beb14f99269929700efa532b5455417dfecd829f0d9e26ef711f7a47bf7a56678bfea808d02344c21879794731a0b7ea7e7c87f3192577225384f1563c0c858f1379b39a5afd1ad46115d12f57a5360a3ed37aff044d6a571bb1a845313c1af1e163becc5461fdaa44ccff52b734f76d836fd661e2cdbc92a2897f71f88da33362a684f2bc20e6cdb396694f694fe4ead6c1dd8c600cff84242cebedf1379b5c5a3418af1f14e94717bfeabed246c8d127cfed887c64b88692eca687ee883894f4e0a09d60049678202604341dc3bd74b8af3d2cb9b3c607079c445fe1518a64b42059b5c0104aebe7c69bb680638ce74c2ca65c12a3a549984df9574d38f13cb9ab4a834ed7c18af4ebaaa654a5cf4dc52cd5a7aac732470a5b4ee193c068d163bb6c64e1cd81fd85f2d5c83c36bef3a34bcbe2257d78d95ccc5588d778e7c23b7678dd2aaba7dc374b26393654a6662aba855fa81ba88e72a9193cadecea9d82753a075bbec3f5f09109f39a967d974493598baefcfa1e799b132a51657ee5c0b27a325f0068004b9daaabb8528ebaf7e907967482ff7ef9aea80018766758a909072c0cdd239e603961306990132b1ef0aab63732eb6d11f51d794948bc81438af9af329715e1f8b72d793b7a2bb2b8d83eb8723bf53c2a34197cbb36fb82caed278be4508579237f1f55839cb0c32e9f87a09093c54943b3bcd666dcb3928125a4dd026104e52b7c568fca4a54721c8eb71273d78d3dcdb35a17a3fab56b2736cfb2d788b4ba3a7483427ec3da612e5a8fc48be9c4c13c3524a7ef24547cdb37dc30db85d1c53e1756a5b486f347f434d434a577406786de2beb3e89ca7f9fce7de5b58294ee19440d778a99f5b98c96f2381ca2c2b2c5ba2b5b39b96f8ec7b4791afabd6b90b56e529e93dbe86f1acd1869280b9a956471a05d7fac5ac5ece2df8ef6f6d838de2a6c9745add7adfc61731b22b9aed76abe7d1c4299bd4b2661a14fdff84b7d79b3ba9b085f67022702ca3cbaf3f6799f9ca9961a7c6ae007adf16f67664bf0858ff9e8ff578a87a89390a53d31485bc52e171c6dde85a09b4011fcf27b9f508e1bbc1898bb4eb872808bf7d71d31ca29a06c14c098e109399a713f1ba5634bd2b1263efe0d271f40a953f6eb654eba5d25ac943b3eaa7a260b5c8d6a9c69c39c59ffcbfe505b8ddfa3ea0720c0febdddcca8c31380aeae5938e5690edc4d5f7ae5b35985d3de9f826eb10bcd772e8ea866f0051d5d9d5644b8f2e3930f3d8a1490b3514f239db5edfd21a94f62ed37b17f872bc39e8995b3634dc505e87f32809b1743a472eba1d43c260efee505603174e08bd8ee9e21166c173d29c4992207566a3eb1b4f0805cf4578af40cc11cc40fca801e1adb92983bcd8cb0d1d1a478e1783c25057fb41f21a0793f98e1bdd5675b8d0f5ae1a8eef7f1d4bd4d859ddc392a4371e2a2247464acd778830ce352125697d4e2ddee306d39732443d30d76f079fa6ccec64d75e948d72971b6f47c7ec175fc2589ba4418b7f6e45e795e94e8e36721c993c50a0b911f020de20fcce6498488fa87fc673e42b475a966c4e56404b8be8831f6e32c3a35e18847821c3629bebe83f0ff71acf940bfd53dde4cdb4f289f7a304a2681cd2a38b7921a7f2c181e985f74532f3cb7ea45a114ad8aaac238f25fb7d57a2f169d5742af5e161409bebff185d608a7a5eb811f3830157a01e0e8b422ee4205a27b309a18fd26588c054aaa4a16b244b4f47ca069314184b8d83edc2c09cd7e22e5d811eae4aa5277bd250dffa0b38262d5bb06b40e765485b63468cbbc76676743564d3810207377ede34d7a42805c0bf7f05d85a83d084b8828307eece59fb37fcbf6c8995c5f0f6bdde4956d96b9771f6f9f785fe9d44babab78bc2c686d9ff20bbfc62e045bef4d85bb4c0998a9478b642063af3ed7e4ed3d3d785a17d59fe7de5e65556843707cf978cbd1e5c899a8526109661708497bf75a757faf84d4e01959bc18a0f84fbbba45b66ef491eb976bc355ac0c20257fe7279fecae2f8ce743b59dbe0b796048eb4eab3d826353c9e30f701949306051ae3d006266d547ed19fffe79dda64e8c6a7a0111b8f24fc522b16c8a49acae269c74c477ae68a4993100956a4ca0abe4c61d8595d15a56ad9bcded216b010154b9dfe53347e96b8b3a0aecb43cf645be87befc575e803a420bb2f2e63cb34d0a37e2d88ed1e9a0661b1cecc6d5b653e758373d0f8db2b1dc7cae410b27cbea74c24546a1174d77dc73e78568237e99e6dce7e6f7ee528f097a22e212a51e2fa6ba1e12111781006c3565e17e8cde51194b72a7bdf2685e7b69aac8670b6c1cb631ae94eabd918c80cab439e70b1dde8c12157868e50f4202e372ce8f1a069993878be529164c9a6b68b63f0b2671c1a25e303f1d56f1b476592944e5ca84c9af6c534b0daddb1cbba2cd75850a857c6b0960b39165204cd051c584e4722154da5359607028c5dfc1b0ba04d3317fbdd9f8fa7e7b8f0c58b8246a0d1a0b8e4cde2c4d0f624878a2f5ef89df5e0b15ba4cb369d15a2b5460e9ade7697a8541012b5208ca7b4e425821c7f2eb3426fe6991cd0b40a03861c21ed85e955cffc28c3b69fb3f10fa0dfb3044660361fdd41c44b5cae819a1218450fa4acfda28de771525b0b31a619beffda7898b3106f64507be0ae26816a758b840b9686262029000d5eec1e4511742c3138bb4de4e7df265db2aebd1463b85cc14cd9c419b083a2aabd9fa93c61298c52c2969b3305c09c23b23a3befca2755585b7bd609ed89a216844e0c2c0aafb9309e49f595d97bd4025c52184193361267950b9db4382844aa28210051cea2c3137f5346c74654b3c90f3413a265f7c7fe7257ae0e7a2a72280e7c2f590a9f08a90f92e36665fab46c2e35e9a65128159e9c108de7eb165c188f67d9f1d9103bb47ca9bbf2286fa1dfe5416d5d04ee6deb3a7852fa6ca7cbc1c766bd175c7418b6a304b1ec5370611803d6ac32a1f49491ec5a99ca8c2417002f7babf1b7934709133f9cacf6356ba9f79d0770b032bf2993d8e01ac15eb4a499e3b0fa06888047daaa9135d82b9948204dc6d0dd8854b7ea06ae06c422328e8c4e31480d6cccd3d85da8dc14c3a1b10616d57be280f801e9196373d062ba1598a0449d2e64500c05cef7cfb6e18e4272c8e8a61fbf03e5e4fa4c9b334b11815cfa3ac4101e3594ed41007d20eb9a3c889cd61c430c90fe074ab3a95ddcbb6e3589053224fe20eadae5cb84f1fcffaddf35144e7ed8843a500ba8e48e1a90117abf2bc7aafa1375137b518aa34cc7b63988421b59a4b4817b2976c587054733456f6265517342b58bca7d05d2a9a22257fd717e7ed5148b203effcba9ae54045d29f08f8335c6871da583ae51f8ea6ccc311697b4b7a5e0d492b4bfa9f56a9173d1751406163dd0297baeb9053e9d4f1b8b33af6c546587409b2bb35676ce8a1597d1334e0eda143d69f4a604347b400330f91f98e188faaa9a58fa14cca43814dcdb35efca49da7069e4a8d438a3383b4c19cacd5d561d8c39c720b15d3fe8167ba9be7a3349f31d53e0f2df16535ad03d5ca484a24f6374342db8048379710a99260e931b0bacc03520d59f36b36e97a6a14e889ac4d84050c8c4ed14e5612b0173c84da680c98d5e4389eb8c0f642a8ad7968e00a964b8acfe7d2026fd8de14c7c32d55c42fd66378462ed8d9c53087e8ed2754e77eae5a9d9181ba9266a0331dac339b789015e6befa92d844c931684cc876e860b9da358a33ad771515ffcad8323495500ed85dca8f38d28c437c04e70f2bc6b37516edc08757303bcd19c1bf92eb9b805f2649688df8dc68bc4ea3007067f2e7ff1c656c0ef0df00c2fd16602fe29a1eada7ce85118123f1dfa1a431146706c3f188568120ed6722cae8c7018da4b96f81f815fff026ca6896de9d74ae083c34ce15b4f7303ffcbbe44fefea8a455c60f6746aa6ded8adcfef9dce46faa715a086d35d1f3537dcf4ad852b519f25e21b1555cff37a2bd6349c0486e9288a54b924404a4bece9563995e12649bdbbbf968578c51efb765419dd1977fb5be40556a993957d3557f32df703238c55a6441ec5b41f441c22aad6e0187a53423c54866dcb904de3c239c6d12fa967476170afbc283de91932237ec44db0c80747664fb6465885c756356f2c36b0437b00635df71ab95e6d704d2787ea1560642d69b3cdc8f00771e68dcf3569757cbc2fbe09c4fd85938e79d57e20578596a58bb5edc9546959254840869e0481bbc4f4ea38c5e7ce64bfb2dc0464609ac57f0b8faf9a27a3d15f4dfb7509b6f0da16fadb29b088bdd893cbbd662b3214397f2d968c76c5e7ae51820f88baabf5e89a80cd4df3d17bb76d965e3daf59c83b87aab19672680e985d4643c27f7daf64caf233ef200542f4e23ba8d747a7d250c2e0f2cc4edc07e202e0f85947e1b51d5287db4e7c8b24d3b54498416c8d22ca5d7d4560e496746db196f592aa122f478645a657d8f0dd72d3e1ef87234d8e9486b102e77f188a04ade4de3d8554eca98d69f3d6f69182bbccaf49142eafdd017a85e839be9efbeff5be073b19be8659252bbc40f6612176d9a8c4a57116d7079bb920a11f257bf102c4884c64e302bbc773511c162d5cbc002e31db7a97cb5b51a24a001717942b2664399f19fe64fe2f862fd165fc5b6be291dcf39ddfe152b4525d655c21834af2110d66378bae9c6112ec8355970ede6b55e40048a5cead00c09d0e26e138ea44603684c96a007a6ac6e896601fb47117af2ed55e2d847e59f33793d6686e7d9e7bf9240d90f757589412f274bd257499e98057d0922a64b11693e1f3dc3d9b40eb5eb2decc8a8241fa50c357f69b0a187a686ecd3879ae42da40fd9520d49b79a59a09036ef435a6ced6cbc66a7d28d4a7b76ec2b181baeaf2c02a6402db52addb33b3437a9dace4e97d01850ebc63899a5d9f5b2cc7e77cb72aff6ea687a07a80c65fd15dca2b1cdd4ca4a666654f80020d48ba8486db03fb24144d60910c43d2a621711d10448b606b9b8e1788e34c49b781efca88363c4c1a9a22582c4afca4bae37d3045e53898ca640eba458017af2d070505d5b48bac374f1faf6a0622783461cf8b162e0767a9c322de649b5700e756ba4ac2171a17269311e31d76431ec2fee3c9f425629a67b8e117eb8ee1c9684a6dbafb4ce91b26f67fcfdaf59f721f26e85025c5c38c8c9df8dbfd48cd2fd9ba1a3e2ada911195c095adf0c941304b270f20c8a9f4b9862f077bb252fa083fe1e6369f158285674517cb65bb5a3bbc4f5d64e83025fb9280f9c122341f6c20ac0bbaaf0dbac5e6b7c47680e0a0c854be546c8b1d37d6cc15f71fa97da87f8145ee268112a7792a3af6ae2e9eff0c813cf05fa7baaf94c270ce8e3ffdb3866247d5a753b5b7add26ce351c9928ba7f184b4296e798e5e05ee07a0d337de31e94da8ac03c3131975d0437875a242399779951c497e4cd0eede324248e87dc27ac1a0884e5091ff887dbccb3ff0c0e588cef01ee000c497bffe324e869596640d5ca8d447f21eac268ab8bbb013a880980f065b3e7814f40de80ade85b1cae3acccfb60171f17f40201bba90d55c15731c7e4f13f9d7b3a5f5d168a89fc66bab9daf6b0da983f98f8be74d6db3261066692ff3834428f3fb8270a4ab95e7dfdbab494c430f8b47e03e439972e65b5fd23242a8b54a3eb0e3a870f09f0e5f9d28aa5cdf72f83c0b1c2a37455678949028bd68cc9e15da82c6623d1d44d4cb072fe0a4cc68ab992769846e4d6fc5304880d33fbfacd8b21870b46872972a8a0abe5aba00ff75d97e4ebf4ba888325b429532d78a4dc80f4f4ba800e6e742ea5caf32ae69384fadce86e13e54c4e16bd239653760554561f41940f0c05c230f0faaf2322400019212e90382814693848a8382c84498f4e3faeecf1eccd39458ff4bf745615ffff98204dce51251490aa76468df72f24ef97ea6f61e46b8a3ca77a6c1246b04152fa82689449dbdb2b799faeef339597e53faf345df4fff274d5dfa0c27a51d68253fc9a22f19ee562c23948f1095c3516606a5ba3b45f05ddcd8e28f3e597481b31df512cb150cdd1da5e6f064d2944d9f52cd3cd9a616530a2f0a23867313322d3578da0f80f018e0ab896370fa05b20481ff87adce167226d99462c45823ad807b9d79d8d37bb2d7ad8dc6eecc1074e9b9957db88a1a2b1aeb742fa2f361b26b047545adee5d0a1b54e9ab46f450add37711a50e46cd363f7513cd9fc6ab19ad0cdf36139e9ee769d9ac0d94eb49fb33af6b761c3c27b6b86a66bdbb8523befd1432b9bfffc77b4a1e022c94cf581db2773f7d06cdb8c51a7b4b32ad745668b86359236b8d1350b237543df72df8395727e07d6c1f097bc91ed211213ca6d682d6b05e839d29ab90d211fe21cdccb5b52f4a1e28845ef9dadafb13a1811f21863c022257a058ce60475db1ae1c9517ce1ccc9d1185edcd299c8c54410cdbbdd7b652ce98bfbf1fde43a76617a565a0e8ebdefbe8c53241cd5764f7fceb8d4af5e0d42a277085a7f58993c940c1c05fb2ce741d4d160e2b90a4ad9f43c0f40c9eee7a20234c859fa73729663a83cb15cf3455efa2ba3f4cbbe6bd76c8363abda92bf819c7c151965a675d2f9afed52402d0ac7fa60a01398ed7055de29fa1d3318a031080f8d68b1b5660939296546949e99216c82da212c6f43db8a89797c2c00765955d0d4009285b50f116158054a84548d63a1e81d5f713396d89705aa731eb5498410d2aa2373615cec1d0a74a35ca43e8f7d409f0193769c39fa53a906286a56b97cfa3ae137b7495afdbc57070f4e96b4f1ccdce240e10ed0de71baa04152758625afb8bf1606a0a9bb6da670a1633ff94ba8b6ac97dd1a0458b935eef501db7ea69dcd70636c9c9f2dfee76350341c9a6a1751bfeed88758c4b4b223cc8d7d22c69a325a8392a0723211f628028b60898c06513f2fa00a6e59d6a745f9efcec938cbe5e224ee6863c217d37f2edb8fdb81eb54f9ded4c4ef841a7633c28ca30e2dfdc8c654d1b79f7596c31ee3a67947fafb5a824925aeb64a55af2b44d33631eaaff34b0466262044dc10998159e3c6113e88901345eccd39ddb3e5fb2eb71c225aaf2f1364ffd3435ce73e70b4ebf194016a40c49ca90485925360bb889bc91f331a80cae30c251c6745f62f1d9d48ff62cedb3274df2bc78e9a5b11e72d0f19788d20a28d09846892672d7f6ff07506b05c705903b973462f1d20277eaab2ea677560d6ac1a6d6112d060fb6a2bcbc60438058344b9b17a2b7ec35281081442e0a8e0ac2b4b65bb00ebd5cd6fd4516ccdf8765c34f1b7528a751a035fb8e4b6e1718ddb09564a6dec54ed2e9cc8d5e0b4ad99e658a42850511c25f669a1d9dfdb969d0483770b7733db9958014dc36e824a5868c1ecf8065adab58bc289a9a892e4787d2c0772ac0aea8554e07235f1b1c2b07211d3bbeafe4e745f2a2b8755bd9779ccf5442609a2d8463d66cd9a58bafbaab1512716159222e85e3a85449285e183394bfbeeea21bb98f07289bfc81d5f827c950fb9242f41e895dcbdf830205156b1e95d8dc28ddfcf18a05e2c78234df9555884c09d3d930e07d3a87163e4510c7324698b9642d71b40dd7c2073ffa9e7afcdd32b7cdf21597ac9bd806876a977afe23b1ea1e099853b144137186ac4ec390ee243703a90d063c546505496face6608eb0285e38776cea5fd8437b498199aaaf8084a1e906a314cdec6fe1728103a200a7c28012e91bfae661d91f4437335ef043310d563c1cf3265c2c5648fb03901f16d4eaf0e895cf0205b552cd15aa493594e0ea40d2884699d0f04fc23a43d0672c7dc3910d8ada26e84052ee1ed394e16b7889bb92ec7290d9cbbf18cee06434e9d2e5a58364868915dd667ba5ec816747a279387e1604aecd8c76e9e4bc12b19d1fd2da63a221685eb2c638736ffb0c447189a0ad97409fdc6af9042fcb0a3d902673e0b669daf5d095bd6d2137ea6087402da799919e9b81de880db68ab50110799f612c6a22674859f65a12ede4d0e684337808b68907e76ce572f51853a3abe63df18ca653a0820a13c94f2be4a859c30da479b64ff418c485fae5e56d4ac4fb43371229e78b490f282154fcce01bb259901bd04dc96772adb065c29f0ebebca24ab21eb847ad2a77e367d9919aacded1649851480bea9af89f053ba662e729e30d63fc8886700c3796fd153b2c36f7499703c1669138676009eafd487f3c572ede898bf6041563304ba2c187b5a37fd45d1831b48e7a21b710cd5846bf7fae081b9dff144efbd281b282a38612ebc3eef3f6114c2bf90b82685ff3881fa2654772e340b0b2aab898d2e5bc39ac605b182f225564c7e209e5fb3b6c409393a0a48b60e73372be84e7969f8318595fdeb93e31550b638fc9416c6e6e219aa31869de9389af8a40a70e9a4f80675eaba1dcb738e487bae1ed0c7aa4826ddef451f5c0153e32e65dfba284644e78965d472e875efb48e9e8fe9e277e9dd81438350497fb1b435fc7b24b6fd1b7097d6b7f5fcd69a10a319533347126d9e86ea77fd1eb344474e63c0c106c5091d73367c1041d48256b6a55248005f7be33f54b099ec0c9ce6c8d72ecc1be61a37165924e22f623a9b69f1af372ec26a3f97287f11c0cfefa87bb4024685a3f2fed0e9f0d2d78201a588edbcffe9484ed922e92adf993b449fad80734709711a746edac261142d1f79ced677df0bc2387cb46ea6f0bc6839806603f7779d7bbbf7abdbd75ffd54186b82e1bcd8cf497ae7b40ef35501b8d238d0966380e6ea8d62042b7306c8603b8f8f7c9b8ee63560e11acdbdd6f5f36952fd8b8db1229b1d79f3830a6b65eff74f1fc7124f1f762490421c13cc869ee299aa8b9a579d69585c1baec16683112472a8f3d2957c86a04131eb30a0fc0e7cc7fe9a84f85d44ab9c0e85600011960692707c3495f27cfa3fce83e8e0eae0eb2d38713a5be4d19a064a5ae38997cfc0de9c9c9e8b6e7cdd2f8e1af9f2ca65d2a4e5e9ec86bda5dfd530a65ad01ffc3c7785bb5f1043e59518fcdb7911406faf8d33eead2c14bfb7dbced778288d6e7f58c4ee70bcafc2375c5847272ed5470e37b55109ce37f025881d8d95694bf9f265c49108899d16263bbccc1e5fe94eb59f5275fcb3a88e9cec44c7aea1f213139b61b2373bf3a814844efd96ec0035aac025848d7c829d8ca95c4a7a1a2c1860a9ae1ff17484f68fffe9a413cd15c3f2a9fc459c2c9a744f44a430153f460308a3e8c86322ff5530e8fa6522780a582ec14af06b0d70ad9342e5dae695646f085a39afd02628616b9445fc8334caf7ea5c39f71675a19be051f8cdc6008e527d452af09ea385cf85cb1cdc9e1c527bf2670ffa9d00c536a1f1aa75a367f592ef6b4ebf45dd53106f6a566cc4cf071007d33244d3fba75c1e03a2c0e5daf7b2f08c1bde5f775aec6ca556bff7fb1bb2dd0fbebacb4d07b87366c0dab4efe5bb4c0c34aa63ba9992990440af2d20595e844999e892d831572de94ba59311b122aaa4c11a5a405b2a7750d0fb0fa17ab667bf88a008af46ea55d73391b73982b9909aabc18915a37af14e3fe1eb59b779592061d31eb6700eadcc825655c2b10f26be5a3f5d79b6696f2bc8fd2c712ea51667ed98efbb501cdebe18c031ffb381c3cc5b4a4dc828fbc3575502137acc1bcb1dee514107ecff18e3f049a167d811cce2f69f917769b5ce06af01cdccbd5399f715de4f207ff85c8e9ff360541dc29526d53aca95a32c2113b855ad4dadd9e7d0dda3179337624765e5773d98526410030cd5da5c927868976e9c49e8f44899b0047b26483ad7127d97bc9dc8ddcb5afc142315f88c7f97ead98bf4bb049e71ea02e0a9c59a015bd207d7840a5303314a20183ef1d23c2617e0b74d627a3614249eb1f159094d4efffc6591e612a66121fb7e26d6a1eb580cf8544ed5c22dd4df5bfa4387807a4527b0d705b4f6254955571f8bf11e5ec780d91e55f5aaf716c2aa8545c2b6164dbeaa01cefab73ed45fbb738546f302bddf69127276df1e1aa51b24de0c88a94ad047a2fd111bbf4a2823d738b64fe820bdaf5309444256d5217a9d297952174640f0584bbb329f070d4b54089645ae3056587acf03a3f3a01d15e71b653e8bfde6291f902c79440e63f2f7647862ef6a66053fdd55ebae3af469661fbbaf7646c214cbbec051e9640e58cf72823cacdfce9e9feabf14d29f9fd6e256a40871ca96bba1c032cabdcfb3bc3af13c58eb5255ae2491befbb7add38a28bc60fa54fb94687a16afacc8cf439d6baac7dc079e254a546fe8708cd2b39ff227d4c3f7593d974a0b8c919d4aa6243f3810ce4bf57612711296638c0607e831a3f578a444c88f498a47ae86294420d9bc7e285b5b0ae7c55d5f025f3988460790e4a717f37c6167d2f29c4d4ea983cd90d361bb96fb4b8b1b9d05dc185f93c13ba7efc39187196c46f2bbadf8fd0940a60c9f138684c9572ebc98ca0952cba8015d4504b9d50a72a84ed2a7fa4af218b03027093ec4a98a7ee0f3c354853cdc41f101d8221ce5e8e4295e74899159b2e184f4018d74903acf5157645553a6e5dc42a4cda5382f6051b58ed11e7cfa18292e86f2ca63cd1377fb39c01078dea979fe083536242eba00e99e0c57b4e673b7c8119da9273607eef7f30c6dc0984499dcbc9e58198587eebaee772ae10c9fddf9c40d01d77e5de5e613de9311204d1e606db51cf28876325fc06c2f8e05c96545c44e1ecf1522b408428185c4beb215ab07005a3047bdef0ba8d1cd4856a71392609cf4296a66d4d4d148b345a730454401336b0417383e35ed9c016c170e109e1b91fa230c5707660ad822bf254a7317e176c53dafef95958790e289138df37675872de150db1c80653e0a101aa669cd7e86750540ff5f7d193aeb960fa870910842221bfbd9b0722f1ba32076bdf3f24728b1af349fe3fc3fa10f72944e924553623f6fd3a6d2a848974b2e2b23e8cff38ec4658d097790e18943e239d2e08be6df62b054d3f59c51e42e30a700c5b27bae0cc7c4f52b0ebbe42ac9fb9c067f93536123490b9c75f48a33b677a809f3e5b754079cfbc309f7a0f1cbc8978f44d400d4fff66be1dcccffab041f748f0c60c35e04742d5aee87de178ca6e8d79fece857c2c0cc31819a35bf27ca25184af4e6be0252e3bcc39cd50870532af8a77f9a28effaaf2214992c2084ab0093ead1ff05386d7ffa11ecb25627abe2c81e81660f66634629adf9b5a6e36f1aff88d48ae17ec1a0f7eb9d7a0a7632f4d6ef9526f8cb64e92d50f8b212ea0bb7c60aa1e7bd4e19b84d47fab1ba2117a3c71dbe4b17157ea063e5a1dad96b6e9ed6e1a295e3a7664046064fc658728d6fcb11550c04c4f208f312b36b278f307ceb6f68ca8013d6521d21acb0139e763c6cb070127578045ee57eb368291bb3b91e62a1f6187316f1af2ae47f1c9dd96470dd42f57bfaf5de27438a4b7d915d2fe68d63d8e8b11b24c15be23b2f49c62948defa27fac62ae1ce9649ec27d6299ab415c074a1e834c586b66568cc83c4bb7af585a7d3b8d6f784c2ad937aa316d7e0d6697dcfc51c2275389ecfedf96e4c7b30fd01fdf9b25f96bf86502c3ed65e8dea730d3d035d0be3122636bb18cc2cc285556e82f4dd83f4f925269d7ddf620e2692d9525b8ae427e6cf5e31d8f219b276500a52b72c57f04cd73482188b75b4a3595f9540f12ee6b7f1c925a965776cf5987a073f0a8e29da48f1425efd3d56299df1170e6d2dd8c573dc2b9cc18f52075e15a1a6e7cd7351c99c3ccdb7f13e31c4e8a8c188bc5221e45ce286c442f72fa1a7fade53342ef91f9df0dcf32fcedd0061004568f9520d46e1e6b4424013102a7bb6d71154cc13bdd946b7043fe5ce1b938851efb3c5325ff22210b1bc9c87e89620fea81bdaa42c7cf1acfa48ac9c87b0eaa511840ced638b15d24ba5ebee5251521573d17115039c46f32dd391a656983a18b701f54c4e05ee481c83ef0fc6bc22e8e0ebf2772af2cd043b5826741bb822706e360e38f10b0e5e317a72a6c070b3b7b38195611c71a4193bef710907ef3f20ab81e6c4a7e1f7e49efe95d100ec97dc8f5eda64fb6a36cee57d43c7445bf38a9b5482afadb4ba21d78d8db6baa05f43286cd2604c2559aed6bdee80fb56d293fa67a1b830187a84e9d112e2d18bce4fa72d0ab220907bd13238e6e7405604a634031dbd971231227144a85d4a7870f96aa31ded2ac0fc5249909beec43d4523dd887b41d572792a117966223f921fc344ae3d2d947dde9640b5b9e0efbe4e0e853c96ed355f9b8f6ca843b54e6b17fd580d035cd2ab490f2dc9029e99d0888f8230c690c552170ac47dc79f5a3cd23e4bf9617e0d9187358bcb76839fd877931ac4e4ca3c23d48d0f2f40b6e483ea937bc083c5fae9850285db2e7c1fd4260b7b306ebe7b68f92cf47eef2016100ee9809ac335468e9c29fa97792dad9136efa403181f8a8b421e348085db7325fe1e2ea5cbb6c6da101f9a70109c608496d09b47ecc1c5a8c414bdf6a721c47aef3268a54b53a9ea64a2d9a6ba09812be2e00d256bc94b59200535fb1de921a53811dc83a6c1bfb4d8dfa2ad64cd65e99e0fa9e8d4ee90e3ea3bdd1e72af9d02812a281204d82acf069bf31be38e3e261a47c32cd43eb49d43475a47754847dcf4f2419657421a45fb6909158256c5afc13ab1224c1c880f04f894b86389a51d59e3de64177c3ac5ec3c605373e78d3a627888235dd50a5324f3cd17d07ee48c09e2aa892272d8689a291be2bb00b60613ea57bbd1ddf82981abef910debe7559de4ec4c05d631507f9908df92efb7c151abe8cbdfb60c45bb545844119ad9836418e268d865fe74827a0c45338b5c20734a6b006c2d1bcccb6c0cc944e59d880146e284e0c46550b8ff187aea6704a6259d56455e5dfe888d5f74c72827ce95b66f6c878bdec5a638a8761d2b91dbff46ad2d215162d75edc38c0e2d7d10e8e67054e19ea2dd812a911d6b8bd2ee5a154062fc87484dd71d4564a452d97d4cd677eb6367c6389b0199ce16f66c5e9bc89e6ea894fc80a0468378717d965f73b7e51987c1b82989acdd9a13b111edb37ec94666fe98293cde199be99e4a96e530ce783061b60093d54ccf63e1e5470e8a2676b87249ed4ec67d6656e72da73453c2b5e47bfd343187626b31889df3d49d7c846858a18becb5b695083f2e5714388d1353233080ef22722bbfce02dc49eb038b3248ea23afa8d6650ab64c8d0bc152365925abd9bb1354191cc13427bc86a171892e35cc30ac8eed530001d4cc51349ba6786ffc47f4d66e2b014f5c7938e15ea6b329183af3dd622bcaa02230a9797c8afba4f52f17c1e3a69bf6f01ceabbd5190a3a116759336b2cb349d2aa7e703a3dae251a93878bae8420682328bb8a8933e5ef9ce6b2b8f2f3b88a0587318a1bfaac2f0e6ece28fbccceed962d9f8c1cceb87caa233acd03a5507fdd62cd5c8314ecc53ff64be0bbbffe52562fbedc8d3288a2b98bf608927fad20d132109b1d9a5fa70be8eb7a56886d530aa18fdee8b2b405139781618f951561d2504bb14a8c89ea0065e54d5b5b554e4af5120263796df43eeac53d4d79c8048f26b86db6db5847a4965c143d920789bb2fa068605c278fe4817f4c268904e39ac5c2b365214fa1ac318b54d2d99510952c600d638a32ea8203db81959af9b79f92fb42cdb747821f6a2dc7a4be8e71438a5b9a918845a19f7b997a0a6552b636385213d6c676931f8378e7752a7db208cc5c0c04268ca6b05ccdaf8cd4ba777a43d96a583e0d24ff1292d2d41c65997efcf052f6a40cba6f6d59d12df8962d200689d1a2897e0ef6d20ed2c80b76af1e73d98cb58363e01e8d04919f1859ac59207c12fe747ed558429e9cc88a922a729d4b5996e1eedfcc3cbcde618d42a4a2a2a0184f7a19fb7201dd7e102cbaeb7bcc9dcc8230b9197f5bc14d19baabee827fd429992efc0b72d01ca9201f26fc6fadd023f8f7c7aa951c82e7eb83a50597bbd4d30b0852f15888351b907016c2dd713de444e17c3165e59588b231c482dff4cf5fd291f90594d96e1516a4b60b9e4414cb0cd6af8102e547603ed67b6300c9dee3ad4bdbf0186bef629d4adde4c703a539f0b8269504793cf77d517f465e023eb260a8762fad5368150bbffd7d60e5f2e28732f3ed0da71826e9c81b9e7f83d972a0347730e3f9dd44669eb4980962a06a3db16b63aa167ef12f9c54f359952ef8047f66b4feb21ed7a3b7af24773fd04b384b7d234a8a9e9c1b5e044a2c98bca6d02ebaa07800e5c32fec33fdb07d8218caa03838590548ae778719a498d6477f66ee3106d920b4e0604177ef3c97cd283a8f4d9dc51ae1c3afaa6267e7f981c4638147f877c779f19f6aa69d7a01af7caf95fb1331e8561f6168e0b4f6ad16dfc2d4ba976880e80aab9f14312133eeb3d12f134c96e4386387a6db9a2529af4a1bae7d173f90fbaab16541c2e832307ce00e07dfe9118e47d340eb51e51c958becd64e44fb6543297859188ee2e80beeb556950b1e3d166325ee9405c5abab02bea112add3725c45698e343cf52625d7fc8aa6d39a42761455bdd9c0891e129da22bfab4aa90c089ac77a4321c5c0f6058c6c7123e15527aa334e5a68e07540451cc057932a440de4d2e354cd888ed98be41eec20eea8108d9864128bbb369c8e48dd2d34acb513ebffba21aa3d7a23d56d0bdb79b6764c41ea4a34d0332d27335ecf6215c742a7054f58903604bb25c5de28b814e001cb09c32d78a4804ef69537af39cdd7b92242b2e09ddee0e1b69748670c337f00913f1696ab3026b649f553bc3242e5e32116d7234381510ee92a6a96f0a6751a6de5cbfb6c36b0385ffce2cdfb5064faf2e25def7f323c28fe400d29ff820f4d7787bf28744f2419b75a8c6fe4a68750447d449602cde1bb62acc1269bfb7d4a27f340d3b55858136b1c4a6885cc572958ff1ffd12bc6d09aed5b6ed588b5d46a34786100a13af76980d7c4230b208b59cc308c4fa83f6a953f64ce2904950cde0ce076ff8274c896a1d648a583009dbf734c42b0b081db9d64d09a5848330a66b412387d24acca7aac55db9f78877b2bb3bdbc15c44d3aa506d6f84942070deaaf462d4e2554d715ced329c1d18b4ca33999435fabffcd38a077bbc2d6b4116916c150a639010d4438ef4c388d2f6422785c804a20ea05c1026bee080c526f862fd322ab2141e96e6caa4e6b99634e031d9b157424e23bd19e7a2248155e4003355f9324a55d74df8075689830a67a5e509e4186d92ae1470328d9b36b35aa71db42e87581b91bfa017464a9144f893419296b62bf31142ff7a2fe100bd04a2a903472725fd23d65bc06ce5ff188ffdc78a81e85aeaed5244200caa9f858f5460b95f74af7aa470476d6a2a2186f073af15cad624aeb3b52e510b5adc3df92971c558333262f1265420ac77ece8b5f427e01f8eae9375be041f82ac07a069dfade0c7c750e024c20147acfa5495e422831f01e459dba6b9c9887bce23ef2c43a22877b1091368953e77a66f4ed9167d931c461e865d60d9a59e592be2901cb76cf26a96a349896286542ade39c992911b41c362806d8a07dc11f372c8d39b4f25705eaff249db1dc8c2e2b2e15cde65c190fe4efb074df0bb22d0b67d2a5d3dc17e2fc7aab461cca9877d510dde14940a7945e19899924464bcda2aa2cac1ee973a9425260eff4298700a3018877912b6e08ad2fe5c0315392e5d84297927d1c6536e556b0b380d338ce88fc45c362829059a07d094683a60cc3d61bc5cf611a03e015b97939878d7d67a14e183b1149012f99d0b623a11a6ad0d57fafa093f147597d30158b3c07393e0398dc22ac5363b3c4cbf1bd09b4ee79bab1036d4ab1b956b904c6b0b7d9c64a390a1a914c5f61a665f75f9af1eb6caccf3db52bfd6756086b0d056f057c4d2fabdbf910a6c41c88648a32ceff6a455935df172be91ce6c6bd07c13d0731804f7c6a45852a62e24755077dd071ace9c0176f0beb2e69b1affda144f92e3b90fba2657d771799cf6fdb78b24f0d95e7e471d973f817bfbdef42e076170cc6f71a6d762ef810fecf32a393bcf8b99f6c6d4fd832abdee9431a6e94efdebecb8a8096a812658b76f5a68db12a2e592d88b7a30f55101aba5884d4b7067ba73460138f19eab066764f9fd7a5ddfecdfe462ce11a4594db5c71e579f128212e1675ae8dfbd6a64ea8ed2e286dd63f360ebbb90f8f1ac510d194e6947f6eb83481889d486a28fab11551f01390c665c7359f200d29f7a9e7b03047f145a5577a381939f2a5c9889ede1fd299514407830eb93cd7499b2e0229c10f5380aabfd1c41b91747f48f4c150407f811295185d2112da6200104c76cb8a69d6da9885b9326898ace0b9bca78ead961e04540c3f8204b9642c3a72cdd13fce8df6a50005d25b0dd6f3f3927304a8548d8a2ac91fff9741cbd50175fd66d3e42012aa6e98b6187e20a8b709f3ff2b08ff46e60597c1861d33aae401d8ccb437eb88c4fd66aef34b356cde042de0066972c813cf3acfbf3174d5c4cc3c9140b92403400891bdd92580e2bc435f8fbcd418d9216196fbdf7c488f02549169cd4f61ef54b8867495dc6e74a8ac86825a423bc5109dacac04763d39afb180b9e6058114a6447607b36556edd17073db6f58b19b5060670a06c5f42589f4774e3bb8408ddf84263d0515bb5a9ed1a84fce4ef55f8def58a19239d8ad03f32dbf8141343439a5eef517f653597fc582d82c6fbcf3d5e1ee56f66c8449e184380ba7f51702bb28c8d401e84604a2d895f7da1cc09d080796d31f090e898540a67f85b3d5f263a5cfeb7e7ac52cdd4bc4b61803cd0bd6bc08eeca868bb2b87a2326187bc3204fd03397c328954f7d46a7b0205c7533996e7efd0efa127e05dd101a9889a594e2929d4a09baf3af725ee4bc9351f466a38da6b21aa4ad59f10c006fe78b6611b97abe97a4f3212a3d806473294adba4b81db9091bac645fa9d35798a0e64a3d82b411957bff66a7b3a4e2413b3caa00e10c8ac6a9de07dedf702238785c30157ae957767b96804f9a889ddb13d793c4775ef827e6360daa084393ead54e966c05ed8203848bd6a599a4aa7ed4812df4a37ed3ae33bbdccfd4c3246b3917a154e370e64eaae26060b5170a14addc14d5e3ad584b354cc4dcbf25fde633413b3431385af820bca5f52291bf9851d92c37ef4459ae7b6a376298c83be706ab3b97b0e1ab5cfd0adafab2b77a56b35804cee17f5f225d01766886fc5f1d1ff82296d0184b4d2a1cd10db5037d3eb3437a405ef06c194f8bae6cb252f26c9c56bc385f7bbee9a3419fb476eac0dc02101305b4f167fbcfa810fffef39e5559c9e80dfb91dccf2753e0c6203622d632aa5399e39ce4ad0121bdd53917b50ac6431909b2ddb2a969b527f860bfbb3d8875533b175cc2922899c114dc89c8fccc967b0abdd1891625046db620b7de3457937e270d363cc03ef29f4e37d55e9424177d583e7ffa919554479a9995539265c7a92b3b63bb2c0eb650373d4231a294a74008bba4881eb8cacc9e1b077ffa9ecc53dc1a2592d3adf4593ddec48db3b47bbe1aef6bb5dca06b70e2bd7d562d7b71705a30e10760fac2d81034ab1dbeb0236b3d6a2b70aa194d45acd2093af6fc48e2a130e3ecb798f19275436797ab576a630ca8be57002dc37502b6e12550b7e11cb93459b484b149b2eadd2d700cab5e8360de7a7c82d4d52ec74879dac240058060f18476f07d10311f607c7b66f5cfef3c31df5ff5a6338bd09c1cc8178f6c912f69f60249cd6ea810308957f4e20f63fefd168a6406303fcc5ea2922c7bdb2cfb747bfb9ae3369df09bb0b7649406c827abe11561501dbef0774604fa6bb7991405739eea19b81f1779c61b4374537d770185ee2ba76698504911c19ec29ae6a3c090ed5d0a6b3e62eba0b205f4eb6b9f7ec8f4197bc4327bb791224853718b5cbe695638b817a9b748eb944b86a72af01304699fc0eef4fcc7aee3fbaa54c67b6dfe13ba70468d2aedcaede4ce4e233b4291a964d4ad1e723ea568e87cfb26cfdcf4edf115fc4634f4b778820613ef6465d61b89b4c25fe8a0e211c03c4ac2fdd407da3a812ea737ede1af0ca2218bf949d493e7663a0bc9d03da938b64e5790a21363a3f92f373e1ea00ee54dca32a0be98168ffc78e9cbb0c5d6820e191bbff48f8b5154368f79d7fc4f793d47854f48eaf1651e01fa36294d15e7b0b994a6b4c0f38907b361cd419743ed03f66dec37ba3e54c5f87447a26a2ed7fd33ffe50524026711da7773bf988a48d80833ad833633199fbe4f9513c5a6114647b484d2de9d85239de8db9a07b66f148bd41040299c6eb89fe3ced006dc2da05d5005d975ea339e9ff174aa56a58a9a014580a6a7a8f759693d3819b0155df10f48bab64c515d2e423d4a436ed7a19654a7f4cc5b5bc3069ba833fc11004d4ba3477635f18fbdffc949e9a32214cd11f09a99f21a11904dd642f81e4593441758fe18fcd3ba1423c28c182b0be5563d6600b03ef865013d3eab7445e86583de221e0dd8023aee1b5c052f47473a2accb2b863b92a633ff193c0cff69a16d1d54b3d3431fd778aa4c40cf671f33ed7d4c01ebebe09fc9d775a63f6f6e93f7fc98b4cfd64991fb0fd957e33a419383598faafa2be49a4b5d2b279e649b4885c765230ff8355ffdc818c5500c90d33025f269c429f57f4072e644f60a6ae25e88d846c4101ee01053f8c98d20c14ed053a7b7a3998ff42114469c4b2bead4b47029577957f5ef3415c0993b5e59654f25fce69e1e9ffc51d16c98728e8539f4a25cbebbd32cd4329f8cf72e1d3bd9e8770f326d31d232a7e5300fdfb06bc1944c029e32493e7f96c259a99d5a47fb935615d10ebdd8247af5fc529734089126ad52b20162d6034fd96460d21e566cf9285bc158bf83103263d94caa98754a534943226769b7a69f16a4eebd2fd5a6bb03daf405cd49188b9229429b4fdbd044f68fcdd6108abe9c562deb6b9e280719a603984878f1fb91da15eec4f14c9e257a72b64e55325a5186550caddd1c0b0f0db46ef486388f184acf2766e4485b0124626775e5f65154f8ea2c77d5a1fa824537737e02bd196a51e534eb11853fa4772dc1264237de15283e3e3d72d5ab247fd8e18030cc11af4607be8c3558468956f2e320aa73882c7dee391b3008673d7439eae64805d46f43d9ab5d2605123bf7cdcebc081fdb03c6e042745b3b99ce6ab73aebd2ed3f3344a3bf475cd3578e32cbb5df219bffa49d9cb9c235cf0e49ede4bccf721c9381d2a637b2b0865df10fc194e5a6d58beb0871d57d4045c788bd56f3901a601a4a93cb8b187591e41acbc5d89bb1d4f78931234c1dbe297e7d117f383c70844beddc88a01de9a8f760d5b457fccf3aaed10763c97c64431c0bc7a0956d8b4eb2e609024ade603ae40dbedfdba1d2ee6cd0fc51d0066913c3e3dfdb77952d13409527fa789cb9717f57ebded97fa7e7aabab25b7c055465d519d9eaba97962db7268172947050fbae7e96d2e26a9e5d4b2b97fdeeebdaf4a7c69edd189ee8849e3805b581e005fe0ef74252736aa2020cb51a175739e983c634c127e58a23179ffb4ce43dce3993fca24aaaa3723dc5d1a9e2bca36391b1c1e2c4f5901daa9b346766038b5a7ec6c74a3185e6732ba33180f27b7ee1b4928c523e9c5ea0a579eb8becb732984032797cbff0f70f15f985e988d1db62400265199a7cee4cbd6cd2a9e283b7cd594f0c59cf7a4f58fbd2b7b42c827fcc19a0c4ad086c6112b588d85cde478ebb1cdb7e4459f534a195e8f464e5d689c1175d48d224f736f71fc5d648568692656a06013836e92ae6f55a520c58695505cdf2d6254999e49761bcc9a0ca13789a9a60b5f4b8eb17367c49ef09270c9190560f9190e7b43c280ea121ae0ef86458b7da05e7697cec4ac04d3cf862516f279dffc54832864735bcca3d8386c3980c99d60c622834d50f337045f2537c7fadd1d4815d2299a5c0180eda73c66b3f0ff0c0bd9afff973653eb3be89698d13fd4964bdb1fea7f350bfb2cde5b45243721e09d9085c3abfb355bdb7f353c29f8189b58ffa04f6ae999bd76dc29f5be068b92aef737c117ac1fbf0a82a463cafd42bf58307b52cffe36baf5edc49eca98dc879e75b2f4fd5bf9bfd440eea0e6d3c0665ccd37f276279d7c8edab580c1e02adbaccd4aee5ae137ebcc04556a1545ef8c58c861ce38fa8266fd6534aaaeea0a490ab8f202ed7167310deafe2dd1fbec7cf7d42c2958aaaec92eea66875147480dfb2050007a79b37e590309d4a7a44252995461bdbaf08411336803c672441a52622e47d037d38fcf35d4d6b9bb9fb04cc190007d47c421ab57937bfba32252035215044fa3a70b67060a4d0b40e5a5b23c4cce06a659d121bcac19c4863e970f2c95bbbe8d8ed74f8d18f42487c5d5c44c014f913199a13f5855d788934a183922205901872515d1c1b19dc8492f15d1fd36094a97bf274ad0a74b6eb9f5c58d301ebb2da394515e43a16c5d6c2183507d86e429f6312def1be00f08f1d1e4e388dfb26a4d6211e7022a823cbc248e5726e53b50f4bf3c3b9a0f5079bd5d7a6b3e6ace5988e57b2daf3ee62477865183ead4d651960ee2e29caf641790de6ea70a40780a02be9d697c3df15cd6e804cbe2857d6356bcb83f64bf95b4d3b726d55572b046d880ded7f6ec01e1688da55ad1e9441c7e397258216f99541033d32959cf5dd2ff0ea8255e8765f6342d3fe4469f3eeb54bc203d588f6e02c0fe291b6184bdc57f65ed5a221acb338cf9429577092796ad11fdb80bbb3b3d660735721077b194426c03b8afbd21c92fc6da4792a79d7911e22e33a1b6efb5125c46c0388d9d2f0e3c8b23e965b171d6018d99dc4d7adcaa48975c85b5152f693648ce1cb72402b1014e75b91aca1412d9c27ce525b29114f6685b4e7be0801b667af72612dca3feb42a58cec714996777ef15dfa2f4d5d7bfba44f77aa7017efa1bb6c289bdd436e4fd35185a0fdb08dfefc03b58676cd65ba8ccda6adad32b1763c571240ef14cc6e088f746469b299e1c3a2f66fbcb35220416a5d9da43829f17c4f884b9491477679383f7f6656a12f6bd594da5fea2895c231573438810da0a6b9245d11fbbe371c48884a799c6f656067a7ca13d27948134418ba1783a92fe4c16588f75a063c09a5c45a03c88d29d19d07bde26037e386c1846fb1d23a826b1ee4972ad34e781a7f3e467dfce90c3b0994fbb4e8027741a04ba7ddd86cedd20de4817a5b60ddd5f5b0b7456de440a44c2cdab604f7ed48f0faafd6d7b9387a8ff6e90f916a450b65a07aabed3fbc669014f7236a8750be34b69dc75cc953057262e3b5cc4d76313b6fd7685ed373230f8968c0fccf9db8466b3d752aa0f2175fa2d74c35d8995260a729da308977d338d5f162173e7c0e0f7184804cf72eaa10db8c9afddd01ea0db3d70655e9c72870183d70227a74103cef3d5fe96155fff480057d76e0c3662357a6d9e9d6cbd1d2de26eca0f3457a9e651b8fcdf49af26d085bf1573ac04d4bd21a45497c4920d7b0c8949093e483b8a2dd00906eaa7e4063d2d08d76a48b88ed07a47406d5c53b9613bb5eadebe4cb19299c4fb463abb3948415b8c15f930b3a728bb96a2b2725b93688f8fc3f270d07a3c9682d8d021beda149e55e89060d1306a7b40aed3c7cbce7dea88fff32b0ad43b3ba4930308d415d5606a25af0579bbf0ba0018a3a537ad8f1ddb15c26d12ba7f3c9c9d4b44cf182682b2da11586b89671736c813eb0b10fa4a20728680debd48ae88962e453de759b4e5d063caafd34369a82197b42f6bad2b39cdbb933079613bc6999e3364b653904cc917eb8bb7bd0d0f977b7e0fd17d3349153ffd07f5dee9b9e9b706db8ca87f323479d6eefa76c75be0763cf25af6929442268804390f7b93ff0fc7ea86e26392988a43b5a996ddd2988c0c1ba45609d23bd223d1ebb12f9f73b23dc09a87a041b914c3148baed8a7437a480d269b8838d66f4b0dd6d794c0da87e087cb9fbdfff78e815db4db32d75702ba69f71bd606638043daa410c1f6bbf6536ebedd9fc2a05fd1868fbb9c091db54b9be50b04a0385d2263e4e93d8e747a3f87e1d40dea5c365263c23c5729a986a8944097010421e124ea11544921d087f95e0a722d90a131257ad456a285bb91eae97e1b20d411d1e1d078aeb413f8355582d4efcd9ec571fca72ca76dac89f36316fa96096a1c3386f03a9807ebdc170f8cec888da33427855899a605a03cdec89a6a1a378f06023fd48068f385723d7480aed4f1a07e465433cb3dbebe8127428ecc9f0115c37cdb696372be92833f5e5ff4439dd37d318fe6a19c60bc1c7880c219b090b919dce3b897bd5150a452f1797b6d13cd08e541186f153dc74ba89b4ddb78160583b005318a8f71b28c5f5f6ea140862bee9d5f624f71fc80b5911bfe2e260038813d1866f98ebc9114ee5e516c074b837d497af7fa43341381cd551f7cf80fb1d62fcfdb87d72864f331438e13c04295401380fea9857390541f0c94db4fbbb76d20dc522e448c983984d328dd2d31ebc03d0234937d62d1a0fe33bafc8c887a7d9ec43634387e00a57681df4854338aa04ebb0ee8cb5dee6478c784c3194744d11af8a49b0730c696c46650cfb914704edf7d389a494d76cdf15dc9655233c0f386c9de4624f5e04d8b2bdd3475fbffb2f47e31097a7b01aad5e4cebb7c90bf18a5f50081080899408ce6a44d6a3b75c466f42f20d34d95f727085181656f910255ced4029802073630d83d494b19165238f2bc102922a4ff9093a19c4468c97f962b2af62c23b0c6ed0787381b308351c8c27d6e2b28cb58da6fe1dcf56503d7a0b10c608961c72b986bbfb7e2519f8d517d0e7f4343032a5ef3dbd1a3705e285972d844c4a9884f40319b7801d1e7c2ace92bf0995e5aeecf214c4e0082f58f0e3ea5ac0bf93741e847083cb9bc7c184ea930888fe065347fab09cd03a167bfbd7c40278a63958123fec172eecf76fe1ba2b967542fb2b6170f96e1c4f6a02696dd94192575f2a12c5732d512b0b3dc55a49f04a760f238e828a87ccf706db40237462a8378ffcf7b96ea44853ea3d319d057fe37e7a6d0bf446c3d8c0bdf8fff6fc5079650aaf89c851b5ab6fee78beb1ac52a8c8ddde3a81b4b477c48caaffa933b1a87d8ea16a8195f05f9db89faa1115c3e113e477ad2b9a9c7f7f2192b316b30ba6944f39f189c37bebc36653ef2532fcee9cfdac10eefb1226c56da66a206077dac6ecf102d6763badbadb54c5bd224a7757be543fc5fef6d00e3434c2736b6f7a2aa1bba642aa88da3a4f42027dfcd7f8f1dda73d05fc9ce5cd4fc38baab73c94ed5affddf1b8dd2dcbaffed128b6a63d529e14590854aa10b6acb4ba2bf1dbc12fecf2c0f783ac4fdaa7342f987f905a183fc26539d88d89ae6f1f8fce94fdd4106a5719849b555ef7b0cab82424b89211b5bd0ad820698c5433a912271d6483404034242f6d9cece89a7d665c7b1b229e1f99e38069b8d52134fee3874b6069cc309b6ea6b8e9ee7b5cc9bbc54fdf879e784857b11a70c9689c144c8782c1ae74a4fb929bfddbba3fdcdb81cce4bfdc97cdbb12cdc6f2069e4336514a977ad4177384b94a503307f6506aad64c154d44b6926725f9f83c272d3929aa32fcef9afbd4914f2b9e37e88659025ae00121ea3e7db48118546da58dc1236f515bf7ddd3c10708a7d2bf4eadad43b4666cad6da85ffb290073ad2337e553abd2239a2a1597261e87ffc49e5204db304095c1468b6c5e9b7bcf95b624925cf05d63ab40dfbc8940167724cdd6dcc5b0077624179ddcf5e02e35d118617b2ad338ddd9e8a83e5e10dddf1c7d6b1a030c17dd4c7914cc1f31187d64ebe3be65de36ac1ec7d3678708ce2126f10d53398aaf90a9c5848bb6f1da5988c6776a523047ae49cb3b095253576e223359fcb3f91c93328e022e2b68631ad8dbfdbf2426fe50b1f32644ce00698d8af0047841aebb5fb03ede70f0489c4c960833264612fea261609b7b075ed4c9144efcc207b8a6b3753b758f3bf3398da1e17a203c962d85d17524348e4953bc77f36d6463a33e8e46baf91320911188582003eb87b60b12296248c133174da23e1e73b7da251b0935030efa0af80200ad95d4ba3d5a5e471f7e7a0afc247f1ec94008d352869bcce4e2678ca23504a4cb731a08fefa4518df1861f6c79dc61e75a2396c6dce18eca12ce6910d24daa7e301d48fb81883e017cc413f336edeccd04f975d953a74b2c46c36de01aef419a9d82a75e8d0b3a836b75a10410e3984553cd91e9a67ee91bf4b928562904ee28ad0f8cc691a23a37218f29c4c2692ff4708d7bf4ebc15645142a42c143a69e1dedb227e6567ab6ebbe14ab97425ebe1a0377a208ecba7b6a7994a327b31d9c7b3f75513bb1162329ffb2cb0478bcec72360f3c8acce81467e3da5a864d455b3284c016051f7766ce5094a69870379f1f921ca9d0147c63d5f8f150cb4b90882a5f781081f6e5458b726b1a901327d592e73ca60f6b65ad7264a8f6f2809a429ea5e3ab323d839e883c2a47368ed955574e1dd7f9c28afcfca797660a9b9b791079f3e08acb0882c0f73065ecc981f4a542e0847ea73cbf2188324fb6d78433a24213caea3ac4c4ecf192783662abbd2a9ba325eb06fde548251363895358e12342cacb3cf20ba7a57ae055c42d64b62562d1ef4219dbd8ec5b91cd550b06922bbea89fb87415d5546a18b110a562426d28725b14bb86f547f27907118df6c79dde82f15a5735334bb956c881eb1c6ec695c57d85a2c2a44b8947f6f5dce19d590a2da085712f055689c06be6b7fd2c1ac71d63454479e2108bce70b204885585aa77ba520d02cc95f04a6f0cba34e44656b1d69774a1cd0d7d39ca592d779caf469e6a4912c72fb7e565b14e81f70eb85e238701073543a5289831a3f7ba6ffb3ba9bfdc28e54658d0be9e87efce16e47c763464c4cea0fc04780bfa89ff794b8dacabc685ab157bbde0aaf353b7bd56cb9e90f33cda1fc6e2dd6c019117329f96dbf2796e56532cbf16605f451626189f911ae18229676811fd29f66901b308e84e3af481f0619656d972ddb3e652b6031356f4aa17ecdd1de44d9a585441cde0b2b1e79a1caf16d68bb77f64532371111f1a6687d1b9da95a65d94ff1c1e04428f45b819b8b4595798aa9f242f48047ade8da13fb36fbb24fcd25078af9337113fc38c96a88046b319b4d2ecf92292510fe2eb5493d0fc15d547a1bb946e0c47c4e8936e4977e1042a3e9d091700ae41dd438ac506637d9686268b94400d32e2c75a7596c2ff4581894923adb03e63c84bddbcf49cae5bcd526e72ef66fe2011698b9e8db35f3cf8221bee9a1cc7a7fe9a87c225e5043a503b5099fb29e029a3e03b08d5bc95d6781f5126eacf87d34d33895876b2743ffed6dbabe69bfdf9e42106755dcc9c3efed9f8fd227f78cea651961255febae844babcd625f9212355c95fee46d8d31b6a9ec0ab8a2d084281ce97043931788d911becc04ac77dbd35bd7a8857d1b1a8aaad0c29c6fe07730b49be69f21ec1695369235aaca0d3c040f39f4eaa179eb0592ab0e1a90bac9c82eb1682bb089f9fa9416aad885f755b4d215e3c7460a0cda03e761f6a9104a6ac7e61606784f57ae7602e0936f664c6edf93ea3bd7f9683ab93ddd29273d40fbc5e25bbb36134994049a011a647d92f3fb2cc5a37c860166c90fa1ab9a5e9c3626a367c69fa8c00992f9addebb8db1b2e69a0f6873c6cad33dffee171cf31b477371cb56aebba881159cc71c6d8133baacad36639cc20191d5f38a914496fcce39fa7f4e3fa134099f6336193cfeb513a18f6d72012331b8bf2c8f55fd0f28047507335305c1f2c279894ffa0beaed387ef0eacf0a1b5e67feced1a3c383b28c03ebbec5ca2c66cf85eb593cf8fa4650c4e9047d758594e44c5f23e1d3fd761585587668065580568a5b5efe108f8b34275d4b498f2b5d7aa4bf296ae25f6d97d134ed07bdd13e9e08c03a203cf134320722725dadf4e6df11b662b8a0ee4878c99c614e4f2abefa8821f03cdfe849d86bbae78af821ad4a8e98e51b70675ac3f361471edf27ff6f207b01428a204c94dd131e3dd5aa070e7e4fbe489047562e17ef5bc356b9891d2775264a1dd050ca166bbaf5a3f4743fa9de465348657f0445a81f01ebee6fd31e9988171a5a615df21f9656e06d42bf47a03227aaf81143c8e2c2dc9074075f74286f1ad2eb7ba5c6fa2b35a49e00f25d8cfabd29e4356e3a5dcfc58f56751e6a961acf4073b96c903b546246d06248ea038cd8abe718f3da302eb9c2953afc4cec12c7202059842828245014ab8eda7fba1f591066c5a17e67fb6cd4165fc7916bff0bcc04dd093c3aa3b4d8df8b877c7f0b6e38a0527c96ee2f502b3ce9806053b4cb3b59ea6039b02bf0b6ccf560ae161aa0dcf29a543395f3ad4978c31053d466df0595a0d5c31096bac2e7e5ade77ca27e9d4bb314f2538720dd14bdde4575303736212f978095ad894a1ac44413816909b5ee739655e75917c3c70ec4b34e6ea79cd2285c17925a6ad556ea1742ab2017828793a8e618a06878f62ad3d10c8458424b4c1dd8be97081adf2ea93b4e2670530e09d1ec7d53f3f70f7db2e745eb6f454624b41c3748d322fba86ec4c295893bf3c4753fdbf92e63921220e59758be6fe1f562239615e4480a991751a129c366bfb590562e0c329ed02606b8d423c156fd811b97e8035ac744bd97c921724965106ef65292a3a7a850c1974144c457ba86797c32eeba54a6393d0dfc9acc792da6bbf63a19ee16d48b7809d437fbd77ed0b596062c055a87058b482e1594bd83ee83afc671fddf286d8514bcfd958ccaba3e6733681aa273d1760717162df770993696e9cb3aec7e156aa837137aa8504f047bede93666a16bcb9b158eaa48c6d4250de26c72e3fb0c0bb180267457abf085946860de6ab447822f585e426aed310cda8b8dcf98346c8895b051d1e9ad3fa3ce61290dd4b690c1776166667774079ce8768362dcaa94ed9e84c53da4267f769f89faf24901eb37afbbfa9499f1ca6daaa19a146ed6211ae0ac542f6dcffaaa2e5106e59b99188f4687fc4b614295289fdec4edd335cdfab8a01d39421c99c595b1e3b9c8746321abe7d7f1944cb3514ad710d2b37210b2c6a6a9e6032eca58a17b082c3312dedc47d2b59511c78d09215b14a869fb7353ce54e3146f28290285517eba5b2afaeea0a357091f90d6431566ac77dcf1dffdda3b9b6cebad33012057fb5374ee702b4d6b18d0b64f0db060ff009daba5043efcac193cd1b2b8aac48ea132b8d1fcf12766c752dc40fa71f01605151b786fe6deb8a6795f04bfcd99429e3f741799df34f62cec0593ce42ab1d51800ccfd934744607c08a92fb2b4de0f08d32cf03b5bf2f2f1c6b35f9002d46759b22bfa17547b94f448cb931d173760100b23f49d70021e2c9af7edf37ed1bf39704e7163f3708d264cb90d8fea82a31858a8c378d118cfdef2a0eaf07d727c6a3927abe9eeadd91afc2e3a844cc2b0c1f9201c3cb453ea4a8cf7bbc9d341fc41beb666176f7c7ee1cd126448baa668b614dbca101365d094d56b4dae0888c71817691c97ab0924a21427dcb5819c7495cf0429bdbfe801ae54e1326268f3464b9aed1f60906b7c61a11cbe3d95a20efbf757899895817f4fe293540b20856c36bdde01603f8755699328c01ec2d0d65647008f12494c73b9f0f61e50160cabc48459160844ff30aecc2df0e789fca452adcbcbde4d072d178e467975a09d00486d4bc5e6baa7f7451c5b186b16a40b7240f1ed59eb233de1309e2c74bae60c6509cdada986d9f42e9edc267636ecc58fb57915ca3f5d76563fab0626209be6b00ffa952706fcaeddb64a7aed0431734e0ae5274d113db46f0c4b455d7e5d7ba9fce8447ec4cfafe9e75a6a3bb7a3d63549553f0863608aec5ffec45ffdcd1eac262c18b4cda785b4fc0cb4340d499096079df707846790140b23f07c42d90a813c1acd05ee0c12827b8a3cdcf831b60eac34d6b08a71a6240306659c0799209daaf8da8eab5fba7ba0a288fc7dffd99ad01b5db83bad6d83f878bdd24596bbf9012c4286ff9ba70c20c8d467622256228c830419e102ff44e5cbd4c5da8db8158f9bbdd6671945582562b27ffb9043abe414e577d8f84fbdcb427e5afefb7a20ba4e4bfdf43b04f107aa117cd06bff63123d59c73f38c32aa374e05306524843242fad521dc30d952a0d5becd1fc4128f32f7e35ba7558b8fa036639e86a79045ef165bbc77a9f3530d9e8dae2025f026a0880b6496aacdf5592837d8bf032d80bd269a7bca2de6b7988b5449c936b858f434d76c0089bc10ed5e5e3881d0dd9ffe86a9b5595594d5dd057555fea488ebb370b35ad174887a1e117865fa0503ef2f6e3e4139fec67048d064115eee2795a94baef334b0a4210ea70f28744be80a865ed0bc7ac63421a90cdc5f09dcb69e6f3616801c5e5909c21169898134bc043185968fa5cc039af69c4e3fdee5e0f9940580c678bde69d97cae0ee71774a7c0ab306aaaabf89d1384908a9bf2b79040b26d833dc56a0c4efd7d51dd0fa619559fb400f1c2a9dba1220e23e93fb37eafd4b20c1bc69c246ad74a7bfee1080fee8fc71e8b0d6d1645b41ce7efcc1cfff16b4ca1d947b54559fe8c26da2627a7a6aefd8ad88172d1147f50f036d6722155b38cd466b70afba938afb2edfc4b4991381f49d8558e1011c4a555a5a708d042b9cfb2cac410d831950771703a6792b91d15f9b6bf1ab8d0824589072170dcb72a2a355af91fb6f34cf4856776a78a6172eb3f3e1e1933ac2b445efbefb3325a0430dc4cdaab2f728bd1a6e60175833500c15372b48fc76e5cb7329fbc3836664aeb0a7a64a0a1cbab323b30f653faa94847615a74b0eba6f684e0b8581ee0aaf9fda784f480db20c6961d8ec606c62bc76094b66bc7e6ede9945b0fefdde24a1c48883fa13e3e99bb9e9c22940829b3b97bd7a61185bebf297b03b9b8278938c14ef7b1adef2a680c0a7472abdcb2cada92085040f7fed73d38a522a3042926cd2ed3142e038232925769b261797c918038da0406b5d5a1c3ed20db25bc86a5dca0ac604971991cbcea094cfea2cee1be6d9faa337d0902f8bd46430be30498f4d3a37b3a475c623fb0a205d3c436fa3422868cbf9ab7ac4ae983134c2eee1d8848cacdb34e3df4d3cd99a5b0a79ee551312428d6e5d0d8efa22b4cc16608c4ebb3420875ce28b69b71cdc7e99074f7bfb8a35bca91fd61fb78e5019743d855894ca3e5e0f4c7c2cff587cfbce0b0d6bba78bc4199db1f52911500410fbdcf1b87d3c88db66da013234b2620b91674a828bbb45521bffa72634be22e6d7b6f5ecc4fed07318d218a20122b7fe5a20e849bdaa7b8789bdcfd81f2eef1b1af0e6097c60fd31ae12d626b2fd458c7bc045369ccf866dececb3633f5ad7770adc6979ec4393781e52eda5fb5ebe0be6bce86012679bbee9b8d7defd52594305737f9d55ec6e6fc25f15445e82896e0aa39375ee73b75c17be369e798fdecf572d9b680b62fe662f681774c1f0a0a21b5e84f807c799f9f2c89f2d1277ef148312df7cad9ece85539ebfea8df6bbefd50e1e2e322ed4dffbf89715a18abd85c75da29e37e7472eda31b0481663b8be46a0be11d836e5746959773cd81f374e9cab3592ccb29ec4ab86bc6af4675abe874296ccfae5d7bba49abfe3d290b265657855ceb7897f7b9714f349843252178aeef0a1879b5fdb1d8977080d4b6df2b7fb3ae44424206d94dead8fee12a7f23af3064d35f33834a33908bf4ce81f34601c8d2f39de347cd4a684b76f83994ead4a1f55e858a96357146a4a36e3fe1c23238ac5b6f8e0e08981db2f7f7eb3d1e61d221412c2f77f403e47f9406bc425bad36a7c39bbbb60ab27a95d43eda933c94a6d0171052bc5667e34d029abeec9e89784099df5563822fa7cc73add57650edba6792a1fd61451ab01179f22ee4f20d81cbc03891df91befb5a86cedba43b19feaf5098d401f8cca9650c020358dfa9d493e1098665120e9cf68869aa7f6f725abc4b2026f0bb233f8016c9b2a34f50e2d7f3f57b0ffdeb76c02226ab882ddf1a3ac29723cb79e2b95f20569f6a5cdd4ca390df36cae553e5c8e1ea554286cb83a3faf94bc4d8b178904d9b12f0ef46d82895161d07b323f113b8099e69652dabf7839ebff69cc7d2735a037c25690f8cc37bc5df3e9062c05fc53b0f0251742fc7594d98ad0be126e57e20e7b5ceefdc41d638155ea25d05763aa2b3b25ac9755f890e7d24acc01916b2af3e2feb5c07b96197f3076e4dee2eda20ec135a6cb225c2b20ce270c7671167b795eec44a2d14aa3308f577cbf620d552b805ad2c92386de5da6391ed2efdc665b3eb9986d1fe683e526c6451a85c37e8a9b0e0d07a57638fb217a9ea4385a42b41467a6233d65df193b496b8986c64ed32d8b2f06cd9e7868e6d2866742bc715ee7bd8479bf42fd4a10e6c77de8d8843f662e43b64918eea7bc919c81dcdb777f1c7d489e16a31fc1d666821e877b7689eb3ea5fd17cc6319df5e72ed63ad8da7ecf3c54f41d1c84e3644b5a96e0954fb5d664413c8ff44aab9b73c393ce29e39d9f16deff5cafbee139e3b7671d65a4ca9fca7593cde852fe40ec4906b4d577df26133bf312170b59e6b4bb49f9c2675d90ed25bb6c58b849189f9e1133d6d7788b35be6b1af7884e5aa8964f420547dc99cafbde283f9eec37452a5dc6ac94af6b4e4ff4f14caf437dd8f03f5f783c79347e96e8ef84c2ca12639837b2baf827e262c5f46da33cd1dc67a99c705e492f8d2158caae2d909c60d25f19db2d51a2fa014bdd1f4a6c762a822f373d1d35e9d30add177f56697ef0382a642b8600bb9378ebfea485b0970b03201525b5c02ee85667201c5a602fd5eb390c1511e082b0c5cab78df052e4e3f6dc383a783ad36a410bed76b6fdd58e6430bdcf408c977bdcc636f8d4a9a63507056b83436b2deb28e6d30c4f0317867ed8a8f0363874b466e7751c876bb4db66832af2427ecc8e62b543cb1c1e45c3c49085f93eaa82fa16c0c01797c484e2a40487987d0fdf8de30621a37cebcf04c3083379e92c6cad5357987122fb581dc4c6b3740882ff221d7f654c9891b36315bd27f621b0a39d180681e61ec6209c7a9a2a55f56039eaf9d3a00f382afc5ada25d183eb9a10906f2e3640a8a6e8edc1cb8665b85b28a0098e89cdb4e17fd7c8838f2c0e5c57816a932641524eac81e38e25f10e38626c1425f54e4f56a867f67ae21545099daf0ac47d75a558879af7a019e4b413e67aaa43d37ff47404b4334580ccf68f24e2777b6d6032f818d978bab9ff8b2d823982f467d633bb53ff924a0223c7819efe72612ce63b516632dab80ea1bb470ef65d26ef55708ad99ca56f03c4874e66b7c5dd22d7652e80afdda06bae524ec1e2060cf5135679160abe50a4de2545ba0bdc60a4ae2657046fe8fc225e556e59ab530f0500660fc18556dab4b7e224ca59f13f3fe2d9bc0aeef092e24385544cc638b35ad4bfaca88ca3e7be91917d9a6185f3634d5fc608ec07781e989949a4368860da5d221e9f00db6bb9cc8be8bf7e3d1e852a520138429b717c6faece471e25ea65961aa7af65107dbcc38182fb2a11b9ac61a24ba0cda02cd86634f845b930ab90e8e57d5ce232eea8b46eaabade037b25f057dff0040aedd1e39e584e1778f0dbed51115fb7cc01f154e2e8ed84f0f38a9fee9dd41a0fb59f06018c68e80d485b158a3fb2348441ca36e761e3f6b40c06db730aba3f00a8728682f3c6485178fa7505e78ce6852541282e33cedc0a50d534dad666c54965167a047e89c7cde0bb5b5abea84077207d99941c79bab2797a118e1f7fb9a3630e01fc07bb2944eb5ddab85cfddcb85e3576d6b78f4eecd6218c37338ff1c5423727fabf5791313483a435f9711479cadd5ef3e63498a36a10416e3feca1f4cdf020944a153da081a390422bf87dd93a094894cb375d495f5eaa57aa6fe128373fe8f3bd567f417d03d148076eaa56550d8454341cdd0228afa630d127a603305b720bca361e60edd2f7de71658e19689318d1c52e62e77015c07698fa6ffb97f65bac594e87f5473cb196c1e27a858893829c3e4eb3e9ec64cbc803d8903c07e3277f55c8100ae2580a178848030a95116e246e1aa7f202b3af8626423e04e8a9d177928828d875659caf633e96ad61ae3bf6da418e32c0f6236049cefa38cffbaa7ca769c80ad43ddae542c6742a0c0fa746c7e25deda5af9ef74c9063706b13018041db58e4089cec47022c778648b7d310f26bb844f3abb39ed2e0e17a08dbc07c8f5d4a51e8ff34bd91aba37947536dcb1b27c20a4dacd85a1e8eba1dfafb4357ef78c483af5a49d4bc80b4b5efc69ba884b8d48272c81a603488787efc441a2dc9885c91fac0c8b4a0b678b7335c0f8424697a9ac16d8d6b961319aa71948185a285811c950f8c4e48ba926b3bb0d4e32e03a3a223da0f24f1e52b3cb31414f576748d2155b7750ab7fd8b2626f515396c98c9b9f8aff11847ff0d411d0b796ae4f29f68304848213cbac5a02756796a338f316727ec45e4b2a2ec08ca83e7f55c76ebfa764cc370268032d2ba4634fa78ec227133628265d25c81566399204d0ddadbec2869eee7ef4f9dcc67ba76e9e583dc663c1c841e2234ae73536077c32e301cada220a346578b48cf1dff2175c9dfc66a5d5ec532dc31986eab40c86ca5ee55d162d8bf4e85e69b5564c5078672b</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> -笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>本地文件用git上传到gitee</title>
      <link href="/2022/09/19/%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E7%94%A8git%E4%B8%8A%E4%BC%A0%E5%88%B0gitee/"/>
      <url>/2022/09/19/%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E7%94%A8git%E4%B8%8A%E4%BC%A0%E5%88%B0gitee/</url>
      
        <content type="html"><![CDATA[<h1 id="本地文件用git上传到gitee"><a href="#本地文件用git上传到gitee" class="headerlink" title="本地文件用git上传到gitee"></a>本地文件用git上传到gitee</h1><h2 id="1-首先要在gitee上建一个仓库"><a href="#1-首先要在gitee上建一个仓库" class="headerlink" title="1. 首先要在gitee上建一个仓库"></a>1. 首先要在gitee上建一个仓库</h2><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgfd2d2a1140b143dda8c77ee53f31913b.png" alt="img"></p><h2 id="2-进行初始化"><a href="#2-进行初始化" class="headerlink" title="2.进行初始化"></a>2.进行初始化</h2><p>进入到要上传文件的目录，右键选中Git Bash Here进入git命令行，输入</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgfb3867cc6e0f4543ae20c3ec07bda60b.png" alt="在这里插入图片描述"></p><pre class="line-numbers language-none"><code class="language-none">git init&#x2F;&#x2F;进行初始化，会在目录下创建一个.git的本地仓库<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-配置目标仓库地址（要上传的仓库地址）"><a href="#3-配置目标仓库地址（要上传的仓库地址）" class="headerlink" title="3. 配置目标仓库地址（要上传的仓库地址）"></a>3. 配置目标仓库地址（要上传的仓库地址）</h2><p>先复制目标仓库地址：</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgimage-20221005102957572.png" alt="image-20221005102957572"></p><p>输入如下命令，将本地仓库与远程仓库相关联：</p><pre class="line-numbers language-none"><code class="language-none">git remote add origin https:&#x2F;&#x2F;... &#x2F;仓库名.git   &#x2F;&#x2F;后面改为你自己刚复制的仓库地址<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-与仓库的文件进行同步"><a href="#4-与仓库的文件进行同步" class="headerlink" title="4. 与仓库的文件进行同步"></a>4. 与仓库的文件进行同步</h2><pre class="line-numbers language-none"><code class="language-none">git pull --rebase origin master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5-将要上传的文件放入此文件夹后再添加到缓冲区"><a href="#5-将要上传的文件放入此文件夹后再添加到缓冲区" class="headerlink" title="5. 将要上传的文件放入此文件夹后再添加到缓冲区"></a>5. 将要上传的文件放入此文件夹后再添加到缓冲区</h2><pre class="line-numbers language-none"><code class="language-none">git add .&#x2F;&#x2F;添加当前目录下的所有文件到<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="6-将文件提交到本地"><a href="#6-将文件提交到本地" class="headerlink" title="6. 将文件提交到本地"></a>6. 将文件提交到本地</h2><pre class="line-numbers language-none"><code class="language-none">git commit -m &#39;dubbo-admin&#39;&#x2F;&#x2F;单引号内的内容为提交时的备注信息<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="7-推送到GItee仓库中"><a href="#7-推送到GItee仓库中" class="headerlink" title="7.推送到GItee仓库中"></a>7.推送到GItee仓库中</h2><pre class="line-numbers language-none"><code class="language-none">git push origin master&#x2F;&#x2F;master是默认分支名，这里可以根据自己需要进行修改<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="8-登录gitee远程仓库查看，成功上传"><a href="#8-登录gitee远程仓库查看，成功上传" class="headerlink" title="8.登录gitee远程仓库查看，成功上传"></a>8.登录gitee远程仓库查看，成功上传</h2>]]></content>
      
      
      <categories>
          
          <category> -教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA破解安装教程</title>
      <link href="/2022/09/18/IDEA%E7%A0%B4%E8%A7%A3/"/>
      <url>/2022/09/18/IDEA%E7%A0%B4%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="激活教程"><a href="#激活教程" class="headerlink" title="激活教程"></a>激活教程</h1><p><strong>本教程支持 JetBrains 全家桶产品，支持 Windows、macOS 和 Linux 系统并且支持所有版本。</strong></p><h2 id="一、下载补丁文件"><a href="#一、下载补丁文件" class="headerlink" title="一、下载补丁文件"></a>一、下载补丁文件</h2><p>下载激活所需的补丁文件</p><p>链接：<a href="https://pan.baidu.com/s/1KmGYNLy1wBZOToAbvDvxdg?pwd=hjtx">https://pan.baidu.com/s/1KmGYNLy1wBZOToAbvDvxdg?pwd=hjtx</a><br>提取码：hjtx</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301162038753.png" alt="图片"></p><h2 id="二、idea激活教程"><a href="#二、idea激活教程" class="headerlink" title="二、idea激活教程"></a>二、idea激活教程</h2><p>1、激活文件下载之后，将文件解压后直接放在D盘下面（<strong>Ps：放置的位置大家随意，只要后续不删除就行</strong>）</p><p>2、在 IDEA 官网下载安装包并且安装在自己电脑上。</p><p>3、如果你电脑上的IDEA之前就使用过其他激活教程，那么我建议你先重置你的IDEA。这样能避免因为以前的激活补丁而导致永久激活失败，后期失效了又得折腾是很麻烦的。（<strong>Ps：新电脑新安装的IDEA无需重置，可以直接跳过这一步直接开始激活</strong>）</p><p>重置IDEA也很方便了，这里准备了脚本给大家，双击运行脚本就重置好了。</p><p>在补丁文件中打开<code>重置脚本</code>这个文件夹，</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301162039481.png" alt="图片"></p><p>里面有两个脚本，一个是用于Mac、Linux系统的，另一个是用于Windows系统的！</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301162039496.png"></p><p>比如Windows系统的脚本，我们双击运行之后显示了这么一个弹窗就表示重置成功了！</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301162039847.png" alt="图片"></p><p>4、还是在补丁文件中，打开 <code>scripts</code> 这个文件夹。</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301162040333.png" alt="图片"></p><p>看到下图框选的两个脚本，</p><ul><li>install.sh：是用于Mac和Linux系统的激活脚本。</li><li>install-all-users.vbs：是用于Windows系统的激活脚本。</li></ul><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301162040640.png" alt="图片"></p><p>这里举例Windows系统，双击 install-all-users.vbs 脚本会出现一个弹窗，我们点击确定。</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301162040233.png" alt="图片"></p><p>等几秒钟还会出现一个小弹窗，继续点击确定就好了。</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301162041459.png" alt="图片"></p><blockquote><p>注意：这个激活脚本是支持 JetBrains 所有产品的！也就是说脚本运行一次之后，你电脑上安装的所有 JetBrains 软件就都可以永久了，直接按照后面的步骤输入激活码就行！<br>比如你电脑上现在安装了IDEA 和PyCharm这两款软件，上面的激活脚本你只需要运行一次就可以了！而且后续如果你再安装其他 JetBrains 的软件也不需要再运行激活脚本，直接按照后面的步骤输入激活码就可以了！</p></blockquote><p>5、然后我们打开 IDEA，如下图所示点击 <strong>Activation code</strong> 。</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301162041712.png" alt="图片"></p><p>6、然后复制下面的激活码粘贴进去。</p><pre class="line-numbers language-none"><code class="language-none">6G5NXCPJZB-eyJsaWNlbnNlSWQiOiI2RzVOWENQSlpCIiwibGljZW5zZWVOYW1lIjoic2lnbnVwIHNjb290ZXIiLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiIiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJQU0kiLCJmYWxsYmFja0RhdGUiOiIyMDI1LTA4LTAxIiwicGFpZFVwVG8iOiIyMDI1LTA4LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBEQiIsImZhbGxiYWNrRGF0ZSI6IjIwMjUtMDgtMDEiLCJwYWlkVXBUbyI6IjIwMjUtMDgtMDEiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiSUkiLCJmYWxsYmFja0RhdGUiOiIyMDI1LTA4LTAxIiwicGFpZFVwVG8iOiIyMDI1LTA4LTAxIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJQUEMiLCJmYWxsYmFja0RhdGUiOiIyMDI1LTA4LTAxIiwicGFpZFVwVG8iOiIyMDI1LTA4LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBHTyIsImZhbGxiYWNrRGF0ZSI6IjIwMjUtMDgtMDEiLCJwYWlkVXBUbyI6IjIwMjUtMDgtMDEiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFNXIiwiZmFsbGJhY2tEYXRlIjoiMjAyNS0wOC0wMSIsInBhaWRVcFRvIjoiMjAyNS0wOC0wMSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQV1MiLCJmYWxsYmFja0RhdGUiOiIyMDI1LTA4LTAxIiwicGFpZFVwVG8iOiIyMDI1LTA4LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBQUyIsImZhbGxiYWNrRGF0ZSI6IjIwMjUtMDgtMDEiLCJwYWlkVXBUbyI6IjIwMjUtMDgtMDEiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFJCIiwiZmFsbGJhY2tEYXRlIjoiMjAyNS0wOC0wMSIsInBhaWRVcFRvIjoiMjAyNS0wOC0wMSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQQ1dNUCIsImZhbGxiYWNrRGF0ZSI6IjIwMjUtMDgtMDEiLCJwYWlkVXBUbyI6IjIwMjUtMDgtMDEiLCJleHRlbmRlZCI6dHJ1ZX1dLCJtZXRhZGF0YSI6IjAxMjAyMjA5MDJQU0FOMDAwMDA1IiwiaGFzaCI6IlRSSUFMOi0xMDc4MzkwNTY4IiwiZ3JhY2VQZXJpb2REYXlzIjo3LCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-SnRVlQQR1&#x2F;9nxZ2AXsQ0seYwU5OjaiUMXrnQIIdNRvykzqQ0Q+vjXlmO7iAUwhwlsyfoMrLuvmLYwoD7fV8Mpz9Gs2gsTR8DfSHuAdvZlFENlIuFoIqyO8BneM9paD0yLxiqxy&#x2F;WWuOqW6c1v9ubbfdT6z9UnzSUjPKlsjXfq9J2gcDALrv9E0RPTOZqKfnsg7PF0wNQ0&#x2F;d00dy1k3zI+zJyTRpDxkCaGgijlY&#x2F;LZ&#x2F;wqd&#x2F;kRfcbQuRzdJ&#x2F;JXa3nj26rACqykKXaBH5thuvkTyySOpZwZMJVJyW7B7ro&#x2F;hkFCljZug3K+bTw5VwySzJtDcQ9tDYuu0zSAeXrcv2qrOg&#x3D;&#x3D;-MIIETDCCAjSgAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIwMTAxOTA5MDU1M1oXDTIyMTAyMTA5MDU1M1owHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMDEwMTkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCUlaUFc1wf+CfY9wzFWEL2euKQ5nswqb57V8QZG7d7RoR6rwYUIXseTOAFq210oMEe++LCjzKDuqwDfsyhgDNTgZBPAaC4vUU2oy+XR+Fq8nBixWIsH668HeOnRK6RRhsr0rJzRB95aZ3EAPzBuQ2qPaNGm17pAX0Rd6MPRgjp75IWwI9eA6aMEdPQEVN7uyOtM5zSsjoj79Lbu1fjShOnQZuJcsV8tqnayeFkNzv2LTOlofU&#x2F;Tbx502Ro073gGjoeRzNvrynAP03pL486P3KCAyiNPhDs2z8&#x2F;COMrxRlZW5mfzo0xsK0dQGNH3UoG&#x2F;9RVwHG4eS8LFpMTR9oetHZBAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQUJNoRIpb1hUHAk0foMSNM9MCEAv8wSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBABqRoNGxAQct9dQUFK8xqhiZaYPd30TlmCmSAaGJ0eBpvkVeqA2jGYhAQRqFiAlFC63JKvWvRZO1iRuWCEfUMkdqQ9VQPXziE&#x2F;BlsOIgrL6RlJfuFcEZ8TK3syIfIGQZNCxYhLLUuet2HE6LJYPQ5c0jH4kDooRpcVZ4rBxNwddpctUO2te9UU5&#x2F;FjhioZQsPvd92qOTsV+8Cyl2fvNhNKD1Uu9ff5AkVIQn4JU23ozdB&#x2F;R5oUlebwaTE6WZNBs+TA&#x2F;qPj+5&#x2F;we9NH71WRB0hqUoLI2AKKyiPw++FtN4Su1vsdDlrAzDj9ILjpjJKA1ImuVcG329&#x2F;WTYIKysZ1CWK3zATg9BeCUPAV1pQy8ToXOq+RSYen6winZ2OO93eyHv2Iw5kbn1dqfBw1BuTE29V2FJKicJSu8iEOpfoafwJISXmz1wnnWL3V&#x2F;0NxTulfWsXugOoLfv0ZIBP1xH9kmf22jjQ2JiHhQZP7ZDsreRrOeIQ&#x2F;c4yR8IQvMLfC0WKQqrHu5ZzXTH4NO3CwGWSlTY74kE91zXB5mwWAx1jig+UXYc2w4RkVhy0&#x2F;&#x2F;lOmVya&#x2F;PEepuuTTI4+UJwC7qbVlh5zfhj8oTNUXgN0AOc+Q0&#x2F;WFPl1aw5VV&#x2F;VrO8FCoB15lFVlpKaQ1Yh+DVU8ke+rt9Th0BCHXe0uZOEmH0nOnH&#x2F;0onD<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301162041099.png" alt="图片"></p><p>7、激活码粘贴之后如下图所示，就说明有效，然后我们点击 <strong>Activate</strong> 激活。</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301162041981.png" alt="图片"></p><p>8、最后就激活成功了，点击 <strong>Continue</strong> 关闭窗口就好了。</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301162041200.png" alt="图片"></p>]]></content>
      
      
      <categories>
          
          <category> -下载安装教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis主从复制原理和用法</title>
      <link href="/2022/09/18/Redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%8E%9F%E7%90%86%E5%92%8C%E7%94%A8%E6%B3%95/"/>
      <url>/2022/09/18/Redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%8E%9F%E7%90%86%E5%92%8C%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Redis主从复制"><a href="#Redis主从复制" class="headerlink" title="Redis主从复制"></a>Redis主从复制</h1><h2 id="1、是什么"><a href="#1、是什么" class="headerlink" title="1、是什么"></a>1、是什么</h2><ul><li>主机数据更新后根据配置和策略， 自动同步到备机的master&#x2F;slaver机制，Master以写为主，Slave以读为主</li></ul><h2 id="2、能干什么"><a href="#2、能干什么" class="headerlink" title="2、能干什么"></a>2、能干什么</h2><ul><li>读写分离，性能扩展</li><li>容灾快速恢复</li></ul><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgimage-20220919163222071.png" alt="image-20220919163222071"></p><h2 id="3、主从复制原理"><a href="#3、主从复制原理" class="headerlink" title="3、主从复制原理"></a>3、主从复制原理</h2><p>1、当从连接上主服务器之后,从服务器向主服务发送进行数据同步消息</p><p>2、主服务器接到从服务器发送过来同步消息,把主服务器数据进行持久化，rdb文件，把rdb文件发送从服务器，从服务器拿到rdb进行读取</p><p>3、每次主服务器进行写操作之后，和从服务器进行数据同步</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgimg1621664167220-774ddca2-d714-472d-84ae-2242450a53be.png" alt="image.png"></p><h2 id="4、环境配置"><a href="#4、环境配置" class="headerlink" title="4、环境配置"></a>4、环境配置</h2><ul><li><p>新建myredis目录</p><pre class="line-numbers language-none"><code class="language-none">[root@a etc]# mkdir myredis<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>复制一份<code>redis.conf</code>到myredis目录（etc目录下复制过redis.conf， 如果没有就去安装目录复制）</p><pre class="line-numbers language-none"><code class="language-none">[root@a etc]# cp redis.conf myredis&#x2F;redis.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>修改myredis目录下<code>redis.conf</code>，将daemonize设置为yes，Appendonly 关掉myredis目录下新建<code>redis6379.conf</code> </p><pre class="line-numbers language-none"><code class="language-none">[root@a myredis]# vi redis6379.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>并添加内容</p><pre class="line-numbers language-none"><code class="language-none">include redis.confpidfile &#x2F;var&#x2F;run&#x2F;redis_6379.pidport 6379dbfilename dump6379.rdb <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>myredis目录下新建<code>redis6380.conf</code> </p><pre class="line-numbers language-none"><code class="language-none">[root@a myredis]# vi redis6380.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>并添加内容</p><pre class="line-numbers language-none"><code class="language-none">include redis.confpidfile &#x2F;var&#x2F;run&#x2F;redis_6380.pidport 6380dbfilename dump6380.rdb <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>myredis目录下新建<code>redis6381.conf</code> </p><pre class="line-numbers language-none"><code class="language-none">[root@a myredis]# vi redis6381.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>并添加内容</p><pre class="line-numbers language-none"><code class="language-none">include redis.confpidfile &#x2F;var&#x2F;run&#x2F;redis_6381.pidport 6381dbfilename dump6381.rdb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>关闭以前启动的redis服务</p><pre class="line-numbers language-none"><code class="language-none">ps -ef | grep redis  kill 端口号<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>使用三个配置文件分别启动redis，并打开server-cli</p><pre class="line-numbers language-none"><code class="language-none">[root@a myredis]# redis-server redis6379.conf（启动redis）[root@a myredis]# redis-cli -p 6379（打开server-cli）127.0.0.1:6379&gt; info replication（查看主从复制的相关信息）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">[root@a myredis]# redis-server redis6380.conf[root@a myredis]# redis-cli -p 6380127.0.0.1:6380&gt; info replication<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">[root@a myredis]# redis-server redis6381.conf[root@a myredis]# redis-cli -p 6381127.0.0.1:6381&gt; info replication<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>配从库而不配主库，分别在从库中设置主从信息，选取6379为主库</p><pre class="line-numbers language-none"><code class="language-none">127.0.0.1:6380&gt;  slaveof 127.0.0.1 6379<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">127.0.0.1:6381&gt;  slaveof 127.0.0.1 6379<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p><strong>PS：</strong></p><blockquote><p>从机只能读数据而不能写数据</p><p>主机挂掉，重启就行，主从配置不会失效</p><p>从机重启需重设：<code>slaveof 127.0.0.1 6379 </code></p><p>可以将配置增加到文件中。永久生效。</p></blockquote><h2 id="5、一主二从"><a href="#5、一主二从" class="headerlink" title="5、一主二从"></a>5、一主二从</h2><ul><li>主机宕机后，从机原地待命，不会成为主机</li><li>从机宕机后，重启后需要重新设置主机IP</li><li>从机宕机后，重新挂到主机上，会将主机的数据从头开始复制</li></ul><h2 id="6、薪火相传"><a href="#6、薪火相传" class="headerlink" title="6、薪火相传"></a>6、薪火相传</h2><ul><li>上一个Slave可以是下一个slave的Master，Slave同样可以接收其他 slaves的连接和同步请求，那么该slave作为了链条中下一个的master, 可以有效减轻master的写压力,去中心化降低风险。</li><li>用 <code>slaveof &lt;ip&gt; &lt;port&gt;</code></li><li>中途变更转向：会清除之前的数据，重新建立拷贝最新的</li><li>风险是一旦某个slave宕机，后面的slave都没法备份</li><li>主机挂了，从机还是从机，无法写数据了</li></ul><h2 id="7、反客为主"><a href="#7、反客为主" class="headerlink" title="7、反客为主"></a>7、反客为主</h2><ul><li>当一个master宕机后，后面的slave可以立刻升为master，其后面的slave不用做任何修改。</li><li>用 <code>slaveof no one</code>  将从机变为主机。</li></ul><h2 id="9、复制原理"><a href="#9、复制原理" class="headerlink" title="9、复制原理"></a>9、复制原理</h2><ul><li>Slave启动成功连接到master后会发送一个sync命令</li><li>Master接到命令启动后台的存盘进程，同时收集所有接收到的用于修改数据集命令， 在后台进程执行完毕之后，master将传送整个数据文件到slave,以完成一次完全同步</li><li>全量复制：而slave服务在接收到数据库文件数据后，将其存盘并加载到内存中。</li><li>增量复制：Master继续将新的所有收集到的修改命令依次传给slave,完成同步</li><li>但是只要是重新连接master,一次完全同步（全量复制)将被自动执行</li></ul>]]></content>
      
      
      <categories>
          
          <category> -笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux系统下安装MySQL</title>
      <link href="/2022/09/18/Linux%E7%B3%BB%E7%BB%9F%E4%B8%8B%E5%AE%89%E8%A3%85MySQL/"/>
      <url>/2022/09/18/Linux%E7%B3%BB%E7%BB%9F%E4%B8%8B%E5%AE%89%E8%A3%85MySQL/</url>
      
        <content type="html"><![CDATA[<p><strong>1 查看是否已经安装 Mysql</strong></p><pre class="line-numbers language-none"><code class="language-none">rpm -qa | grep mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果你查看出来有东西，可以使用下面命令将其删除</p><pre class="line-numbers language-none"><code class="language-none">rpm -e 文件名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>2 下载官方 Mysql 包</strong></p><pre class="line-numbers language-none"><code class="language-none">wget -i -c http:&#x2F;&#x2F;dev.mysql.com&#x2F;get&#x2F;mysql57-community-release-el7-10.noarch.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgimage-20221008163223422.png" alt="image-20221008163223422"></p><blockquote><p>如果安装有提示：Cannot write to ‘mysql57-community-release-el7-10.noarch.rpm’ (No such file or directory)，那就是权限不够</p><p>可以输入 su root 来解决，然后重新下载。</p></blockquote><p><strong>3 安装MySQL包</strong></p><pre class="line-numbers language-none"><code class="language-none">yum -y install mysql57-community-release-el7-10.noarch.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>4 安装 MySQL</strong></p>  <pre class="line-numbers language-none"><code class="language-none">yum -y install mysql-community-server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果执行命令过程中提示：Unable to find a match: mysql-community-server</p><p>则可以通过命令解决</p><pre class="line-numbers language-none"><code class="language-none">yum module disable mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>5启动 Mysql 服务</strong></p><pre class="line-numbers language-none"><code class="language-none">systemctl start mysqld.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果没有报错，进入第六步，</p><p>如果执行报错，多半是没有权限，执行下面语句赋予权限，然后重试</p><pre class="line-numbers language-none"><code class="language-none">chown mysql:mysql -R &#x2F;var&#x2F;lib&#x2F;mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>6 查看 Mysql 运行状态</strong></p><pre class="line-numbers language-none"><code class="language-none">service mysqld status<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>看见这个绿色就表示启动成功了</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgimage-20221008170143562.png" alt="image-20221008170143562"></p><p><strong>7 查看初始密码（红色部分为初始密码)</strong></p> <pre class="line-numbers language-none"><code class="language-none">grep ‘password’ &#x2F;var&#x2F;log&#x2F;mysqld.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果能正常查看到，则OK；如果查看不到，则表示没有密码。</p><p><strong>8 进入数据库</strong></p><pre class="line-numbers language-none"><code class="language-none">mysql -u root -p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入命令后，点击回车，会让你输入密码，然后输入刚刚的初始密码（输密码的时候不可见），当然支持粘贴，你可以复制初始密码后，然后粘贴。如果没有密码，直接回车即可。</p><p><strong>注: 如果显示数据库无法访问</strong></p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgimage-20221008170457217.png" alt="image-20221008170457217"></p><p>修改文件之前记得先关闭mysql服务</p><pre class="line-numbers language-none"><code class="language-none">service mysqld stop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改MySql配置文件my.cnf，新增skip-grant-tables</p><pre class="line-numbers language-none"><code class="language-none">find &#x2F; -name my.cnf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgimage-20221008170746871.png" alt="image-20221008170746871"></p><p>通过 vi 指令进入文件</p><pre class="line-numbers language-none"><code class="language-none">vi &#x2F;etc&#x2F;my.cnf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgimage-20221008170833326.png" alt="image-20221008170833326"></p><p>新增skip-grant-tables ,添加skip-grant-tables，这样mysql可以免密登录。</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgimage-20221008171121621.png" alt="image-20221008171121621"></p><p>重启服务</p><pre class="line-numbers language-none"><code class="language-none">service mysqld start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再次连接MySql，重置密码</p><p>任意密码就可以进入了</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgimage-20221008171406615.png" alt="image-20221008171406615"></p><p>通过 show databases; 注意带 ; 号</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgimage-20221008171433125.png" alt="image-20221008171433125"></p><p><strong>切换到mysql数据库</strong>，<strong>重置密码（为 root ）</strong></p><pre class="line-numbers language-none"><code class="language-none">update user set authentication_string&#x3D;password(&#39;root&#39;) where user&#x3D;&#39;root&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改配置文件my.cnf，删除skip-grant-tables，重启，再登录</p><p>删除skip-grant-tables</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgimage-20221008171623784.png" alt="image-20221008171623784"></p><p>重启服务</p><pre class="line-numbers language-none"><code class="language-none">service mysqld start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>根据指令进入MySQL数据库</p><pre class="line-numbers language-none"><code class="language-none">mysql -uroot -p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再次使用新密码登录即可至此！</p>]]></content>
      
      
      <categories>
          
          <category> -教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis哨兵模式</title>
      <link href="/2022/09/18/Redis%E5%93%A8%E5%85%B5%E6%A8%A1%E5%BC%8F/"/>
      <url>/2022/09/18/Redis%E5%93%A8%E5%85%B5%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="哨兵模式"><a href="#哨兵模式" class="headerlink" title="哨兵模式"></a>哨兵模式</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><ul><li><strong>反客为主（当一个master宕机后，后面的slave可以立刻升为master，其后面的slave不用做任何修改。）</strong>的自动版，能够后台监控主机是否故障，如果故障了根据投票数自动将从库转换为主库</li></ul><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgimage-20220919170850430-16635785371291.png" alt="image-20220919170850430"></p><h2 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h2><ol><li><p>调整为一主二仆模式，6379带着6380、6381</p></li><li><p>自定义的<code>/myredis</code>目录下新建<code>sentinel.conf</code>文件，<strong>名字绝不能错</strong></p><pre class="line-numbers language-none"><code class="language-none">[root@a myredis]# vi sentinel.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>配置哨兵</p><pre class="line-numbers language-none"><code class="language-none">sentinel monitor mymaster 127.0.0.1 6379 1PS: 其中mymaster为监控对象自定义的服务器名称， 1 为至少有多少个哨兵(启动的sentinel)同意从机切换为主机。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>启动哨兵</p><pre class="line-numbers language-none"><code class="language-none">[root@a myredis]# redis-sentinel  &#x2F;myredis&#x2F;sentinel.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><p><code>当主机挂掉，在从机中产生新的主机。原主机重启后会变为从机（根据优先级别：slave-priority ），原主机重启后会变为从机。</code></p><h2 id="故障恢复"><a href="#故障恢复" class="headerlink" title="故障恢复"></a>故障恢复</h2><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgimage-20220919172021991-16635792291332.png" alt="image-20220919172021991"></p><ul><li>优先级在redis.conf中默认：slave-priority 100，值越小优先级越高</li><li>偏移量是指获得原主机数据最全的</li><li>每个redis实例启动后都会随机生成一个40位的runid</li></ul><h2 id="复制延时"><a href="#复制延时" class="headerlink" title="复制延时"></a>复制延时</h2><ul><li>由于所有的写操作都是先在Master上操作，然后同步更新到Slave上，所以从Master同步到Slave机器有一定的延迟，当系统很繁忙的时候，延迟问题会更加严重，Slave机器数量的增加也会使这个问题更加严重。</li></ul>]]></content>
      
      
      <categories>
          
          <category> -笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis集群</title>
      <link href="/2022/09/18/Redis%E9%9B%86%E7%BE%A4/"/>
      <url>/2022/09/18/Redis%E9%9B%86%E7%BE%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="Redis集群"><a href="#Redis集群" class="headerlink" title="Redis集群"></a>Redis集群</h1><h2 id="什么是集群"><a href="#什么是集群" class="headerlink" title="什么是集群"></a>什么是集群</h2><ul><li>Redis 集群实现了对Redis的水平扩容，即启动N个redis节点，将整个数据库分布存储在这N个节点中，每个节点存储总数据的1&#x2F;N。</li><li>Redis 集群通过分区（partition）来提供一定程度的可用性（availability）： 即使集群中有一部分节点失效或者无法进行通讯， 集群也可以继续处理命令请求。</li></ul><h2 id="环境配置（阿里云版）"><a href="#环境配置（阿里云版）" class="headerlink" title="环境配置（阿里云版）"></a>环境配置（阿里云版）</h2><ul><li><p>开启daemonize yes</p></li><li><p>Appendonly 关掉或者换名字</p></li><li><p>cluster-enabled yes    打开集群模式</p></li><li><p>cluster-config-file nodes-6379.conf  设定节点配置文件名</p></li><li><p>cluster-node-timeout 15000   设定节点失联时间，超过该时间（毫秒），集群自动进行主从切换。</p></li><li><p>将myredis目录下的所有dump文件删除</p><pre class="line-numbers language-none"><code class="language-none">rm -rf dump*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>创建六个redis配置文件</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img1621680889251-5cac6704-619e-405a-a311-c545c1d8c4f0.png" alt="image.png"></p></li><li><p>每个文件的内容分别为</p><ul><li><p><code>redis6379.conf</code></p><pre class="line-numbers language-none"><code class="language-none">include redis.confpidfile &#x2F;var&#x2F;run&#x2F;redis_6379.pidport 6379dbfilename dump6379.rdbcluster-enabled yes    (打开集群模式)cluster-config-file nodes-6379.conf (设定节点配置文件名)cluster-node-timeout 15000(设定节点失联时间，超过该时间（毫秒），集群自动进行主从切换。)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>redis6380.conf</code></p><pre class="line-numbers language-none"><code class="language-none">include redis.confpidfile &#x2F;var&#x2F;run&#x2F;redis_6380.pidport 6380dbfilename dump6380.rdbcluster-enabled yescluster-config-file nodes-6380.confcluster-node-timeout 15000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>redis6381.conf</code></p><pre class="line-numbers language-none"><code class="language-none">include redis.confpidfile &#x2F;var&#x2F;run&#x2F;redis_6381.pidport 6381dbfilename dump6381.rdbcluster-enabled yescluster-config-file nodes-6381.confcluster-node-timeout 15000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>redis6389.conf</code></p><pre class="line-numbers language-none"><code class="language-none">include redis.confpidfile &#x2F;var&#x2F;run&#x2F;redis_6389.pidport 6389dbfilename dump6389.rdbcluster-enabled yescluster-config-file nodes-6389.confcluster-node-timeout 15000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>redis6390.conf</code></p><pre class="line-numbers language-none"><code class="language-none">include redis.confpidfile &#x2F;var&#x2F;run&#x2F;redis_6390.pidport 6390dbfilename dump6390.rdbcluster-enabled yescluster-config-file nodes-6390.confcluster-node-timeout 15000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>redis6391.conf</code></p><pre class="line-numbers language-none"><code class="language-none">include redis.confpidfile &#x2F;var&#x2F;run&#x2F;redis_6391.pidport 6391dbfilename dump6391.rdbcluster-enabled yescluster-config-file nodes-6391.confcluster-node-timeout 15000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>阿里云控制台添加安全组</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img1621681530918-b8cec623-b633-4985-8b44-78e61c33fb7e.png" alt="image.png"></p><p><code>PS ： 安全组的创建百度即可，注意安全组所属地区是否与你的服务器所在地区一致</code></p></li><li><p>使用六个配置文件启动六个redis-server</p><pre class="line-numbers language-none"><code class="language-none">[root@a myredis]# redis-server redis6379.conf[root@a myredis]# redis-server redis6380.conf[root@a myredis]# redis-server redis6381.conf[root@a myredis]# redis-server redis6389.conf[root@a myredis]# redis-server redis6390.conf[root@a myredis]# redis-server redis6391.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img1621681860617-14239187-ba4d-4e9e-9c80-9581c9a7f4ba.png" alt="image.png"></p></li><li><p>确保所有redis实例启动后，nodes-xxxx.conf文件都生成正常</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img1621681981375-3e5c793c-38c2-4cc2-8677-a93c3a96f746.png" alt="image.png"></p></li><li><p>进入下载的redis目录</p><pre class="line-numbers language-none"><code class="language-none">cd &#x2F;opt&#x2F;redis-6.2.3&#x2F;src<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>使用 redis-cli 创建整个 redis 集群（redis5.0版本之前使用的ruby脚本 redis-trib.rb，之后的版本已经集成该脚本）</p><pre class="line-numbers language-none"><code class="language-none">redis-cli --cluster create --cluster-replicas 1 8.129.52.78:6379 8.129.52.78:6380 8.129.52.78:6381 8.129.52.78:6389 8.129.52.78:6390 8.129.52.78:6391<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>此处不要用127.0.0.1，请用真实IP地址，即服务器IP地址</p><p>–replicas 1 采用最简单的方式配置集群，一台主机，一台从机，正好三组。</p></blockquote><p>成功示例：<img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img1621682648692-dea7f4e8-c61d-4fad-9cec-880ce4c83bd4.png" alt="image.png"></p></li></ul><h2 id="查看集群信息"><a href="#查看集群信息" class="headerlink" title="查看集群信息"></a>查看集群信息</h2><ul><li><p>-c 采用集群策略连接，设置数据会自动切换到相应的写主机</p><pre class="line-numbers language-none"><code class="language-none">[root@a src]#  redis-cli -c -p 6379<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>通过 cluster nodes 命令查看集群信息</p><pre class="line-numbers language-none"><code class="language-none">127.0.0.1:6379&gt; cluster nodes<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img1621683570035-b8d06dd5-7d0c-4f97-8f45-675bc649810a.png" alt="image.png"></p></li></ul><h2 id="cluster-如何分配当前六个节点"><a href="#cluster-如何分配当前六个节点" class="headerlink" title="cluster 如何分配当前六个节点"></a>cluster 如何分配当前六个节点</h2><ul><li>一个集群至少要有三个主节点。</li><li>选项–cluster-replicas 1 表示我们希望为集群中的每个主节点创建一个从节点。</li><li>分配原则尽量保证每个主数据库运行在不同的IP地址(即不同的服务器)，每个从库和主库不在一个IP地址上。</li></ul><h2 id="什么是slots"><a href="#什么是slots" class="headerlink" title="什么是slots"></a>什么是slots</h2><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img1621684958986-2d20ce93-69c7-4417-bc86-7041b232bde0.png" alt="image.png"></p><p>一个 Redis 集群包含16384 个插槽（hash slot），数据库中的每个键都属于这16384 个插槽的其中一个，集群使用公式CRC16(key) % 16384 来计算键key 属于哪个槽，其中CRC16(key) 语句用于计算键key 的CRC16 校验和。集群中的每个节点负责处理一部分插槽。</p><p>举个例子，一个集群有三个主节点，其中：</p><p>节点 A 负责处理0号至5460号插槽。</p><p>节点 B 负责处理5461号至10922号插槽。</p><p>节点 C 负责处理10923号至16383号插槽。</p><h2 id="向集群写值"><a href="#向集群写值" class="headerlink" title="向集群写值"></a>向集群写值</h2><ul><li>计算出slot后，自动重定向到对应集群节点</li></ul><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img1621685492492-99d957f7-d747-4817-a3b1-f4d119cee03a.png" alt="image.png"></p><ul><li>通过{}定义组才可以使用mget,mset等多键操作</li></ul><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img1621685670270-eb8a87d0-2a50-4cb6-a1fe-18b7064d6359.png" alt="image.png"></p><h2 id="查询集群中的值"><a href="#查询集群中的值" class="headerlink" title="查询集群中的值"></a>查询集群中的值</h2><ul><li><p><code>cluster keyslot &lt;key&gt; </code>：计算键 key 应该被放置在哪个槽上</p><pre class="line-numbers language-none"><code class="language-none">cluster keyslot k1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p><img src="E:/Java%E7%AC%94%E8%AE%B0/Images/%E5%A4%87%E4%BB%BD%E7%9A%84%E5%9B%BE%E7%89%87/img1621685919817-de794104-a464-4078-9da0-6d5ef962ac63-16636409287187.png" alt="image.png"></p><ul><li><code>cluster countkeysinslot &lt;slot&gt;</code> ：返回槽 slot 目前包含的键值对数量。（槽slot的值必须在当前节点范围内否则返回0）</li></ul><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img1621686622168-cba72737-5119-42e2-b599-0a57143969e3.png" alt="image.png"></p><ul><li><p><code>cluster getkeysinslot &lt;slot&gt; &lt;count&gt;</code> ：返回 count 个 slot 槽中的键 （槽slot的值必须在当前节点范围内否则返回empty array）</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img1621686735935-bb17e993-27bd-4303-b693-2e7b51e44120.png" alt="image.png"></p></li></ul><h2 id="故障恢复"><a href="#故障恢复" class="headerlink" title="故障恢复"></a>故障恢复</h2><ul><li>某台主机(A)宕机后，它的从机(B)就会成为主机(C)，且再次启动宕机的主机(A)，该主机(A)会变成C的从机</li><li>如果某一段插槽的主从都挂掉，而cluster-require-full-coverage 为yes ，那么，整个集群都挂掉</li><li>如果某一段插槽的主从都挂掉，而cluster-require-full-coverage 为no ，那么，该插槽数据全都不能使用，也无法存储。</li><li>redis.conf中的参数  cluster-require-full-coverage</li></ul><h2 id="集群好处与不足"><a href="#集群好处与不足" class="headerlink" title="集群好处与不足"></a>集群好处与不足</h2><ul><li><p>好处</p><ul><li><p>实现扩容</p></li><li><p>分摊压力</p></li><li><p>无中心配置相对简单</p></li></ul></li><li><p>不足</p><ul><li><p>多键操作是不被支持的</p></li><li><p>多键的Redis事务是不被支持的。lua脚本不被支持</p></li><li><p>由于集群方案出现较晚，很多公司已经采用了其他的集群方案，而代理或者客户端分片的方案想要迁移至redis cluster，需要整体迁移而不是逐步过渡，复杂度较大</p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> -笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora破解安装教程</title>
      <link href="/2022/09/18/Typora%E7%A0%B4%E8%A7%A3%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
      <url>/2022/09/18/Typora%E7%A0%B4%E8%A7%A3%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Typora破解安装教程"><a href="#Typora破解安装教程" class="headerlink" title="Typora破解安装教程"></a>Typora破解安装教程</h1><p><strong>Typora是很优秀的markdown编辑器。但是现在收费了。</strong></p><p>下面将介绍，如何继续使用免费版的Typora；</p><h2 id="1、下载"><a href="#1、下载" class="headerlink" title="1、下载"></a>1、下载</h2><p><a href="https://link.zhihu.com/?target=https://pan.baidu.com/s/13LNgyIMOjm-mhctIsEiySw">https://pan.baidu.com/s/13LNgyIMOjm-mhctIsEiySw</a></p><p>提取码：1822</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301151848767.png" alt="image-20230114120305421"></p><p>下载之后一共三个文件</p><h2 id="2、安装Typora-exe文件"><a href="#2、安装Typora-exe文件" class="headerlink" title="2、安装Typora.exe文件"></a>2、安装Typora.exe文件</h2><h2 id="3、app-aser文件进行替换"><a href="#3、app-aser文件进行替换" class="headerlink" title="3、app.aser文件进行替换"></a>3、app.aser文件进行替换</h2><p>安装好后，可以看到安装目录&#x2F;resources下有一个app.aser文件，使用网盘下载的app.aser文件覆盖掉原先的文件</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301151848622.png" alt="image-20230114120914292"></p><h2 id="4、打开网盘下载的key-txt文件，复制其中随便一行激活码，打开Typora-app激活，输入你的邮箱和激活码就可以激活成功啦"><a href="#4、打开网盘下载的key-txt文件，复制其中随便一行激活码，打开Typora-app激活，输入你的邮箱和激活码就可以激活成功啦" class="headerlink" title="4、打开网盘下载的key.txt文件，复制其中随便一行激活码，打开Typora app激活，输入你的邮箱和激活码就可以激活成功啦"></a>4、打开网盘下载的key.txt文件，复制其中随便一行激活码，打开Typora app激活，输入你的邮箱和激活码就可以激活成功啦</h2><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301151848122.png" alt="image-20230114121258069"></p>]]></content>
      
      
      <categories>
          
          <category> -下载安装教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis应用问题（缓存穿透、缓存击穿、缓存雪崩和分布式锁）</title>
      <link href="/2022/09/18/Redis%E9%AB%98%E5%B9%B6%E5%8F%91%E5%9C%BA%E6%99%AF%E5%BA%94%E7%94%A8%E9%97%AE%E9%A2%98/"/>
      <url>/2022/09/18/Redis%E9%AB%98%E5%B9%B6%E5%8F%91%E5%9C%BA%E6%99%AF%E5%BA%94%E7%94%A8%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="Redis高并发场景应用问题"><a href="#Redis高并发场景应用问题" class="headerlink" title="Redis高并发场景应用问题"></a>Redis高并发场景应用问题</h1><h2 id="缓存穿透"><a href="#缓存穿透" class="headerlink" title="缓存穿透"></a>缓存穿透</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>key对应的数据在数据源并不存在，此时若有大量并发请求过来，每次针对此key的请求从缓存获取不到，请求都会压到数据源，从而可能压垮数据源。比如用一个不存在的用户id获取用户信息，不论缓存还是数据库都没有，若黑客利用此漏洞进行攻击可能压垮数据库。</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img1621733790830-d7ffc000-0f06-4e07-8149-08495a1fb8a9.png" alt="image.png"></p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>一个一定不存在缓存及查询不到的数据，由于缓存是不命中时被动写的，并且出于容错考虑，如果从存储层查不到数据则不写入缓存，这将导致这个不存在的数据每次请求都要到存储层去查询，失去了缓存的意义。</p><p>解决问题：</p><ul><li><strong>对空值缓存</strong>：如果一个查询返回的数据为空（不管是数据是否不存在），我们仍然把这个空结果（null）进行缓存，设置空结果的过期时间会很短，最长不超过五分钟</li><li><strong>设置可访问的名单</strong>（白名单）：使用bitmaps类型定义一个可以访问的名单，名单id作为bitmaps的偏移量，每次访问和bitmap里面的id进行比较，如果访问id不在bitmaps里面，进行拦截，不允许访问。</li><li><strong>采用布隆过滤器</strong>：(布隆过滤器（Bloom Filter）是1970年由布隆提出的。它实际上是一个很长的二进制向量(位图)和一系列随机映射函数（哈希函数）。布隆过滤器可以用于检索一个元素是否在一个集合中。它的优点是空间效率和查询时间都远远超过一般的算法，缺点是有一定的误识别率和删除困难。)将所有可能存在的数据哈希到一个足够大的bitmaps中，一个一定不存在的数据会被这个bitmaps拦截掉，从而避免了对底层存储系统的查询压力。</li><li><strong>进行实时监控</strong>：当发现Redis的命中率开始急速降低，需要排查访问对象和访问的数据，和运维人员配合，可以设置黑名单限制服务</li></ul><h2 id="缓存击穿"><a href="#缓存击穿" class="headerlink" title="缓存击穿"></a>缓存击穿</h2><h3 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a>问题描述</h3><p>key(某个)对应的数据存在，但在redis中过期，此时若有大量并发请求过来，这些请求发现缓存过期一般都会从后端DB加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把后端DB压垮。</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img1621734025111-91bbf46d-2bef-4429-b83d-8de010ebaadf.png" alt="image.png"></p><h3 id="解决方案-1"><a href="#解决方案-1" class="headerlink" title="解决方案"></a>解决方案</h3><p>key可能会在某些时间点被超高并发地访问，是一种非常“热点”的数据。这个时候，需要考虑一个问题：缓存被“击穿”的问题。</p><p>解决问题：</p><ul><li><p>预先设置热门数据：在redis高峰访问之前，把一些热门数据提前存入到redis里面，加大这些热门数据key的时长</p></li><li><p>实时调整：现场监控哪些数据热门，实时调整key的过期时长</p></li><li><p>使用锁：</p></li><li><ul><li>就是在缓存失效的时候（判断拿出来的值为空），不是立即去load db。</li><li>先使用缓存工具的某些带成功操作返回值的操作（比如Redis的SETNX）去set一个mutex key</li><li>当操作返回成功时，再进行load db的操作，并回设缓存,最后删除mutex key；当操作返回失败，证明有线程在load db，当前线程睡眠一段时间再重试整个get缓存的方法。</li></ul></li></ul><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img1621734045867-7a718986-99c5-4686-b4ee-b31d1e4ef69b.png" alt="image.png"></p><hr><h2 id="缓存雪崩"><a href="#缓存雪崩" class="headerlink" title="缓存雪崩"></a>缓存雪崩</h2><h3 id="问题描述-2"><a href="#问题描述-2" class="headerlink" title="问题描述"></a>问题描述</h3><p>大量的key对应的数据存在，但key在redis中过期，此时若有大量并发请求过来，这些请求发现缓存过期一般都会从后端DB加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把后端DB压垮。</p><p><code>PS.缓存雪崩与缓存击穿的区别在于缓存雪崩针对很多key缓存，缓存击穿则是某一个key</code></p><h3 id="解决方案-2"><a href="#解决方案-2" class="headerlink" title="解决方案"></a>解决方案</h3><p>缓存失效时的雪崩效应对底层系统的冲击非常可怕！</p><p>解决方案：</p><ul><li>构建多级缓存架构：nginx缓存 + redis缓存 +其他缓存（ehcache等）</li><li>使用锁或队列：用加锁或者队列的方式保证来保证不会有大量的线程对数据库一次性进行读写，从而避免失效时大量的并发请求落到底层存储系统上。不适用高并发情况</li><li>设置过期标志更新缓存：记录缓存数据是否过期（设置提前量），如果过期会触发通知另外的线程在后台去更新实际key的缓存。</li><li>将缓存失效时间分散开：比如我们可以在原有的失效时间基础上增加一个随机值，比如1-5分钟随机，这样每一个缓存的过期时间的重复率就会降低，就很难引发集体失效的事件。</li></ul><hr><h2 id="分布式锁"><a href="#分布式锁" class="headerlink" title="分布式锁"></a>分布式锁</h2><h3 id="问题描述-3"><a href="#问题描述-3" class="headerlink" title="问题描述"></a>问题描述</h3><p>随着业务发展的需要，原单体单机部署的系统被演化成分布式集群系统后，由于分布式系统多线程、多进程并且分布在不同机器上，这将使原单机部署情况下的并发控制锁策略失效，单纯的Java API并不能提供分布式锁的能力。为了解决这个问题就需要一种跨JVM的互斥机制来控制共享资源的访问，这就是分布式锁要解决的问题！</p><p>分布式锁主流的实现方案：</p><ol><li><ol><li><ol><li>基于数据库实现分布式锁</li><li>基于缓存（Redis等）</li><li>基于Zookeeper</li></ol></li></ol></li></ol><p>每一种分布式锁解决方案都有各自的优缺点：</p><ol><li><ol><li><ol><li>性能：redis最高</li><li>可靠性：zookeeper最高</li></ol></li></ol></li></ol><p>这里我们就基于redis实现分布式锁。</p><h3 id="解决方案-3"><a href="#解决方案-3" class="headerlink" title="解决方案"></a>解决方案</h3><p>redis命令（setnx）</p><ul><li><p>setnx加锁，del释放锁</p><blockquote><ul><li>加锁：<code>setnx user niubi</code></li><li>释放锁: <code>del user</code></li></ul><p><strong>问题</strong>：setnx刚好获取到锁，业务逻辑出现异常，导致锁无法释放</p><p><strong>解决</strong>：设置过期时间，自动释放锁。</p></blockquote></li><li><p>设置过期时间防止锁一直不被释放</p><blockquote><ul><li><p>加锁：<code>setnx user niubi</code></p></li><li><p>设置过期：<code>expire user 10</code></p></li></ul><p><strong>缺乏原子性</strong>：如果在setnx和expire之间出现异常，锁也无法释放</p></blockquote></li><li><p>同时设置锁和过期时间(推荐使用)</p><blockquote><ul><li><code>set user 10 nx ex 10</code></li></ul><p><strong>问题</strong>：可能会释放其他服务器的锁。</p><p><strong>场景</strong>：如果业务逻辑的执行时间是7s，锁过期时间为3s。执行流程如下</p><ol><li>index1业务逻辑没执行完，3秒后锁被自动释放。</li><li>index2获取到锁，执行业务逻辑，3秒后锁被自动释放。</li><li>index3获取到锁，执行业务逻辑</li><li>index1业务逻辑执行完成，开始调用del释放锁，这时释放的是index3的锁，导致index3的业务只执行    1s就被别人释放。</li><li>最终等于没锁的情况。</li></ol><p><strong>解决</strong>：setnx获取锁时，设置一个指定的唯一值（例如：uuid）；释放前获取这个值，判断是否自己的锁</p></blockquote></li><li><p>设置UUID防误删(即将key的值设置为唯一值)</p><blockquote><ul><li><code>set user UUID nx ex 10</code></li></ul><p><strong>问题</strong>：删除操作缺乏原子性。</p><p><strong>场景</strong>：</p><ol><li>index1执行删除时，查询到的lock值确实和uuid相等</li><li>index1执行删除前，lock刚好过期时间已到，被redis自动释放</li><li>index2获取了lock开始执行方法</li><li>index1执行删除，此时会把index2的lock删除  （同一个锁）</li></ol><p>index1 因为已经在方法中了，所以不需要重新上锁。index1有执行的权限。</p><p><strong>解决</strong>：LUA脚本保证删除的原子性</p></blockquote></li><li><p>set 命令参数详解</p><blockquote><p>EX second ：设置键的过期时间为 second 秒。 SET key value EX second 效果等同于 SETEX key second value </p><p>PX millisecond ：设置键的过期时间为 millisecond 毫秒。 SET key value PX millisecond 效果等同于PSETEX key millisecond value 。</p><p>NX ：只在键不存在时，才对键进行设置操作。 SET key value NX 效果等同于 SETNX key value 。</p><p>XX ：只在键已经存在时，才对键进行设置操作。</p></blockquote></li></ul><hr><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><ol><li>setnx加锁，del释放锁</li></ol><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img1621736779482-c68c8249-40e3-475e-86a7-ba049a9c4e45.png" alt="image.png"></p><pre class="line-numbers language-none"><code class="language-none">@GetMapping(&quot;testLock&quot;)public void testLock()&#123;    &#x2F;&#x2F;1获取锁，setnx--&gt;setIfAbsent    Boolean lock &#x3D; redisTemplate.opsForValue().setIfAbsent(&quot;lock&quot;, &quot;111&quot;);    &#x2F;&#x2F;2获取锁成功、查询num的值    if(lock)&#123;        Object value &#x3D; redisTemplate.opsForValue().get(&quot;num&quot;);        &#x2F;&#x2F;2.1判断num为空return        if(StringUtils.isEmpty(value))&#123;            return;        &#125;        &#x2F;&#x2F;2.2有值就转成成int        int num &#x3D; Integer.parseInt(value+&quot;&quot;);        &#x2F;&#x2F;2.3把redis的num加1        redisTemplate.opsForValue().set(&quot;num&quot;, ++num);        &#x2F;&#x2F;2.4释放锁，del        redisTemplate.delete(&quot;lock&quot;);    &#125;else&#123;        &#x2F;&#x2F;3获取锁失败、每隔0.1秒再获取        try &#123;            Thread.sleep(100);            testLock();        &#125; catch (InterruptedException e) &#123;            e.printStackTrace();        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><ol><li><p>多个客户端同时获取锁（setnx）</p></li><li><p>获取成功，执行业务逻辑{从db获取数据，放入缓存}，执行完成释放锁（del）</p></li><li><p>其他客户端等待重试</p></li></ol></blockquote><ol start="2"><li><p>同时设置锁和过期时间(推荐使用)</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img1621737077357-6f47c76e-8d16-4e46-b661-4845584cdf87.png" alt="image.png"></p></li></ol><pre class="line-numbers language-none"><code class="language-none">@GetMapping(&quot;testLock&quot;)public void testLock()&#123;    &#x2F;&#x2F;1获取锁，setnx--&gt;setIfAbsent    Boolean lock &#x3D; redisTemplate.opsForValue().setIfAbsent(&quot;lock&quot;, &quot;111&quot;, 10, TimeUnit.SECONDS);    &#x2F;&#x2F;2获取锁成功、查询num的值    if(lock)&#123;        Object value &#x3D; redisTemplate.opsForValue().get(&quot;num&quot;);        &#x2F;&#x2F;2.1判断num为空return        if(StringUtils.isEmpty(value))&#123;            return;        &#125;        &#x2F;&#x2F;2.2有值就转成成int        int num &#x3D; Integer.parseInt(value+&quot;&quot;);        &#x2F;&#x2F;2.3把redis的num加1        redisTemplate.opsForValue().set(&quot;num&quot;, ++num);        &#x2F;&#x2F;2.4释放锁，del，保证锁必须被释放        redisTemplate.delete(&quot;lock&quot;);  --&gt;当业务执行时间小与过期时间时需要释放锁    &#125;else&#123;        &#x2F;&#x2F;3获取锁失败、每隔0.1秒再获取        try &#123;            Thread.sleep(100);            testLock();        &#125; catch (InterruptedException e) &#123;            e.printStackTrace();        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>设置UUID防误删</li></ol><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img1621745985222-091ca300-14fa-4b32-bdba-f7a611075147.png" alt="image.png"></p><pre class="line-numbers language-none"><code class="language-none">@GetMapping(&quot;testLock&quot;)public void testLock()&#123;    &#x2F;&#x2F;1获取锁，setnx--&gt;setIfAbsent    String uuid &#x3D; UUID.randomUUID().toString();    Boolean lock &#x3D; redisTemplate.opsForValue().setIfAbsent(&quot;lock&quot;, uuid, 10, TimeUnit.SECONDS);    &#x2F;&#x2F;2获取锁成功、查询num的值    if(lock)&#123;        Object value &#x3D; redisTemplate.opsForValue().get(&quot;num&quot;);        &#x2F;&#x2F;2.1判断num为空return        if(StringUtils.isEmpty(value))&#123;            return;        &#125;        &#x2F;&#x2F;2.2有值就转成成int        int num &#x3D; Integer.parseInt(value+&quot;&quot;);        &#x2F;&#x2F;2.3把redis的num加1        redisTemplate.opsForValue().set(&quot;num&quot;, ++num);        &#x2F;&#x2F;2.4释放锁，del，保证锁必须被释放--&gt;当业务执行时间小与过期时间时需要释放锁        if(uuid.equals((String)redisTemplate.opsForValue().get(&quot;lock&quot;)))&#123;             redisTemplate.delete(&quot;lock&quot;); --&gt;删除自己的锁        &#125;    &#125;else&#123;        &#x2F;&#x2F;3获取锁失败、每隔0.1秒再获取        try &#123;            Thread.sleep(100);            testLock();        &#125; catch (InterruptedException e) &#123;            e.printStackTrace();        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li>LUA脚本保证删除的原子性</li></ol><pre class="line-numbers language-none"><code class="language-none">@GetMapping(&quot;testLockLua&quot;)public void testLockLua() &#123;    &#x2F;&#x2F;1 声明一个uuid ,将做为一个value 放入我们的key所对应的值中    String uuid &#x3D; UUID.randomUUID().toString();    &#x2F;&#x2F;2 定义一个锁：lua 脚本可以使用同一把锁，来实现删除！    String skuId &#x3D; &quot;25&quot;; &#x2F;&#x2F; 访问skuId 为25号的商品 100008348542    String locKey &#x3D; &quot;lock:&quot; + skuId; &#x2F;&#x2F; 锁住的是每个商品的数据    &#x2F;&#x2F; 3 获取锁    Boolean lock &#x3D; redisTemplate.opsForValue().setIfAbsent(locKey, uuid, 3, TimeUnit.SECONDS);    &#x2F;&#x2F; 第一种： lock 与过期时间中间不写任何的代码。    &#x2F;&#x2F; redisTemplate.expire(&quot;lock&quot;,10, TimeUnit.SECONDS);&#x2F;&#x2F;设置过期时间    &#x2F;&#x2F; 如果true    if (lock) &#123;        &#x2F;&#x2F; 执行的业务逻辑开始        &#x2F;&#x2F; 获取缓存中的num 数据        Object value &#x3D; redisTemplate.opsForValue().get(&quot;num&quot;);        &#x2F;&#x2F; 如果是空直接返回        if (StringUtils.isEmpty(value)) &#123;            return;        &#125;        &#x2F;&#x2F; 不是空 如果说在这出现了异常！ 那么delete 就删除失败！ 也就是说锁永远存在！        int num &#x3D; Integer.parseInt(value + &quot;&quot;);        &#x2F;&#x2F; 使num 每次+1 放入缓存        redisTemplate.opsForValue().set(&quot;num&quot;, String.valueOf(++num));        &#x2F;*使用lua脚本解锁*&#x2F;        &#x2F;&#x2F; 定义lua 脚本        String script &#x3D; &quot;if redis.call(&#39;get&#39;, KEYS[1]) &#x3D;&#x3D; ARGV[1] then return redis.call(&#39;del&#39;, KEYS[1]) else return 0 end&quot;;        &#x2F;&#x2F; 使用redis执行lua执行        DefaultRedisScript&lt;Long&gt; redisScript &#x3D; new DefaultRedisScript&lt;&gt;();        redisScript.setScriptText(script);        &#x2F;&#x2F; 设置一下返回值类型 为Long        &#x2F;&#x2F; 因为删除判断的时候，返回的0,给其封装为数据类型。如果不封装那么默认返回String 类型，        &#x2F;&#x2F; 那么返回字符串与0 会有发生错误。        redisScript.setResultType(Long.class);        &#x2F;&#x2F; 第一个要是script 脚本 ，第二个需要判断的key，第三个就是key所对应的值。        redisTemplate.execute(redisScript, Arrays.asList(locKey), uuid);    &#125; else &#123;        &#x2F;&#x2F; 其他线程等待        try &#123;            &#x2F;&#x2F; 睡眠            Thread.sleep(1000);            &#x2F;&#x2F; 睡醒了之后，调用方法。            testLockLua();        &#125; catch (InterruptedException e) &#123;            e.printStackTrace();        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol><li>加锁</li></ol><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; 1. 从redis中获取锁,set k1 v1 px 20000 nxString uuid &#x3D; UUID.randomUUID().toString();Boolean lock &#x3D; this.redisTemplate.opsForValue().setIfAbsent(&quot;lock&quot;, uuid, 2, TimeUnit.SECONDS);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="2"><li>解锁</li></ol><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; 2. 释放锁 delString script &#x3D; &quot;if redis.call(&#39;get&#39;, KEYS[1]) &#x3D;&#x3D; ARGV[1] then return redis.call(&#39;del&#39;, KEYS[1]) else return 0 end&quot;;&#x2F;&#x2F; 设置lua脚本返回的数据类型DefaultRedisScript&lt;Long&gt; redisScript &#x3D; new DefaultRedisScript&lt;&gt;();&#x2F;&#x2F; 设置lua脚本返回类型为LongredisScript.setResultType(Long.class);redisScript.setScriptText(script);redisTemplate.execute(redisScript, Arrays.asList(&quot;lock&quot;),uuid);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>重试</li></ol><pre class="line-numbers language-none"><code class="language-none">Thread.sleep(500);testLock();<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>为了确保分布式锁可用，我们至少要确保锁的实现同时满足以下四个条件：</p><ul><li>互斥性。在任意时刻，只有一个客户端能持有锁。</li><li>不会发生死锁。即使有一个客户端在持有锁的期间崩溃而没有主动解锁，也能保证后续其他客户端能加锁。</li><li>解铃还须系铃人。加锁和解锁必须是同一个客户端，客户端自己不能把别人加的锁给解了。</li><li>加锁和解锁必须具有原子性。</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> -笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven下载及安装教程</title>
      <link href="/2022/09/18/maven%E4%B8%8B%E8%BD%BD%E5%8F%8A%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
      <url>/2022/09/18/maven%E4%B8%8B%E8%BD%BD%E5%8F%8A%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h1><h2 id="一-Maven的下载"><a href="#一-Maven的下载" class="headerlink" title="一 Maven的下载"></a>一 Maven的下载</h2><h3 id="1-选择官网：Apache-Maven"><a href="#1-选择官网：Apache-Maven" class="headerlink" title="1.选择官网：Apache Maven"></a>1.选择官网：<a href="https://maven.apache.org/">Apache Maven</a></h3><p><img src="https://img-blog.csdnimg.cn/20200605104839479.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhaXN5NzRSSg==,size_16,color_FFFFFF,t_70" alt="img"></p><h3 id="2-找到download-——-Files-——-Binary-zip-archive-（Link）下载"><a href="#2-找到download-——-Files-——-Binary-zip-archive-（Link）下载" class="headerlink" title="2.找到download  —— Files —— Binary zip archive （Link）下载"></a>2.找到download  —— Files —— Binary zip archive （Link）下载</h3><p><img src="https://img-blog.csdnimg.cn/2020060510501510.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhaXN5NzRSSg==,size_16,color_FFFFFF,t_70" alt="img"></p><h3 id="3-下载完成后放到自己的文件目录下进行直接解压"><a href="#3-下载完成后放到自己的文件目录下进行直接解压" class="headerlink" title="3.下载完成后放到自己的文件目录下进行直接解压"></a>3.下载完成后放到自己的文件目录下进行直接解压</h3><h2 id="二-配置环境变量"><a href="#二-配置环境变量" class="headerlink" title="二 配置环境变量"></a>二 配置环境变量</h2><h3 id="1-进入高级系统设置"><a href="#1-进入高级系统设置" class="headerlink" title="1.进入高级系统设置"></a>1.进入高级系统设置</h3><p>方法1：选择桌面电脑鼠标右击此电脑，点击 属性 进入系统信息界面</p><p>方法2：通过 控制面板，选择 系统和安全，再选择 系统</p><p>在系统信息界面左侧点击 高级系统设置</p><p><img src="https://img-blog.csdnimg.cn/20200220134840797.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhaXN5NzRSSg==,size_16,color_FFFFFF,t_70" alt="img"></p><h3 id="2-在高级系统设置界面，点击-环境变量"><a href="#2-在高级系统设置界面，点击-环境变量" class="headerlink" title="2.在高级系统设置界面，点击 环境变量"></a>2.在高级系统设置界面，点击 环境变量</h3><p><img src="https://img-blog.csdnimg.cn/20200220134950312.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhaXN5NzRSSg==,size_16,color_FFFFFF,t_70" alt="img"></p><h3 id="3-在-环境变量-的-系统变量-设置两项属性，MAVEN-HOME，Path。若存在则在此基础上编辑，不存在则新建"><a href="#3-在-环境变量-的-系统变量-设置两项属性，MAVEN-HOME，Path。若存在则在此基础上编辑，不存在则新建" class="headerlink" title="3.在 环境变量 的 系统变量 设置两项属性，MAVEN_HOME，Path。若存在则在此基础上编辑，不存在则新建"></a>3.在 环境变量 的 系统变量 设置两项属性，<code>MAVEN_HOME</code>，<code>Path</code>。若存在则在此基础上编辑，不存在则新建</h3><p><img src="https://img-blog.csdnimg.cn/20200220135152506.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhaXN5NzRSSg==,size_16,color_FFFFFF,t_70" alt="img"></p><h3 id="4-新建-MAVEN-HOME变量，变量值为MAVEN的安装目录"><a href="#4-新建-MAVEN-HOME变量，变量值为MAVEN的安装目录" class="headerlink" title="4.新建 MAVEN_HOME变量，变量值为MAVEN的安装目录"></a>4.新建 MAVEN_HOME变量，变量值为MAVEN的安装目录</h3><p><img src="https://img-blog.csdnimg.cn/20200605105812447.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhaXN5NzRSSg==,size_16,color_FFFFFF,t_70" alt="img"></p><h3 id="5-编辑-Path-系统变量，新建值-MAVEN-HOME-bin"><a href="#5-编辑-Path-系统变量，新建值-MAVEN-HOME-bin" class="headerlink" title="5.编辑 Path 系统变量，新建值 %MAVEN_HOME%\bin"></a>5.编辑 Path 系统变量，新建值 <code>%MAVEN_HOME%\bin</code></h3><p><img src="https://img-blog.csdnimg.cn/20200605105902250.png" alt="img"></p><h2 id="三、验证是否成功"><a href="#三、验证是否成功" class="headerlink" title="三、验证是否成功"></a>三、验证是否成功</h2><p>按住win + r键，在弹出的运行窗口输入cmd，点击确认，输入<code>mvn -v</code>（或 mvn -version），出现如图所示即成功</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301151850241.png" alt="image-20230114143729759"></p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301151850735.png" alt="image-20230114143756097"></p><h2 id="四、配置本地仓库"><a href="#四、配置本地仓库" class="headerlink" title="四、配置本地仓库"></a>四、配置本地仓库</h2><h3 id="1-在刚才的maven的同级目录下新建一个Workspace文件，在该文件目录下新建Repository文件夹，该目录用作maven的本地库"><a href="#1-在刚才的maven的同级目录下新建一个Workspace文件，在该文件目录下新建Repository文件夹，该目录用作maven的本地库" class="headerlink" title="1.在刚才的maven的同级目录下新建一个Workspace文件，在该文件目录下新建Repository文件夹，该目录用作maven的本地库"></a>1.在刚才的maven的同级目录下新建一个Workspace文件，在该文件目录下新建Repository文件夹，该目录用作maven的本地库</h3><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301151850625.png" alt="image-20230114144110169"></p><h3 id="2-在maven目录下的conf中找到settings-xml，用记事本打开文件，输入以下代码："><a href="#2-在maven目录下的conf中找到settings-xml，用记事本打开文件，输入以下代码：" class="headerlink" title="2.在maven目录下的conf中找到settings.xml，用记事本打开文件，输入以下代码："></a>2.在maven目录下的conf中找到settings.xml，用记事本打开文件，输入以下代码：</h3><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!-- 下面是自己设置的本地仓库位置--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>localRepository</span><span class="token punctuation">></span></span>Repository文件位置目录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>localRepository</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-由于外网下载jar包速度慢，所以配置阿里云镜像"><a href="#3-由于外网下载jar包速度慢，所以配置阿里云镜像" class="headerlink" title="3.由于外网下载jar包速度慢，所以配置阿里云镜像"></a>3.由于外网下载jar包速度慢，所以配置阿里云镜像</h3><p>在maven目录下的conf中找到settings.xml，用记事本打开文件，在<mirrors></mirrors>标签之间添加输入以下代码：</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!-- 设置阿里云镜像--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>alimaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">></span></span>central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>aliyun maven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://maven.aliyun.com/nexus/content/repositories/central/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200605144756985.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhaXN5NzRSSg==,size_16,color_FFFFFF,t_70" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> -下载安装教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目部署demo</title>
      <link href="/2022/09/18/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/"/>
      <url>/2022/09/18/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="项目部署"><a href="#项目部署" class="headerlink" title="项目部署"></a>项目部署</h1><h2 id="一、JENKINS（手动打包）"><a href="#一、JENKINS（手动打包）" class="headerlink" title="一、JENKINS（手动打包）"></a>一、JENKINS（手动打包）</h2><h3 id="1、创建普通SPRINGBOOT工程"><a href="#1、创建普通SPRINGBOOT工程" class="headerlink" title="1、创建普通SPRINGBOOT工程"></a>1、创建普通SPRINGBOOT工程</h3><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img00d5af84edb43316aa58856970a5eaed.png" alt="在这里插入图片描述"></p><h3 id="2、把工程进行打包，运行"><a href="#2、把工程进行打包，运行" class="headerlink" title="2、把工程进行打包，运行"></a>2、把工程进行打包，运行</h3><p>（1）把项目打包，因为SpringBoot工程，通过main方法执行，打包变成jar包形式，使用maven进行打包操作</p><ul><li>前提条件：安装好maven，配置环境变量</li><li>进入到项目目录中，使用maven命令： mvn clean package</li></ul><p>（2）打包完成之后，在项目target目录中找到jar包</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img9e221f67eec9b413c3b0ec98100447c9.png" alt="在这里插入图片描述"><br>（3）把打成jar包运行</p><ul><li>进入jar包所在目录，使用命令运行： java –jar jar包名称<br><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img41fe6883762999d83b925f4c5ab829d9.png" alt="在这里插入图片描述"></li></ul><h2 id="二、JENKINS的安装（自动打包）"><a href="#二、JENKINS的安装（自动打包）" class="headerlink" title="二、JENKINS的安装（自动打包）"></a>二、JENKINS的安装（自动打包）</h2><h3 id="1-准备代码，提交到码云Git库"><a href="#1-准备代码，提交到码云Git库" class="headerlink" title="1. 准备代码，提交到码云Git库"></a>1. 准备代码，提交到码云Git库</h3><p>代码中需要包含以下几部分内容：</p><h4 id="（1）代码中需要包含Dockerfile文件"><a href="#（1）代码中需要包含Dockerfile文件" class="headerlink" title="（1）代码中需要包含Dockerfile文件"></a>（1）代码中需要包含Dockerfile文件</h4><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img876a9e97eb427f398569b90608399477.png" alt=" "></p><p><strong>文件内容</strong>：</p><pre class="line-numbers language-none"><code class="language-none">FROM openjdk:8-jdk-alpineVOLUME &#x2F;tmpCOPY .&#x2F;target&#x2F;demojenkins.jar demojenkins.jar【以后只需要修改这里的目录 和对象即可】ENTRYPOINT [&quot;java&quot;,&quot;-jar&quot;,&quot;&#x2F;demojenkins.jar&quot;, &quot;&amp;&quot;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="（2）在项目pom文件中指定打包类型，包含build部分内容"><a href="#（2）在项目pom文件中指定打包类型，包含build部分内容" class="headerlink" title="（2）在项目pom文件中指定打包类型，包含build部分内容"></a><strong>（2）在项目pom文件中指定打包类型，包含build部分内容</strong></h4><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgdde55806d40a0062d42b05b85dd49898.png" alt="image-20210311141706882"></p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img997afd0f53f4439fe78183089f740319-16656680918834.png" alt="image-20210311141711006"></p><h3 id="2、安装JAVA-运行环境"><a href="#2、安装JAVA-运行环境" class="headerlink" title="2、安装JAVA 运行环境"></a>2、安装JAVA 运行环境</h3><h4 id="第一步：上传或下载安装包"><a href="#第一步：上传或下载安装包" class="headerlink" title="第一步：上传或下载安装包"></a>第一步：上传或下载安装包</h4><pre class="line-numbers language-none"><code class="language-none">cd&#x2F;usr&#x2F;localjdk-8u121-linux-x64.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="第二步：解压安装包"><a href="#第二步：解压安装包" class="headerlink" title="第二步：解压安装包"></a>第二步：解压安装包</h4><pre class="line-numbers language-none"><code class="language-none">tar -zxvf jdk-8u121-linux-x64.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="第三步：建立软连接"><a href="#第三步：建立软连接" class="headerlink" title="第三步：建立软连接"></a>第三步：建立软连接</h4><pre class="line-numbers language-none"><code class="language-none">ln -s &#x2F;usr&#x2F;local&#x2F;jdk1.8.0_121&#x2F; &#x2F;usr&#x2F;local&#x2F;jdk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="第四步：修改环境变量"><a href="#第四步：修改环境变量" class="headerlink" title="第四步：修改环境变量"></a>第四步：修改环境变量</h4><pre class="line-numbers language-none"><code class="language-none">vim &#x2F;etc&#x2F;profileexport JAVA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;jdkexport JRE_HOME&#x3D;$JAVA_HOME&#x2F;jreexport CLASSPATH&#x3D;.:$CLASSPATH:$JAVA_HOME&#x2F;lib:$JRE_HOME&#x2F;libexport PATH&#x3D;$PATH:$JAVA_HOME&#x2F;bin:$JRE_HOME&#x2F;bin# 通过命令source &#x2F;etc&#x2F;profile让profile文件立即生效source &#x2F;etc&#x2F;profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第五步、测试是否安装成功"><a href="#第五步、测试是否安装成功" class="headerlink" title="第五步、测试是否安装成功"></a>第五步、测试是否安装成功</h4><p>使用<code>java -version</code>，出现版本则安装成功</p><h3 id="3、安装maven"><a href="#3、安装maven" class="headerlink" title="3、安装maven"></a>3、安装maven</h3><h4 id="第一步：上传或下载安装包-1"><a href="#第一步：上传或下载安装包-1" class="headerlink" title="第一步：上传或下载安装包"></a>第一步：上传或下载安装包</h4><pre class="line-numbers language-none"><code class="language-none">cd &#x2F;usr&#x2F;localapache-maven-3.6.1-bin.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="第二步：解压安装包-1"><a href="#第二步：解压安装包-1" class="headerlink" title="第二步：解压安装包"></a>第二步：解压安装包</h4><pre class="line-numbers language-none"><code class="language-none">tar -zxvf apache-maven-3.6.1-bin.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="第三步：建立软连接-1"><a href="#第三步：建立软连接-1" class="headerlink" title="第三步：建立软连接"></a>第三步：建立软连接</h4><pre class="line-numbers language-none"><code class="language-none">ln -s &#x2F;usr&#x2F;local&#x2F;apache-maven-3.6.1&#x2F; &#x2F;usr&#x2F;local&#x2F;maven<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="第四步：修改环境变量-1"><a href="#第四步：修改环境变量-1" class="headerlink" title="第四步：修改环境变量"></a>第四步：修改环境变量</h4><pre class="line-numbers language-none"><code class="language-none">vim &#x2F;etc&#x2F;profileexport MAVEN_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;mavenexport PATH&#x3D;$PATH:$MAVEN_HOME&#x2F;bin# 通过命令source &#x2F;etc&#x2F;profile让profile文件立即生效source &#x2F;etc&#x2F;profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第五步：测试是否安装成功"><a href="#第五步：测试是否安装成功" class="headerlink" title="第五步：测试是否安装成功"></a>第五步：测试是否安装成功</h4><pre class="line-numbers language-none"><code class="language-none">mvn –v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4、安装git"><a href="#4、安装git" class="headerlink" title="4、安装git"></a>4、安装git</h3><pre class="line-numbers language-none"><code class="language-none">yum -y install git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5、安装docker"><a href="#5、安装docker" class="headerlink" title="5、安装docker"></a>5、安装docker</h3><h4 id="第一步：安装必要的一些系统工具"><a href="#第一步：安装必要的一些系统工具" class="headerlink" title="第一步：安装必要的一些系统工具"></a>第一步：安装必要的一些系统工具</h4><pre class="line-numbers language-none"><code class="language-none">yum install -y yum-utils device-mapper-persistent-data lvm2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="第二步：添加软件源信息"><a href="#第二步：添加软件源信息" class="headerlink" title="第二步：添加软件源信息"></a>第二步：添加软件源信息</h4><pre class="line-numbers language-none"><code class="language-none">yum-config-manager --add-repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="第三步：更新并安装Docker-CE"><a href="#第三步：更新并安装Docker-CE" class="headerlink" title="第三步：更新并安装Docker-CE"></a>第三步：更新并安装Docker-CE</h4><pre class="line-numbers language-none"><code class="language-none">yum makecache fastyum -y install docker-ce<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="第四步：开启Docker服务"><a href="#第四步：开启Docker服务" class="headerlink" title="第四步：开启Docker服务"></a>第四步：开启Docker服务</h4><pre class="line-numbers language-none"><code class="language-none">service docker start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="第五步、测试是否安装成功-1"><a href="#第五步、测试是否安装成功-1" class="headerlink" title="第五步、测试是否安装成功"></a>第五步、测试是否安装成功</h4><pre class="line-numbers language-none"><code class="language-none">docker -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="6、安装Jenkins"><a href="#6、安装Jenkins" class="headerlink" title="6、安装Jenkins"></a>6、安装Jenkins</h3><h4 id="第一步：上传或下载安装包-2"><a href="#第一步：上传或下载安装包-2" class="headerlink" title="第一步：上传或下载安装包"></a>第一步：上传或下载安装包</h4><pre class="line-numbers language-none"><code class="language-none">cd &#x2F;usr&#x2F;local&#x2F;jenkinsjenkins.war<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="第二步：启动"><a href="#第二步：启动" class="headerlink" title="第二步：启动"></a>第二步：启动</h4><pre class="line-numbers language-none"><code class="language-none">nohup java -jar &#x2F;usr&#x2F;local&#x2F;jenkins&#x2F;jenkins.war &gt;&#x2F;usr&#x2F;local&#x2F;jenkins&#x2F;jenkins.out &amp;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img6aff446b9796998f6f4f9506dd8bff5c.png" alt="img"></p><h4 id="第三步：访问"><a href="#第三步：访问" class="headerlink" title="第三步：访问"></a>第三步：访问</h4><p>系统ip:8080</p><h3 id="7、初始化-Jenkins-插件和管理员用户"><a href="#7、初始化-Jenkins-插件和管理员用户" class="headerlink" title="7、初始化 Jenkins 插件和管理员用户"></a><strong>7、初始化 Jenkins 插件和管理员用户</strong></h3><h4 id="访问jenkins"><a href="#访问jenkins" class="headerlink" title="访问jenkins"></a>访问jenkins</h4><ul><li>使用当前linux系统ip地址:8080端口号  系统ip:8080</li><li>首先进入初始化界面，需要多等一会，之后进入到下面界面<br><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img2a4fb7b20748f35b84af7672dbda294c.png" alt="在这里插入图片描述"></li></ul><h4 id="解锁操作"><a href="#解锁操作" class="headerlink" title="解锁操作"></a>解锁操作</h4><ul><li>找到管理员密码进行输入<br><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img11e3c8d8648871cbba71853b7f724da9-16657151520224.png" alt="在这里插入图片描述"></li><li>查看提示文件内容，复制默认密码到输入框里面<br><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img7b585eb549ef4a1e28293dc13f090431.png" alt="在这里插入图片描述"></li><li>输入正确密码，点击继续。<br><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imga67df3a5f4e088dfaba5c74ede14dd09.png" alt="在这里插入图片描述"><br><code>注意：进入安装插件页面，不要往下进行了，下载插件会很慢，配置国内镜像，为了提高下载速度，关掉浏览器，去配置镜像</code></li></ul><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img3794ffcc207c02d35aa58b09bb002c63.png" alt="在这里插入图片描述"></p><h4 id="配置国内镜像"><a href="#配置国内镜像" class="headerlink" title="配置国内镜像"></a>配置国内镜像</h4><p><code>cd /root/.jenkins/updates #</code>进入更新配置位置</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sed</span> -i <span class="token string">'s/http:\/\/updates.jenkins-ci.org\/download/https:\/\/mirrors.tuna.tsinghua.edu.cn\/jenkins/g'</span> default.json <span class="token operator">&amp;&amp;</span> <span class="token function">sed</span> -i <span class="token string">'s/http:\/\/www.google.com/https:\/\/www.baidu.com/g'</span> default.json<span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imge61513723f35e30e2415ac165a65a218.png" alt="在这里插入图片描述"></p><h4 id="重启jenkins，运行管理界面，安装插件"><a href="#重启jenkins，运行管理界面，安装插件" class="headerlink" title="重启jenkins，运行管理界面，安装插件"></a>重启jenkins，运行管理界面，安装插件</h4><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img372851b0e4e611a3e5737f0db5a67618.png" alt="在这里插入图片描述"><br><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgf332e8e19b939198eaa817d7b238031b.png" alt="在这里插入图片描述"></p><h4 id="安装插件之后，插件管理员用户名和密码"><a href="#安装插件之后，插件管理员用户名和密码" class="headerlink" title="安装插件之后，插件管理员用户名和密码"></a>安装插件之后，插件管理员用户名和密码</h4><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img6a150c91f2699202321be5631126c355.png" alt="在这里插入图片描述"></p><h4 id="实例配置"><a href="#实例配置" class="headerlink" title="实例配置"></a>实例配置</h4><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img0918b5697b423112e6b95bc9d9e151e2.png" alt="在这里插入图片描述"></p><h4 id="安装完成"><a href="#安装完成" class="headerlink" title="安装完成"></a>安装完成</h4><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img768a85b219fcdac4e8ef735fa91c62bd.png" alt="在这里插入图片描述"></p><h3 id="8、JENKINS配置"><a href="#8、JENKINS配置" class="headerlink" title="8、JENKINS配置"></a>8、JENKINS配置</h3><h4 id="1、配置自动化部署需要环境"><a href="#1、配置自动化部署需要环境" class="headerlink" title="1、配置自动化部署需要环境"></a>1、配置自动化部署需要环境</h4><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imga8aa3be28ab1c7ab57725fbd9cecabb9.png" alt="在这里插入图片描述"><br><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img573b100934462bd68c81724e70acbab0.png" alt="在这里插入图片描述"></p><h4 id="2、配置JDK环境"><a href="#2、配置JDK环境" class="headerlink" title="2、配置JDK环境"></a>2、配置JDK环境</h4><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgefa63a887ed94bdfb62de5d2b28b986e.png" alt="在这里插入图片描述"></p><h4 id="3、配置MAVEN环境"><a href="#3、配置MAVEN环境" class="headerlink" title="3、配置MAVEN环境"></a>3、配置MAVEN环境</h4><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img85b26f7691860e15aac39be80329b6af.png" alt="在这里插入图片描述"></p><h4 id="4、配置GIT环境"><a href="#4、配置GIT环境" class="headerlink" title="4、配置GIT环境"></a>4、配置GIT环境</h4><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img7b48eef8149001b80292d9ba941adbd1.png" alt="在这里插入图片描述"></p><h3 id="9、JENKINS自动化过程"><a href="#9、JENKINS自动化过程" class="headerlink" title="9、JENKINS自动化过程"></a>9、JENKINS自动化过程</h3><h4 id="1、准备工作"><a href="#1、准备工作" class="headerlink" title="1、准备工作"></a>1、准备工作</h4><p>（1）需要项目工程，需要做修改<br>第一：项目需要Dockerfile文件<br><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imge44eefc47d625df75249a0a8974153ee.png" alt="在这里插入图片描述"><br>文件内容：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">FROM openjdk<span class="token operator">:</span><span class="token number">8</span><span class="token operator">-</span>jdk<span class="token operator">-</span>alpineVOLUME <span class="token operator">/</span>tmpCOPY <span class="token punctuation">.</span>/target<span class="token operator">/</span>demojenkins<span class="token punctuation">.</span>jar demojenkins<span class="token punctuation">.</span>jarENTRYPOINT <span class="token punctuation">[</span><span class="token string">"java"</span><span class="token punctuation">,</span><span class="token string">"-jar"</span><span class="token punctuation">,</span><span class="token string">"/demojenkins.jar"</span><span class="token punctuation">,</span> <span class="token string">"&amp;"</span><span class="token punctuation">]</span><span class="token number">1234</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二：在项目pom文件添加打包类型 和 maven插件</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgf5865afd43e5664ff03994d3f6864379.png" alt="在这里插入图片描述"></p><h4 id="2、在JENKINS管理界面创建自动化任务"><a href="#2、在JENKINS管理界面创建自动化任务" class="headerlink" title="2、在JENKINS管理界面创建自动化任务"></a>2、在JENKINS管理界面创建自动化任务</h4><p>（1）</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img0a82de3b4e14958fb996f96ecbf6e835.png" alt="在这里插入图片描述"><br>（2）<br><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgfed920f80f06f22a9c89b1d31ad0e9be.png" alt="在这里插入图片描述"><br>（3）把代码提交码云Git仓库里面</p><p>此时不会的可以查看<a href="https://blog.csdn.net/weixin_45606067/article/details/109536927">https://blog.csdn.net/weixin_45606067/article/details/109536927</a></p><p>（4）在作业创建页面指定代码位置<br><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img7eecb26204fe779b342677f09afeee5e.png" alt="在这里插入图片描述"><br>添加git用户，git的用户名与密码<br><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img2f88e0645d1df805ec7659683fa38453.png" alt="在这里插入图片描述"><br>选择添加的用户，上面的红色提示信息消失，说明连接成功。</p><p>（5）</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img7e2123d7d88f1a1db6e0419fa504b554.png" alt="在这里插入图片描述"><br>（6）修改脚本路径，进行复制</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img5b556b7eb1b2acd6b9e5f8aa39ced7f0.png" alt="在这里插入图片描述"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token comment">#maven打包</span>mvn clean package<span class="token builtin class-name">echo</span> <span class="token string">'package ok!'</span><span class="token builtin class-name">echo</span> <span class="token string">'build start!'</span><span class="token builtin class-name">cd</span> ./infrastructure/eureka_server<span class="token assign-left variable">service_name</span><span class="token operator">=</span><span class="token string">"eureka-server"</span><span class="token assign-left variable">service_prot</span><span class="token operator">=</span><span class="token number">8761</span><span class="token comment">#查看镜像id</span><span class="token assign-left variable">IID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> images <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"<span class="token variable">$service_name</span>"</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $3&#125;'</span><span class="token variable">)</span></span><span class="token builtin class-name">echo</span> <span class="token string">"IID <span class="token variable">$IID</span>"</span><span class="token keyword">if</span> <span class="token punctuation">[</span> -n <span class="token string">"<span class="token variable">$IID</span>"</span> <span class="token punctuation">]</span><span class="token keyword">then</span>    <span class="token builtin class-name">echo</span> <span class="token string">"exist <span class="token variable">$SERVER_NAME</span> image,IID=<span class="token variable">$IID</span>"</span>    <span class="token comment">#删除镜像</span>    <span class="token function">docker</span> rmi -f <span class="token variable">$service_name</span>    <span class="token builtin class-name">echo</span> <span class="token string">"delete <span class="token variable">$SERVER_NAME</span> image"</span>    <span class="token comment">#构建</span>    <span class="token function">docker</span> build -t <span class="token variable">$service_name</span> <span class="token builtin class-name">.</span>    <span class="token builtin class-name">echo</span> <span class="token string">"build <span class="token variable">$SERVER_NAME</span> image"</span><span class="token keyword">else</span>    <span class="token builtin class-name">echo</span> <span class="token string">"no exist <span class="token variable">$SERVER_NAME</span> image,build docker"</span>    <span class="token comment">#构建</span>    <span class="token function">docker</span> build -t <span class="token variable">$service_name</span> <span class="token builtin class-name">.</span>    <span class="token builtin class-name">echo</span> <span class="token string">"build <span class="token variable">$SERVER_NAME</span> image"</span><span class="token keyword">fi</span><span class="token comment">#查看容器id</span><span class="token assign-left variable">CID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> <span class="token function">ps</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"<span class="token variable">$SERVER_NAME</span>"</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $1&#125;'</span><span class="token variable">)</span></span><span class="token builtin class-name">echo</span> <span class="token string">"CID <span class="token variable">$CID</span>"</span><span class="token keyword">if</span> <span class="token punctuation">[</span> -n <span class="token string">"<span class="token variable">$CID</span>"</span> <span class="token punctuation">]</span><span class="token keyword">then</span>    <span class="token builtin class-name">echo</span> <span class="token string">"exist <span class="token variable">$SERVER_NAME</span> container,CID=<span class="token variable">$CID</span>"</span>    <span class="token comment">#停止</span>    <span class="token function">docker</span> stop <span class="token variable">$service_name</span>    <span class="token comment">#删除容器</span>    <span class="token function">docker</span> <span class="token function">rm</span> <span class="token variable">$service_name</span><span class="token keyword">else</span>    <span class="token builtin class-name">echo</span> <span class="token string">"no exist <span class="token variable">$SERVER_NAME</span> container"</span><span class="token keyword">fi</span><span class="token comment">#启动</span><span class="token function">docker</span> run -d --name <span class="token variable">$service_name</span> --net<span class="token operator">=</span>host -p <span class="token variable">$service_prot</span><span class="token builtin class-name">:</span><span class="token variable">$service_prot</span> <span class="token variable">$service_name</span><span class="token comment">#查看启动日志</span><span class="token function">docker</span> logs -f  <span class="token variable">$service_name</span><span class="token number">12345678910111213141516171819202122232425262728293031323334353637383940414243</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>保存上面的构建作业<br><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img7c73b79604241957d328eeaa9553059d.png" alt="在这里插入图片描述"></li></ul><p>构建结构说明：</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img0224fd6c9558d9cfc751db2ec2cfef4d.png" alt="在这里插入图片描述"></p><p>（7）执行作业（任务）</p><ul><li>需要docker启动起来<br>service docker start</li></ul><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img8a7b0c9431901d1fd8bf45b689da333a.png" alt="在这里插入图片描述"></p><p>（8）看到控制台日志输出</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img9e2070ea70bbdc08e4f81d6ff2239aed.png" alt="在这里插入图片描述"><br>成功后的效果</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img22ed5d16350681441ec73260aecc3097.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> -教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Typora+阿里云OSS图床搭建</title>
      <link href="/2022/04/15/%E4%BD%BF%E7%94%A8Typora+%E9%98%BF%E9%87%8C%E4%BA%91OSS%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/"/>
      <url>/2022/04/15/%E4%BD%BF%E7%94%A8Typora+%E9%98%BF%E9%87%8C%E4%BA%91OSS%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前使用和介绍过了Gitee的图床搭建，但没用几天就Gitee就加了防盗链，不能用了！所有只能掏钱买阿里云的OSS做图床了，查了下价钱也还能接受，新用户标准LRS存储一年也就9块钱。</p><p>下面就根据OSS配置再结合个人常用的软件来总结阿里云OSS相关配置和应用。</p><h2 id="安装软件（我这使用的是typora）"><a href="#安装软件（我这使用的是typora）" class="headerlink" title="安装软件（我这使用的是typora）"></a>安装软件（我这使用的是typora）</h2><p>鉴于此插件安装已有详细说明，在这里我就不重新搬运一边，大家可以参考一下下面的链接内容：<a href="https://github.com/Thobian/typora-plugins-win-img">安装说明</a></p><h2 id="购买阿里云oss"><a href="#购买阿里云oss" class="headerlink" title="购买阿里云oss"></a>购买阿里云oss</h2><p>1.首先区阿里云官网注册一个账号，这个很简单，点击下面链接小白式注册就行。</p><p><a href="https://www.aliyun.com/?spm=5176.12901015.ahjq0uaqt.1.4107525cJkgkaA">阿里云官网</a>：下面是阿里云主页官网，点进去注册即可。</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgtuchuang-20220415214226151.png" alt="image-20220415214226151"></p><p>2.购买阿里云存储服务<code>oss</code></p><p>注册好之后，在主页上面找到如下界面，点击对象存储<code>oos</code>，然后在点击折扣套餐</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgimgtuchuang2.png" alt="1607057946516"></p><p>3.套餐选择</p><p>点进去之后，根据自己二点需要进行套餐选择，我选择的是一年，可能以后一直需要使用，最后点击购买即可。</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgimgtuchuang3.png" alt="image-20220415201928841"></p><h2 id="配置阿里云OSS"><a href="#配置阿里云OSS" class="headerlink" title="配置阿里云OSS"></a>配置阿里云OSS</h2><p>1.进入官网：<a href="https://www.aliyun.com/">阿里云</a> ，在产品中选择 OSS，如果从来没开通过OSS，阿里云这里会给一份协议确认然后确认用户开通，这里就不截图了。</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgimg27a509d5a3e39d4d43d5413e44a0a6a21977b5c6.png@942w_372h_progressive.webp" alt="img"></p><p>2.进入<code>管理控制台</code>页面，刚进去看不知道要干啥，可以直接点击右边的OSS新手入门来了解也是一种方式。</p><p>3.我们切换到<code>Bucket列表</code>，选择<code>创建Bucket</code>。</p><blockquote><p>购买之后我们创建相关的Burket然后上传的时候就会从资源包扣费了。</p><p>注意你创建的Burket一定要和你的资源包匹配！</p><p>注意你创建的Burket一定要和你的资源包匹配！</p></blockquote><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgimgtuchuang-20220415204100227.png" alt="image-20220415204100227"></p><p>进入页面之后，我们填写下面的内容：</p><ul><li><p>Bucket名称，唯一命名，起个自己喜欢的名字即可。</p></li><li><p>地域：选择和自己所在城市比较近的城市，国内选择国内的区域和节点即可。</p></li><li><p>Endpoint：需要的话可以记录一下，比如我我选择的是：oss-cn-shenzhen.aliyuncs.com</p></li><li><p>存储类型：如果仅仅作为备份使用，低频访问比较合适，但是如果是对外使用不管流量多少还是建议用标准的，归档存储一般用于永久存储备份重要数据。</p></li><li><p>同城冗余和版本控制没啥必要，不用开。</p></li><li><p>读写权限：如果我们作为图床，需要用<code>公共读</code>允许匿名用户访问数据。（和PicGo配置有关）</p></li><li><p>实时日志和定期备份个人认为如果是自己用也是没有必要。</p></li></ul><p>4.AccessKey管理 </p><ul><li>接着是用户配置部分，我们需要在OSS中配置允许对外访问的AccessKey，这里我们点击右上角头像的<code>AccessKey管理</code>，这里其实用户体验不是很好。</li></ul><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgimgtuchuang-20220415203226744.png" alt="image-20220415203226744"></p><ul><li><p>由于图床会对外访问，所以建议不要使用主账户的AccessToken进行操作，而是使用子账户</p><p>方式进行操作处理，这里进入之后可以看到RAM访问控制，点击<code>创建用户</code>。 </p></li><li><p><code>创建用户</code>其他都可以自由操作，但是一定要选择<code>Open API</code>，这里需要进行安全验证。创建</p><p>完成之后，我们便拥有了AccessKey ID，AccessKey Secret这两个关键配置。</p></li></ul><p><code>注意这两个配置只能查看一次，建议复制到自己本地存储后面需要使用到。 </code></p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgimgimgtuchuang-20220415205213252.png" alt="image-20220415205213252"></p><p>5.设置权限</p><p>这时候就要给这个用户去设置权限。刚创建的子用户是没有任何权限的，这里你既然要对<code>OSS</code>进行上传写入的操作，肯定要给这个账户权限，可以看到在用户界面有拟刚才创建的子用户，并且可以配置权限</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgimgtuchuang10.png" alt="1607060149151"></p><p>这里在权限搜索框内输入<code>OSS</code>，就可以看到我们要配置的权限（管理<code>OSS</code>的权限），点击确定即可。</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgimgimgtuchuang-1a.png" alt="1607060173409"></p><h2 id="配置PicGo"><a href="#配置PicGo" class="headerlink" title="配置PicGo"></a>配置PicGo</h2><p>PicGo是什么这里就略过了，我们直接来看PicGo的配置</p><p>关键部分：在软件中我们选择<code>阿里云OSS配置</code>然后根据参数填写下面的内容：</p><ul><li><p>keyId：这里用之前新建的子用户的 AccessKey。</p></li><li><p>KeySecret：这里使用新建子用户的 AcessSecret。</p></li><li><p>存储空间名称：这里按照下图填写<strong>Bucket名称</strong>。</p></li><li><p>默认存储区域：这里按照下图填写Endpoint（地域节点），注意这里只需要.aliyuncs.com需要删除。</p></li></ul><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgimgtuchuang-20220415211037874.png" alt="image-20220415211037874"></p><p>最后个人的配置如下： </p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgimgtuchuang-20220415210444183.png" alt="image-20220415210444183"></p><h2 id="配置Typera"><a href="#配置Typera" class="headerlink" title="配置Typera"></a>配置Typera</h2><p>安装Typera这里就跳过了，我们打开软件之后选择<code>图像</code>，然后切换到PicGo，验证一把之后会提示成功信息，之后我们修改上面<code>插入图片时....</code>的操作改为<code>上传图片</code>，以后图片都会PicGo进行上传，不会出现在本地的一个临时路径了。 </p><blockquote><p>这里不是很建议直接执行上传操作，更建议先放到一个指定文件夹然后确认无误之后进行复制粘贴的上传替换，当然OSS流量基本够用。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> -教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>（不能用了！！！）使用PicGo + Gitee(码云)实现markdown图床</title>
      <link href="/2022/04/10/%E4%BD%BF%E7%94%A8PicGo%20+%20Gitee(%E7%A0%81%E4%BA%91)%E5%AE%9E%E7%8E%B0markdown%E5%9B%BE%E5%BA%8A/"/>
      <url>/2022/04/10/%E4%BD%BF%E7%94%A8PicGo%20+%20Gitee(%E7%A0%81%E4%BA%91)%E5%AE%9E%E7%8E%B0markdown%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<h2 id="前言：搞完没几天Gitee加了防盗链，不能用了！！！"><a href="#前言：搞完没几天Gitee加了防盗链，不能用了！！！" class="headerlink" title="前言：搞完没几天Gitee加了防盗链，不能用了！！！"></a><strong>前言</strong>：搞完没几天Gitee加了防盗链，不能用了！！！</h2><p>最近正在搞个人博客，想在自己博客中插入的图片链接随时随地在线预览，然后在网上找到了知乎的LeonG分享的相关文章，用图床来实现。</p><blockquote><p>图床是干什么的？<br>图床就是一个便于在博文中插入在线图片连接的个人图片仓库。设置图床之后，在自己博客中插入的图片链接就可以随时随地在线预览了，并且不会因为任何意外原因无法查看，除非自己亲自删除。</p></blockquote><p>神奇的<strong>PicGo</strong>就是为了解决这个问题诞生的，它可以将图片上传到指定的图床上，然后返回markdown链接，直接粘贴到你的文档中，就搞定啦</p><p>问题又来了，网上推荐七牛云阿里云都是要租赁服务器的，太麻烦还要钱，微博现在挂链接又很厉害。大部分人选择用github，但是github虽好却是国外的网站，速度终究比不上国内网站，研究了小半天，最终决定使用PicGo + 国内的github - <a href="https://link.zhihu.com/?target=https://gitee/com">码云</a>来实现markdown图床</p><p>废话说到这里，开始进入正题</p><hr><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul><li>首先下载 <a href="https://github.com/Molunerfinn/PicGo/releases">picgo安装包</a></li></ul><p>速度有点慢，没关系（想要更快可以自行百度下载油猴插件）</p><ul><li><p>安装之后打开主界面，选择最底下的插件设置，搜索<strong>gitee</strong></p></li><li><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imga1.png" alt="a1">点击安装gitee-uploader 1.1.2开始安装</p></li></ul><blockquote><p>这里注意一下，必须要先安装[node.js]才能安装插件，没装的自己装一下，然后重启就行。</p></blockquote><p>这个里我使用<strong>gitee-uploader 1.1.2</strong> 插件，gitee2.0.5插件上传的时候莫名有点问题。</p><hr><h2 id="建立gitee（码云）图床库"><a href="#建立gitee（码云）图床库" class="headerlink" title="建立gitee（码云）图床库"></a>建立gitee（码云）图床库</h2><p>注册码云的方法很简单，网站引导都是中文，不多说了，我们直接建立自己的图床库。(Gitee Pages 服务现在需要实名认证)</p><p>点击右上角的+号，新建仓库</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imga2.png" alt="a2"></p><p><strong>新建仓库的要点如下：</strong></p><ol><li>输入一个仓库名称，点击创建，创建之后显示以下界面，点击<strong>初始化readme文件</strong>（这个选项勾上，这样码云会自动给你的仓库建立master分支，这点很重要！）</li><li>初始化之后点击右边的管理，基本信息那把<strong>开源</strong>勾选保存（需要同意3个条款）</li></ol><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgblog6.jpg" alt="blog4"></p><hr><h2 id="配置PicGo"><a href="#配置PicGo" class="headerlink" title="配置PicGo"></a>配置PicGo</h2><p>安装了<strong>gitee-uploader 1.1.2</strong>插件之后，我们开始配置插件</p><p>配置插件的要点如下：</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imga4.png" alt="a4"></p><ul><li><p>repo：用户名&#x2F;仓库名称，比如我自己的仓库a-xiaoming&#x2F;img，找不到的可以直接复制仓库的url</p></li><li><p>branch：分支，这里写上master</p></li><li><p>token：填入码云的私人令牌</p></li><li><p>path：路径，一般写上imges</p></li><li><p>customPath：提交消息，这一项和下一项customURL都不用填。在提交到码云后，会显示提交消息，插件默认提交的是 <code>Upload 图片名 by picGo - 时间</code></p></li></ul><h3 id="获取token"><a href="#获取token" class="headerlink" title="获取token"></a>获取token</h3><ol><li><p>登录进自己的码云</p></li><li><p>点击头像，进入设置</p></li><li><p>找到右边安全设置里面的私人令牌</p></li><li><p>点击<code>生成新令牌</code>，把<strong>projects</strong>这一项勾上，其他的不用勾，然后提交</p></li></ol><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imga6.png" alt="a6"></p><p>这里需要验证一下密码，验证密码之后会出来一串数字，这一串数字就是你的token，将这串数字复制到刚才的配置里面去。</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imga7.png"></p><blockquote><p><strong>注意：这个令牌只会明文显示一次，建议在配置插件的时候再来生成令牌，直接复制进去，搞丢了又要重新生成一个。</strong></p></blockquote><p>现在保存你刚才的配置，然后将它设置为默认图床，大功告成。</p><hr><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>随便选一张图片上传（picgo也支持剪贴板上传），试试看，超级快有木有！比github快很多，0.1秒上传，而且导入到你的markdown编辑器里面也是秒识别你的图片内容。</p><p>上传之后默认复制链接，直接粘贴到你的markdown编辑器里，就可以愉快的进行写作了！</p><hr><h2 id="可能出现的一些问题"><a href="#可能出现的一些问题" class="headerlink" title="可能出现的一些问题"></a>可能出现的一些问题</h2><p>这里我挂一个我看到的 <a href="https://blog.csdn.net/m0_46503920/article/details/117917048">使用PicGo+gitee 搭建图床遇到的一些问题</a></p>]]></content>
      
      
      <categories>
          
          <category> -教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -gitee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Hexo +Gitee搭建个人博客</title>
      <link href="/2022/03/23/%E4%BD%BF%E7%94%A8Hexo-Gitee%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2022/03/23/%E4%BD%BF%E7%94%A8Hexo-Gitee%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li>Gitee Pagas要实名认证了，可先去注册Gitee先实名认证</li></ul><h2 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h2><ul><li>Windows系统电脑</li><li><a href="https://git-scm.com/">Git</a></li><li><a href="https://nodejs.org/en/">Node.js</a></li></ul><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>因为我们要用到<a href="https://git-scm.com/">Git</a>中的<a href="https://git-scm.com/download/win">Git Bash</a>，类似于Windows的cmd命令行，不过要好用许多(我开始是用cmd按视频的步骤来的，运行命令容易报错)。</p><ul><li><p><a href="https://git-scm.com/download/win">下载地址</a></p></li><li><p>安装步骤：双击下载好的exe文件，一路点击next就好了</p></li><li><p>安装完成之后打开Git Bash，输入</p><pre class="line-numbers language-none"><code class="language-none">git version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看版本：(我这里安装的版本是2.35.1)</p><pre class="line-numbers language-none"><code class="language-none">$ git version git version 2.35.1.windows.2 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>能看到版本号就说明你安装成功了，之后的命令都是在这里运行的</p></li></ul><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p><a href="https://hexo.io/">Hexo</a>是基于<a href="https://nodejs.org/en/">Node.js</a>制作的静态博客，我们要用到Node.js里面的<a href="https://www.npmjs.cn/">npm</a>(node package manager)包管理器来安装插件，如果你想玩Hexo博客，那么这个Node.js是必装的。</p><ul><li><p><a href="https://nodejs.org/en/download/">下载地址</a>(选择自己电脑版本相对应的包来下载)</p></li><li><p>安装步骤：双击下载好的msi文件，也是一路下一步就好了</p></li><li><p>安装完成后打开Git Bash，输入<code>node -v</code>和<code>npm -v</code>查看node和npm的版本：</p><pre class="line-numbers language-none"><code class="language-none">$ node -vv12.14.1$ npm -v6.13.4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>到这里前置步骤就已经算完成了，接下来我们就来安装Hexo博客</p></li></ul><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>安装<a href="https://hexo.io/">Hexo</a>，我们需要借助<a href="https://www.npmjs.cn/">npm</a>这个工具来安装，但是我们国内下载镜像源的速度很慢，所以我们可以先利用npm工具来安装一个<a href="https://npm.taobao.org/">cnpm</a>工具(国内的淘宝npm镜像源)，这样一来速度会快很多。</p><ul><li><p>安装cnpm：(安装完之后照样可以用’cn’<code>cnpm -v</code>来查看版本号验证是否成功)</p><pre class="line-numbers language-none"><code class="language-none">$ npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>用cnpm安装Hexo</p><pre class="line-numbers language-none"><code class="language-none">$ cnpm install -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>接着用<code>Hexo -v</code>来验证是否安装成功</p><pre class="line-numbers language-none"><code class="language-none">$ hexo -vhexo-cli: 3.1.0os: Windows_NT 10.0.17134 win32 x64node: 12.14.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>如果出现以上信息，那么恭喜安装成功了</p></li></ul><h2 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h2><ul><li><p>在你的电脑上建一个文件夹，命名没有要求，我这里创建的是blog，文件夹路径也无所谓，最好装在出了系统盘的固态硬盘中，路径要自己找得到。</p></li><li><p>在创建的文件夹目录下右键选择<code>Git Bash Here</code>，也就是在此处打开Git Bash终端</p></li><li><p>输入Hexo初始化命令</p></li></ul><pre class="line-numbers language-none"><code class="language-none">$ hexo init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令执行需要一定的时间，请耐心等待</p><p>初始化完成之后可以查看指定文件夹目录下有：</p><ol><li>node_modules: 依赖包</li><li>public：存放生成的页面</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题</li><li>_config.yml: 博客的配置文件</li></ol><ul><li>打开Hexo服务</li></ul><pre class="line-numbers language-none"><code class="language-none">$ hexo sINFO  Start processingINFO  Hexo is running at http:&#x2F;&#x2F;localhost:4000 . Press Ctrl+C to stop.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这样你就可以再浏览器输入:localhost:4000来访问你的博客啦，使用Ctrl+C可以关闭服务。</p><p>大概是这样：</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgblog.jpg" alt="blog"></p><ul><li>用Hexo写一篇博客</li></ul><pre class="line-numbers language-none"><code class="language-none">$ hexo new &quot;我的第一篇博客&quot;INFO  Created: E:\bolg\source\_posts\我的第一篇博客.md<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>到D:\bolg\source_posts目录下打开我的第一篇博客.md进行编辑(我使用的是Typora)：</li></ul><pre class="line-numbers language-none"><code class="language-none">---title: 我的第一篇博客date: 2020-02-03 21:16:52tags:---## 第一章内容---## 第二章内容---## 参考资料https:&#x2F;&#x2F;ouwen.gitee.io<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：这里的md文件是基于markdown语法进行编辑的，不了解的朋友可以百度学习一下，很简单的，几分钟就能看明白，相信你不是问题。</p><ul><li>编辑完保存文件，重启Hexo服务</li></ul><pre class="line-numbers language-none"><code class="language-none">$ hexo clean          # 清除所有记录 $ hexo generate       # 生成静态网页 简写：hexo g$ hexo server         # 启动服务 简写：hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>打开浏览器输入localhost:4000：</li></ul><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgblog2.jpg" alt="blog2"></p><h2 id="将博客部署到Gitee上"><a href="#将博客部署到Gitee上" class="headerlink" title="将博客部署到Gitee上"></a>将博客部署到Gitee上</h2><p>上面访问的localhost:4000是本地服务器端口，我们的博客不可能是放在本地服务器的，我们需要把博客部署到远端去。我这里推荐的一个免费的部署的方式就是部署到<a href="https://gitee.com/">Gitee</a>上，部署好之后就可以通过访问<a href="https://gitee.com/">Gitee</a>上的那个地址来访问我们的博客。</p><ul><li><p>进到<a href="https://gitee.com/">Gitee</a>官网，注册账号并登陆</p></li><li><p>点击个人主页右上角新建个人仓库(我这已经创建过了)</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgblog3.jpg" alt="blog3"></p></li><li><p>点进已经创建的仓库（blog），点击管理，把仓库设置为开源，保存</p><p> <img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgblog6.jpg" alt="blog6"></p></li><li><p>打开Hexo的配置文件<code>_config.yml</code> <strong>注意冒号后面都有一个空格</strong></p> <pre class="line-numbers language-none"><code class="language-none">type: gitrepo: https:&#x2F;&#x2F;gitee.com&#x2F;a-xiaoming&#x2F;blog #仓库的urlbranch: master <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>这里先安装一个Hexo插件</p><pre class="line-numbers language-none"><code class="language-none">cnpm install hexo-deployer-git --save  #通过cpnm安装git插件git config --global user.email &#39;******@qq.com&#39;  #设置gitee邮箱（gitee的注册邮箱）git config --global user.name &#39;****&#39;            #设置用户名（gitee的y注册昵称）hexo d  #上传到gitee的远端仓库# 在上传时，需要再次输入gitee的用户名username和密码password<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>上传成功仓库会多出一些文件</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgblog4.jpg" alt="blog4"></p></li><li><p>然后<strong>勾选强制使用HTTPS</strong>，点击启动或更新之后</p></li><li><p>访问Gitee Page服务的网站地址就可以成功将本地的博客部署到了远端仓库，这样你的小伙伴也能在自己的电脑访问你的Gitee Page服务网站看到你的博客啦。</p><p><strong>注意每次更改网页重新上传到仓库都要到这里来更新服务。</strong></p></li></ul><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/imgblog5.jpg" alt="blog5"></p>]]></content>
      
      
      <categories>
          
          <category> -教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -gitee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JDK环境变量配置</title>
      <link href="/2022/01/10/JDK%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/01/10/JDK%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>jdk安装完成后：</p><ol><li>右键我的电脑属性找到高级属性设置：</li></ol><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301121457487.png" alt="image-20230112145757448"></p><ol start="2"><li>点击环境变量</li></ol><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301121459368.png" alt="image-20230112145912327"></p><ol start="3"><li><p>配置环境变量：</p><p>在系统变量点击 <code>新建</code></p><p>变量名输入：<code>JAVA_HOME</code>(全部大写！)</p><p>变量值输入：盘符：\jdk安装的路径</p></li></ol><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301121515993.png" alt="image-20230112151550950"></p><p>​然后再新建：</p><p>​变量名输入：<code>CLASSPATH</code>（这个也是全部大写！！）</p><p>​变量值输入：<code>.;%JAVA_HOME% \lib</code>（注意是英文格式下：点 分号 百分号JAVA_HOME百分号 反斜杠 lib）千万别写错！~~~</p><p>​然后选中path编辑：</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301121518876.png" alt="image-20230112151845832"></p><p>然后新建输入<code>%JAVA_HOME%\bin</code>（看仔细，千万别多看！！！）</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301121519501.png" alt="image-20230112151905454"></p><p>​然后上移，确定.</p><ol start="4"><li>确认配置成功：</li></ol><p>​win+r：打开运行，输入cmd，回车</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301121520605.png" alt="image-20230112152021570"></p><p>​输入：java 回车（出现下面一堆！）</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301121522304.png" alt="image-20230112152218258"></p><p>OK，配置成功！</p>]]></content>
      
      
      <categories>
          
          <category> -教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>notepad++下载及安装步骤</title>
      <link href="/2021/01/10/notepad++%E4%B8%8B%E8%BD%BD%E5%8F%8A%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
      <url>/2021/01/10/notepad++%E4%B8%8B%E8%BD%BD%E5%8F%8A%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="notepad-下载及安装步骤"><a href="#notepad-下载及安装步骤" class="headerlink" title="notepad++下载及安装步骤"></a>notepad++下载及安装步骤</h1><h2 id="1、下载"><a href="#1、下载" class="headerlink" title="1、下载"></a>1、下载</h2><p>下载地址<a href="https://notepad-plus.en.softonic.com/download">https://notepad-plus.en.softonic.com/download</a></p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301101512550.png" alt="image-20230110151209419"></p><p>有人反应无法下载，我给网盘放了一份，版本8.4.4的<br>链接：<a href="https://pan.baidu.com/s/17lCiOYGzixkY3YDcNcgijQ?pwd=lhm0">https://pan.baidu.com/s/17lCiOYGzixkY3YDcNcgijQ?pwd=lhm0</a><br>提取码：lhm0</p><h2 id="2、安装"><a href="#2、安装" class="headerlink" title="2、安装"></a>2、安装</h2><p>点击exe文件</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301101515118.png" alt="image-20230110151543081"></p><p>选择语音，点击OK</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301101516775.png" alt="image-20230110151646716"></p><p>点击下一步</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301101517032.png" alt="image-20230110151709986"></p><p>点击我接受</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301101528142.png" alt="image-20230110152814091"></p><p>选好安装目录之后点击下一步；点击下一步；点击安装；完成；</p><h2 id="3、汉化"><a href="#3、汉化" class="headerlink" title="3、汉化"></a>3、汉化</h2><p>如果是英文版，可以改配置来实现汉化，settings–&gt;preferences–&gt;general–&gt;选择中文</p><p><img src="https://a-xiaoming.oss-cn-beijing.aliyuncs.com/img202301101541841.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> -下载安装教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -notepad++ </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
