<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/blog/2022/04/10/Maven/"/>
      <url>/blog/2022/04/10/Maven/</url>
      
        <content type="html"><![CDATA[<h1 id="Maven简介"><a href="#Maven简介" class="headerlink" title="Maven简介"></a>Maven简介</h1><h2 id="Maven是什么"><a href="#Maven是什么" class="headerlink" title="Maven是什么"></a>Maven是什么</h2><p>Maven的本质是一个项目管理工具，将项目开发和管理过程抽象成一个项目对象模型（POM）</p><p>POM（Project Object Model）：项目对象模型</p><p><img src="https://gitee.com/a-xiaoming/img2/raw/master/imges/image-20220410202738903.png" alt="image-20220410202738903"></p><h2 id="Maven的作用"><a href="#Maven的作用" class="headerlink" title="Maven的作用"></a>Maven的作用</h2><p>项目构建：提供标准的、跨平台的自动化项目构建方式</p><p>依赖管理：方便快捷的管理项目依赖的资源(jar包)，避免资源间的版本冲突问题</p><p>统一开发结构：提供标准的、统一的项目结构</p><h1 id="Maven的下载与配置"><a href="#Maven的下载与配置" class="headerlink" title="Maven的下载与配置"></a>Maven的下载与配置</h1><h2 id="一、需要准备的东西"><a href="#一、需要准备的东西" class="headerlink" title="一、需要准备的东西"></a>一、需要准备的东西</h2><p>确定电脑上已经成功安装JDK</p><h2 id="二、去官网下载Maven"><a href="#二、去官网下载Maven" class="headerlink" title="二、去官网下载Maven"></a>二、去官网下载Maven</h2><p>下载bin.zip压缩包，直接解压到无中文路径下  <a href="https://maven.apache.org/download.cgi">下载地址</a></p><p>注意：Maven3.2.*版本需要JDK1.6的支持，Maven3.3.*以上需要JDK1.7以上的支持</p><h2 id="三、配置Maven环境变量"><a href="#三、配置Maven环境变量" class="headerlink" title="三、配置Maven环境变量"></a>三、配置Maven环境变量</h2><p>1.在我的电脑——-属性——-高级系统设置———环境变量———系统变量——–新建</p><p>新建环境变量MAVEN_HOME,变量值填 Maven安装的路径目录</p><p><img src="E:\Java笔记\Picture\环境变量(1).png" alt="环境变量(1)"></p><p>2.编辑环境变量Path，追加：%MAVEN_HOME%\bin\</p><p><img src="E:\Java笔记\Picture\环境变量2.png" alt="环境变量2"></p><p>3.至此，我们可以通过打开cmd窗口输入“mvn -v”检查一下我们是否安装成功，如显示以下界面，表示Maven已经安装配置成功：</p><p><img src="E:\Java笔记\Picture\cmd.png" alt="cmd"></p><h2 id="四、修改maven配置文件"><a href="#四、修改maven配置文件" class="headerlink" title="四、修改maven配置文件"></a>四、修改maven配置文件</h2><p>通常我们需要修改解压目录下<code>conf/settings.xml</code>文件</p><p><img src="E:\Java笔记\Picture\Maven1.png" alt="Maven1"></p><h3 id="1-本地仓库位置修改"><a href="#1-本地仓库位置修改" class="headerlink" title="1. 本地仓库位置修改"></a><strong>1. 本地仓库位置修改</strong></h3><p>在**<localRepository>**标签内添加自己的本地仓库路径</p><pre class="line-numbers language-none"><code class="language-none">&lt;!--自定义maven仓库路径--&gt;&lt;localRepository&gt;添加自己建的本地仓库路径&lt;&#x2F;localRepository&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2-修改maven默认的JDK版本（默认为1-4）"><a href="#2-修改maven默认的JDK版本（默认为1-4）" class="headerlink" title="2. 修改maven默认的JDK版本（默认为1.4）"></a>2. 修改maven默认的JDK版本（默认为1.4）</h3><p>在&lt;**profiles**&gt;标签下添加一个&lt;**profile**&gt;标签，修改maven默认的JDK版本。</p><pre class="line-numbers language-none"><code class="language-none">&lt;profile&gt;　　&lt;id&gt;jdk-1.8&lt;&#x2F;id&gt;　　&lt;activation&gt;　　　　&lt;activeByDefault&gt;true&lt;&#x2F;activeByDefault&gt;　　　　&lt;jdk&gt;1.8&lt;&#x2F;jdk&gt;　　&lt;&#x2F;activation&gt;　　&lt;properties&gt;　　　　&lt;maven.compiler.source&gt;1.8&lt;&#x2F;maven.compiler.source&gt;　　　　&lt;maven.compiler.target&gt;1.8&lt;&#x2F;maven.compiler.target&gt;　　　　&lt;maven.compiler.compilerVersion&gt;1.8&lt;&#x2F;maven.compiler.compilerVersion&gt;　　&lt;&#x2F;properties&gt;&lt;&#x2F;profile&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-添加国内镜像源"><a href="#3-添加国内镜像源" class="headerlink" title="3. 添加国内镜像源"></a><strong>3. 添加国内镜像源</strong></h3><p>添加**<mirrors><strong>标签下</strong><mirror>**，添加国内镜像源，这样下载jar包速度很快。一般使用阿里云镜像库即可。</p><pre class="line-numbers language-none"><code class="language-none">&lt;!-- 阿里云仓库 --&gt;&lt;mirror&gt;    &lt;id&gt;alimaven&lt;&#x2F;id&gt;    &lt;mirrorOf&gt;central&lt;&#x2F;mirrorOf&gt;    &lt;name&gt;aliyun maven&lt;&#x2F;name&gt;    &lt;url&gt;http:&#x2F;&#x2F;maven.aliyun.com&#x2F;nexus&#x2F;content&#x2F;repositories&#x2F;central&#x2F;&lt;&#x2F;url&gt;&lt;&#x2F;mirror&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-IDEA配置Maven"><a href="#4-IDEA配置Maven" class="headerlink" title="4.IDEA配置Maven"></a>4.IDEA配置Maven</h3><p>打开IDEA，点击文件（File），点击设置（setting），在搜索框中搜索Maven，然后如图设置。</p><p><img src="E:\Java笔记\Picture\Maven4.png" alt="Maven3"></p><p>#Maven基本使用</p><p>##Maven常用命令</p><p>compile：编译<br>clean：清理<br>test：测试<br>package：打包<br>install：安装</p><h1 id="Maven的生命周期"><a href="#Maven的生命周期" class="headerlink" title="Maven的生命周期"></a>Maven的生命周期</h1><p><img src="E:\Java笔记\Picture\Maven2.png" alt="Maven2"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用PicGo + Gitee(码云)实现markdown图床</title>
      <link href="/blog/2022/03/24/%E4%BD%BF%E7%94%A8PicGo%20+%20Gitee(%E7%A0%81%E4%BA%91)%E5%AE%9E%E7%8E%B0markdown%E5%9B%BE%E5%BA%8A/"/>
      <url>/blog/2022/03/24/%E4%BD%BF%E7%94%A8PicGo%20+%20Gitee(%E7%A0%81%E4%BA%91)%E5%AE%9E%E7%8E%B0markdown%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a><strong>前言</strong>：</h2><p>最近正在搞个人博客，想在自己博客中插入的图片链接随时随地在线预览，然后在网上找到了知乎的LeonG分享的相关文章，用图床来实现。</p><blockquote><p>图床是干什么的？<br>图床就是一个便于在博文中插入在线图片连接的个人图片仓库。设置图床之后，在自己博客中插入的图片链接就可以随时随地在线预览了，并且不会因为任何意外原因无法查看，除非自己亲自删除。</p></blockquote><p>神奇的<strong>PicGo</strong>就是为了解决这个问题诞生的，它可以将图片上传到指定的图床上，然后返回markdown链接，直接粘贴到你的文档中，就搞定啦</p><p>问题又来了，网上推荐七牛云阿里云都是要租赁服务器的，太麻烦还要钱，微博现在挂链接又很厉害。大部分人选择用github，但是github虽好却是国外的网站，速度终究比不上国内网站，研究了小半天，最终决定使用PicGo + 国内的github - <a href="https://link.zhihu.com/?target=https://gitee/com">码云</a>来实现markdown图床</p><p>废话说到这里，开始进入正题</p><hr><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul><li>首先下载 <a href="https://github.com/Molunerfinn/PicGo/releases">picgo安装包</a></li></ul><p>速度有点慢，没关系（想要更快可以自行百度下载油猴插件）</p><ul><li>安装之后打开主界面，选择最底下的插件设置，搜索<strong>gitee</strong></li></ul><p><img src="https://gitee.com/a-xiaoming/img/raw/master/imges/a1.png"></p><ul><li>点击安装gitee-uploader 1.1.2开始安装</li></ul><blockquote><p>这里注意一下，必须要先安装[node.js]才能安装插件，没装的自己装一下，然后重启就行。</p></blockquote><p>这个里我使用<strong>gitee-uploader 1.1.2</strong> 插件，gitee2.0.5插件上传的时候莫名有点问题。</p><hr><h2 id="建立gitee（码云）图床库"><a href="#建立gitee（码云）图床库" class="headerlink" title="建立gitee（码云）图床库"></a>建立gitee（码云）图床库</h2><p>注册码云的方法很简单，网站引导都是中文，不多说了，我们直接建立自己的图床库。(Gitee Pages 服务现在需要实名认证)</p><p>点击右上角的+号，新建仓库</p><p><img src="https://gitee.com/a-xiaoming/img/raw/master/imges/a2.png"></p><p><strong>新建仓库的要点如下：</strong></p><ol><li>输入一个仓库名称，点击创建，创建之后显示以下界面，点击<strong>初始化readme文件</strong>（这个选项勾上，这样码云会自动给你的仓库建立master分支，这点很重要！）</li><li>初始化之后点击右边的管理，基本信息那把<strong>开源</strong>勾选保存（需要同意3个条款）</li></ol><p><img src="https://gitee.com/a-xiaoming/img/raw/master/imges/blog6.jpg"></p><hr><h2 id="配置PicGo"><a href="#配置PicGo" class="headerlink" title="配置PicGo"></a>配置PicGo</h2><p>安装了<strong>gitee-uploader 1.1.2</strong>插件之后，我们开始配置插件</p><p>配置插件的要点如下：</p><p><img src="https://gitee.com/a-xiaoming/img/raw/master/imges/a4.png"></p><ul><li><p>repo：用户名&#x2F;仓库名称，比如我自己的仓库a-xiaoming&#x2F;img，找不到的可以直接复制仓库的url</p></li><li><p>branch：分支，这里写上master</p></li><li><p>token：填入码云的私人令牌</p></li><li><p>path：路径，一般写上imges</p></li><li><p>customPath：提交消息，这一项和下一项customURL都不用填。在提交到码云后，会显示提交消息，插件默认提交的是 <code>Upload 图片名 by picGo - 时间</code></p></li></ul><h3 id="获取token"><a href="#获取token" class="headerlink" title="获取token"></a>获取token</h3><ol><li>登录进自己的码云</li><li>点击头像，进入设置</li><li>找到右边安全设置里面的私人令牌</li></ol><p><img src="https://gitee.com/a-xiaoming/img/raw/master/imges/a5.png"></p><ol start="4"><li>点击<code>生成新令牌</code>，把<strong>projects</strong>这一项勾上，其他的不用勾，然后提交</li></ol><p><img src="https://gitee.com/a-xiaoming/img/raw/master/imges/a6.png"></p><p>这里需要验证一下密码，验证密码之后会出来一串数字，这一串数字就是你的token，将这串数字复制到刚才的配置里面去。</p><p><img src="https://gitee.com/a-xiaoming/img/raw/master/imges/a7.png"></p><blockquote><p><strong>注意：这个令牌只会明文显示一次，建议在配置插件的时候再来生成令牌，直接复制进去，搞丢了又要重新生成一个。</strong></p></blockquote><p>现在保存你刚才的配置，然后将它设置为默认图床，大功告成。</p><hr><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>随便选一张图片上传（picgo也支持剪贴板上传），试试看，超级快有木有！比github快很多，0.1秒上传，而且导入到你的markdown编辑器里面也是秒识别你的图片内容。</p><p>上传之后默认复制链接，直接粘贴到你的markdown编辑器里，就可以愉快的进行写作了！</p><hr><h2 id="可能出现的一些问题"><a href="#可能出现的一些问题" class="headerlink" title="可能出现的一些问题"></a>可能出现的一些问题</h2><p>这里我挂一个我看到的 <a href="https://blog.csdn.net/m0_46503920/article/details/117917048">使用PicGo+gitee 搭建图床遇到的一些问题</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用Hexo +Gitee搭建个人博客</title>
      <link href="/blog/2022/03/23/%E4%BD%BF%E7%94%A8Hexo-Gitee%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/blog/2022/03/23/%E4%BD%BF%E7%94%A8Hexo-Gitee%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li>Gitee Pagas要实名认证了，可先去注册Gitee先实名认证</li></ul><h2 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h2><ul><li>Windows系统电脑</li><li><a href="https://git-scm.com/">Git</a></li><li><a href="https://nodejs.org/en/">Node.js</a></li></ul><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>因为我们要用到<a href="https://git-scm.com/">Git</a>中的<a href="https://git-scm.com/download/win">Git Bash</a>，类似于Windows的cmd命令行，不过要好用许多(我开始是用cmd按视频的步骤来的，运行命令容易报错)。</p><ul><li><p><a href="https://git-scm.com/download/win">下载地址</a></p></li><li><p>安装步骤：双击下载好的exe文件，一路点击next就好了</p></li><li><p>安装完成之后打开Git Bash，输入</p><pre class="line-numbers language-none"><code class="language-none">git version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看版本：(我这里安装的版本是2.35.1)</p><pre class="line-numbers language-none"><code class="language-none">$ git version git version 2.35.1.windows.2 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>能看到版本号就说明你安装成功了，之后的命令都是在这里运行的</p></li></ul><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p><a href="https://hexo.io/">Hexo</a>是基于<a href="https://nodejs.org/en/">Node.js</a>制作的静态博客，我们要用到Node.js里面的<a href="https://www.npmjs.cn/">npm</a>(node package manager)包管理器来安装插件，如果你想玩Hexo博客，那么这个Node.js是必装的。</p><ul><li><p><a href="https://nodejs.org/en/download/">下载地址</a>(选择自己电脑版本相对应的包来下载)</p></li><li><p>安装步骤：双击下载好的msi文件，也是一路下一步就好了</p></li><li><p>安装完成后打开Git Bash，输入<code>node -v</code>和<code>npm -v</code>查看node和npm的版本：</p><pre class="line-numbers language-none"><code class="language-none">$ node -vv12.14.1$ npm -v6.13.4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>到这里前置步骤就已经算完成了，接下来我们就来安装Hexo博客</p></li></ul><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>安装<a href="https://hexo.io/">Hexo</a>，我们需要借助<a href="https://www.npmjs.cn/">npm</a>这个工具来安装，但是我们国内下载镜像源的速度很慢，所以我们可以先利用npm工具来安装一个<a href="https://npm.taobao.org/">cnpm</a>工具(国内的淘宝npm镜像源)，这样一来速度会快很多。</p><ul><li><p>安装cnpm：(安装完之后照样可以用’cn’<code>cnpm -v</code>来查看版本号验证是否成功)</p><pre class="line-numbers language-none"><code class="language-none">$ npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>用cnpm安装Hexo</p><pre class="line-numbers language-none"><code class="language-none">$ cnpm install -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>接着用<code>Hexo -v</code>来验证是否安装成功</p><pre class="line-numbers language-none"><code class="language-none">$ hexo -vhexo-cli: 3.1.0os: Windows_NT 10.0.17134 win32 x64node: 12.14.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>如果出现以上信息，那么恭喜安装成功了</p></li></ul><h2 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h2><ul><li><p>在你的电脑上建一个文件夹，命名没有要求，我这里创建的是blog，文件夹路径也无所谓，最好装在出了系统盘的固态硬盘中，路径要自己找得到。</p></li><li><p>在创建的文件夹目录下右键选择<code>Git Bash Here</code>，也就是在此处打开Git Bash终端</p></li><li><p>输入Hexo初始化命令</p></li></ul><pre class="line-numbers language-none"><code class="language-none">$ hexo init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令执行需要一定的时间，请耐心等待</p><p>初始化完成之后可以查看指定文件夹目录下有：</p><ol><li>node_modules: 依赖包</li><li>public：存放生成的页面</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题</li><li>_config.yml: 博客的配置文件</li></ol><ul><li>打开Hexo服务</li></ul><pre class="line-numbers language-none"><code class="language-none">$ hexo sINFO  Start processingINFO  Hexo is running at http:&#x2F;&#x2F;localhost:4000 . Press Ctrl+C to stop.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这样你就可以再浏览器输入:localhost:4000来访问你的博客啦，使用Ctrl+C可以关闭服务。</p><p>大概是这样：</p><p><img src="https://gitee.com/a-xiaoming/img/raw/master/imges/blog.jpg"></p><ul><li>用Hexo写一篇博客</li></ul><pre class="line-numbers language-none"><code class="language-none">$ hexo new &quot;我的第一篇博客&quot;INFO  Created: E:\bolg\source\_posts\我的第一篇博客.md<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>到D:\bolg\source_posts目录下打开我的第一篇博客.md进行编辑(我使用的是Typora)：</li></ul><pre class="line-numbers language-none"><code class="language-none">---title: 我的第一篇博客date: 2020-02-03 21:16:52tags:---## 第一章内容---## 第二章内容---## 参考资料https:&#x2F;&#x2F;ouwen.gitee.io<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：这里的md文件是基于markdown语法进行编辑的，不了解的朋友可以百度学习一下，很简单的，几分钟就能看明            白，相信你不是问题。</p><ul><li>编辑完保存文件，重启Hexo服务</li></ul><pre class="line-numbers language-none"><code class="language-none">$ hexo clean          # 清除所有记录 $ hexo generate       # 生成静态网页 简写：hexo g$ hexo server         # 启动服务 简写：hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>打开浏览器输入localhost:4000：</li></ul><p><img src="https://gitee.com/a-xiaoming/img/raw/master/imges/blog2.jpg"></p><h2 id="将博客部署到Gitee上"><a href="#将博客部署到Gitee上" class="headerlink" title="将博客部署到Gitee上"></a>将博客部署到Gitee上</h2><p>上面访问的localhost:4000是本地服务器端口，我们的博客不可能是放在本地服务器的，我们需要把博客部署到远端去。我这里推荐的一个免费的部署的方式就是部署到<a href="https://gitee.com/">Gitee</a>上，部署好之后就可以通过访问<a href="https://gitee.com/">Gitee</a>上的那个地址来访问我们的博客。</p><ul><li><p>进到<a href="https://gitee.com/">Gitee</a>官网，注册账号并登陆</p></li><li><p>点击个人主页右上角新建个人仓库(我这已经创建过了)</p><p><img src="https://gitee.com/a-xiaoming/img/raw/master/imges/blog3.jpg"></p></li><li><p>点进已经创建的仓库（blog），点击管理，把仓库设置为开源，保存</p><p> <img src="https://gitee.com/a-xiaoming/img/raw/master/imges/blog6.jpg"></p></li><li><p>打开Hexo的配置文件<code>_config.yml</code> <strong>注意冒号后面都有一个空格</strong></p> <pre class="line-numbers language-none"><code class="language-none">type: gitrepo: https:&#x2F;&#x2F;gitee.com&#x2F;a-xiaoming&#x2F;blog #仓库的urlbranch: master <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>这里先安装一个Hexo插件</p><pre class="line-numbers language-none"><code class="language-none">cnpm install hexo-deployer-git --save  #通过cpnm安装git插件git config --global user.email &#39;******@qq.com&#39;  #设置gitee邮箱（gitee的注册邮箱）git config --global user.name &#39;****&#39;            #设置用户名（gitee的y注册昵称）hexo d  #上传到gitee的远端仓库# 在上传时，需要再次输入gitee的用户名username和密码password<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>上传成功仓库会多出一些文件</p><p><img src="https://gitee.com/a-xiaoming/img/raw/master/imges/blog4.jpg"></p></li><li><p>然后<strong>勾选强制使用HTTPS</strong>，点击启动或更新之后</p></li><li><p>访问Gitee Page服务的网站地址就可以成功将本地的博客部署到了远端仓库，这样你的小伙伴也能在自己的电脑访问你的Gitee Page服务网站看到你的博客啦。</p><p><strong>注意每次更改网页重新上传到仓库都要到这里来更新服务。</strong></p></li></ul><p><img src="https://gitee.com/a-xiaoming/img/raw/master/imges/blog5.jpg"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/blog/2022/03/22/hello-world/"/>
      <url>/blog/2022/03/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
